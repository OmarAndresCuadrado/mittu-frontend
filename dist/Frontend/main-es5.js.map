{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/general/footer/footer.component.ts","webpack:///src/app/general/footer/footer.component.html","webpack:///src/app/general/header-administration/header-administration.component.ts","webpack:///src/app/general/header-administration/header-administration.component.html","webpack:///src/app/general/header/header.component.ts","webpack:///src/app/general/header/header.component.html","webpack:///src/app/general/logged-nvbar/logged-nvbar.component.ts","webpack:///src/app/general/logged-nvbar/logged-nvbar.component.html","webpack:///src/app/general/slide-var/slide-var.component.ts","webpack:///src/app/general/slide-var/slide-var.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/role.guard.ts","webpack:///src/app/interceptors/AuthInterceptor.ts","webpack:///src/app/interceptors/TokenInterceptor.ts","webpack:///src/app/interfaces/Mensaje.ts","webpack:///src/app/interfaces/grupalCourseEntity.ts","webpack:///src/app/interfaces/studentEntity.ts","webpack:///src/app/interfaces/teacherEntity.ts","webpack:///src/app/interfaces/userEntity.ts","webpack:///src/app/modal-detail/modal-detail.component.ts","webpack:///src/app/modal-detail/modal-detail.component.html","webpack:///src/app/modals/chat/chat.component.ts","webpack:///src/app/modals/chat/chat.component.html","webpack:///src/app/modals/grupal-course-form-create/grupal-course-form-create.component.ts","webpack:///src/app/modals/grupal-course-form-create/grupal-course-form-create.component.html","webpack:///src/app/modals/grupal-course-form/grupal-course-form.component.ts","webpack:///src/app/modals/grupal-course-form/grupal-course-form.component.html","webpack:///src/app/modals/grupal-course-students/grupal-course-students.component.ts","webpack:///src/app/modals/grupal-course-students/grupal-course-students.component.html","webpack:///src/app/modals/grupal-course/grupal-course.component.ts","webpack:///src/app/modals/grupal-course/grupal-course.component.html","webpack:///src/app/modals/student-timer/student-timer.component.ts","webpack:///src/app/modals/student-timer/student-timer.component.html","webpack:///src/app/modals/teacher-info/teacher-info.component.ts","webpack:///src/app/modals/teacher-info/teacher-info.component.html","webpack:///src/app/modals/teacher-timer/teacher-timer.component.ts","webpack:///src/app/modals/teacher-timer/teacher-timer.component.html","webpack:///src/app/modals/tutoria-form-create/tutoria-form-create.component.ts","webpack:///src/app/modals/tutoria-form-create/tutoria-form-create.component.html","webpack:///src/app/modals/tutoria-form/tutoria-form.component.ts","webpack:///src/app/modals/tutoria-form/tutoria-form.component.html","webpack:///src/app/modals/tutoria/tutoria.component.ts","webpack:///src/app/modals/tutoria/tutoria.component.html","webpack:///src/app/modals/upload-course-image/upload-course-image.component.ts","webpack:///src/app/modals/upload-course-image/upload-course-image.component.html","webpack:///src/app/modals/upload-grupal-course-image/upload-grupal-course-image.component.ts","webpack:///src/app/modals/upload-grupal-course-image/upload-grupal-course-image.component.html","webpack:///src/app/modals/upload-teacher-image/upload-teacher-image.component.ts","webpack:///src/app/modals/upload-teacher-image/upload-teacher-image.component.html","webpack:///src/app/pages/administration/admin-panel/admin-panel.component.ts","webpack:///src/app/pages/administration/admin-panel/admin-panel.component.html","webpack:///src/app/pages/administration/courses/course-form/course-form.component.ts","webpack:///src/app/pages/administration/courses/course-form/course-form.component.html","webpack:///src/app/pages/administration/courses/courses.component.ts","webpack:///src/app/pages/administration/courses/courses.component.html","webpack:///src/app/pages/administration/grupal-course/grupal-course.component.ts","webpack:///src/app/pages/administration/grupal-course/grupal-course.component.html","webpack:///src/app/pages/administration/students/student-form/student-form.component.ts","webpack:///src/app/pages/administration/students/student-form/student-form.component.html","webpack:///src/app/pages/administration/students/students.component.ts","webpack:///src/app/pages/administration/students/students.component.html","webpack:///src/app/pages/administration/subjects/subject-form/subject-form.component.ts","webpack:///src/app/pages/administration/subjects/subject-form/subject-form.component.html","webpack:///src/app/pages/administration/subjects/subjects.component.ts","webpack:///src/app/pages/administration/subjects/subjects.component.html","webpack:///src/app/pages/administration/teachers/teacher-form/teacher-form.component.ts","webpack:///src/app/pages/administration/teachers/teacher-form/teacher-form.component.html","webpack:///src/app/pages/administration/teachers/teachers.component.ts","webpack:///src/app/pages/administration/teachers/teachers.component.html","webpack:///src/app/pages/home/home-loged/home-loged.component.ts","webpack:///src/app/pages/home/home-loged/home-loged.component.html","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/private-chat/private-chat.component.ts","webpack:///src/app/pages/private-chat/private-chat.component.html","webpack:///src/app/pages/register-student/register-student.component.ts","webpack:///src/app/pages/register-student/register-student.component.html","webpack:///src/app/pages/register-teacher/register-teacher.component.ts","webpack:///src/app/pages/register-teacher/register-teacher.component.html","webpack:///src/app/pages/student-panel/student-panel.component.ts","webpack:///src/app/pages/student-panel/student-panel.component.html","webpack:///src/app/pages/teacher-references/teacher-references.component.ts","webpack:///src/app/pages/teacher-references/teacher-references.component.html","webpack:///src/app/pages/teacher/panel/panel.component.ts","webpack:///src/app/pages/teacher/panel/panel.component.html","webpack:///src/app/pages/transaction/transaction.component.ts","webpack:///src/app/pages/transaction/transaction.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/course.service.ts","webpack:///src/app/services/feed-back.service.ts","webpack:///src/app/services/grupal-courses.service.ts","webpack:///src/app/services/modal.service.ts","webpack:///src/app/services/student.service.ts","webpack:///src/app/services/teacher.service.ts","webpack:///src/app/services/transaction.service.ts","webpack:///src/app/services/web-socket.service.ts","webpack:///src/app/validations/password.directive.ts","webpack:///src/app/validations/username-unique.directive.ts","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","data","role","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","FooterComponent","HeaderAdministrationComponent","HeaderComponent","atuhService","router","webSocketSergice","authService","arrayRoutes","noAuth","verify","hasRole","swalAlert","fire","loged","isAuthenticated","user","username","desconnectFromSocket","logout","navigate","LoggedNvbarComponent","webSocketService","backToHome","closeSession","SlideVarComponent","AuthGuard","next","state","token","payload","decodeToken","now","Date","getTime","exp","providedIn","RoleGuard","roleb","rolec","AuthInterceptor","handle","pipe","status","TokenInterceptor","authReq","clone","headers","set","Mensaje","texto","grupalCourseEntity","studentEntity","money","teacherEntity","userEntity","roles","ModalDetailComponent","ChatComponent","modalService","teacherService","studentService","mensaje","mensajes","conectado","escribiendo","goToMeetEventEmiter","initialParams","idTeacher","idStudent","sessionStorage","getItem","teacher","idFromLocalStorage","getTeachersById","subscribe","resp","name","lastName","toString","color","primary","student","getStudentsById","undefined","setTimeout","subscribeToPrivateChat","closeModal","tipo","sendEventToAgent","getMessages","subcribeToPrivateChanelChatTeacher","newUser","emit","event","key","sendMessage","GrupalCourseFormCreateComponent","grupalCoursesService","formBuilder","grupalCourseEmmiter","grupalCourseForm","group","required","minLength","maxLength","description","classTime","urlMeet","grupalCourseToCreate","grupalCourse","value","idTeacherHeredado","createGrupalCourse","html","icon","confirmButtonColor","confirmButtonText","result","updateGrupalCourses","get","GrupalCourseFormComponent","grupalCourseToEdit","idGrupalCourse","actualGrupalCourse","updateGrupalCourse","length","updateGrupalCourseInformation","GrupalCourseStudentsComponent","GrupalCourseComponent","grupalCourseService","endpoint_grupal_course_image","host_image","showCloseButton","showCancelButton","cancelButtonText","cancelButtonColor","isConfirmed","studentId","courseId","makeInscriptionToGrupalCourse","err","StudentTimerComponent","TeacherInfoComponent","endpoint_teacher_image","changes","idTeacherFor","console","log","teacherFound","TeacherTimerComponent","TutoriaFormCreateComponent","tutoriaCourseService","tutoriaCourseEmmiter","environment","endpoint_course_image","course","modalTutoriaCreateForm","meetUrlCourse","tutoriaCourseToCreate","tutoriaCourse","busy","createTutoriaCourse","updateTutoriaCourses","tutoriaCreateForm","TutoriaFormComponent","tutoriaCourseFromParent","tutoriaCourseFromParentId","actualTutoriaCourse","tutoriaCourseGrupalCourse","updateTutoriaCourse","TutoriaComponent","UploadCourseImageComponent","selectedPicture","target","files","type","indexOf","uploadCoursePicture","imageNameFromService","picture","UploadGrupalCourseImageComponent","grupalCourseEmmiterUpload","uploadGrupalCoursePicture","UploadTeacherImageComponent","TeacherEmmiterUpload","uploadTeacherPicture","teacherIdToHeredate","AdminPanelComponent","transactionService","feedBackService","displayedColumns","onStudents","onTeachers","onCourses","onGrupalCourses","onMetrics","showTableFeedback","documentForm","initialDate","endDate","documentName","getPlataformValue","getFeedBacks","dataSource","paginator","sort","filterValue","filter","trim","toLowerCase","firstPage","getAllFeedBacks","getPlataformValues","plaformValue","initalDateToFormate","endDateToFormate","d","month","getMonth","day","getDate","year","getFullYear","monthe","daye","yeare","initialDateToSend","join","endDateToSend","bodyToSend","createExcel","blob","Blob","window","URL","createObjectURL","link","document","createElement","href","download","dispatchEvent","MouseEvent","bubbles","cancelable","view","showMetrics","showStudents","showTeachers","showPersonalCourses","showGrupalCourses","CourseFormComponent","CoursesComponent","courseService","getAllCourses","GrupalCourseGeneralComponent","studentList","getAllGrupalCourses","element","courseName","studentes","StudentFormComponent","StudentsComponent","getAllStudents","SubjectFormComponent","SubjectsComponent","TeacherFormComponent","TeachersComponent","listOfCourses","getAllTeachers","courses","row","enableTeacherPlatform","idUser","disableTeacherPlatform","profile","teacherID","objectToSend","updateTeacherProfile","HomeLogedComponent","grupalService","boostrapModalService","publis_topic_endpoint","timer_channel_send","timer_channel_subscribe","endpoint_socket","webSocket","host","array","coursesToShow","groupCourses","favoritOne","favoritTwo","favoritThree","coursesFonundSearch","coursesFonundGrupal","optionOneSelected","optionTwoSelected","chatModalOpen","socket_teacher_notification_chanel","publish_socket_teacher_notification_chanel","isCheckedOne","isCheckedTwo","isCheckedThree","isCheckedFour","isCheckedFive","autoComplete","autoCompleteGrupalCourses","timeOnSession","studentTime","counter","seconds","minutes","isTrue","showPartOne","showPartTwo","showPartThree","breakLopp","counterTwo","showTeacherInfo","isTutoriaAvailable","filteredOptions","valueChanges","_filter","filteredOptionsGrupalCourses","_filterGrupalCourse","getStudentMoneyMethod","getStudentMoney","getCourseFiltredByNameAndBusy","getCourseFiltredByName","endpoint","extra","generalObject","onChat","socketClient","publish","destination","body","JSON","stringify","quemado","bodyNotification","waitingForAnswer","text","showConfirmButton","isDismissed","endpointToNotificationChanel","responseFromAgent","parse","swalMessageMeetingAcepted","swalMessageMeetingDeny","desconectar","goToMeetUrl","sendPositiveAnswerToChannel","deactivate","connectToSocket","subscribeToTimerTeacherStudent","bodyToEnableTeacherAndCourses","getResponse","arrayFilter","idTeacherArgument","teacherName","openModal","urlMeetSelected","socketInitialConnection","subscrieToNotificationTeacherChanel","sendInitialMessageToPrivateNotificationChannel","conectar","bodyToDisableTeacherAndCourses","open","grupalCourseSelected","urlMeetOnQueue","endpointToTimmerChanel","message","waitingToStarTimer","onClass","initialMessageOnTimerConnection","startTimer","openModalTimer","ngbModalOptions","backdrop","keyboard","editModalHome","startTimmer","startTimmerSeconds","teacherId","idTeacherSelected","modal","calification","studentCount","studenName","TeacherName","objectToSendFinal","finalCalification","feedback","createFeedBack","getCalification","getTeacherCalificationStudents","object","updateTeacherCalification","optionOneMethod","optionTwoMethod","HomeComponent","LoginComponent","socketService","conected","autenticationState","destination_topic","notification_topic_chanel","authenticated","loginForm","email","password","valid","alert","login","saveUser","access_token","saveToken","idAdmin","client","mensajeInicial","parentFlag","punochilduno","punochilddos","punochildtres","punochildcuatro","studentRegister","teacherRegister","PrivateChatComponent","activatedRoute","queryParams","params","subcribeToTopicPrivateChatStudentTeacher","RegisterStudentComponent","registerStudentService","usernameUnicoService","passwordEnable","emailEnable","registerStudentForm","validators","asyncValidators","validate","bind","emailVerification","phone","passwordVerification","TermsAndConditions","arrayCharacteristicas","Object","values","registerStudent","verifyPassword","verifyEmail","register","RegisterTeacherComponent","registerTeacherService","registerTeacherForm","registerTeacher","StudentPanelComponent","transferService","grupalCoursesFound","studentObject","showVar","grupalCourses","profiles","transactions","userData","usernameEmail","responseOne","responseTwo","costOfTransaction","transferId","getListOfTransactions","getAllgrupalCoursesFromStudent","getStudentInformation","getStudentTime","transactionApproved","transactionReject","meetUrl","openTransactions","makeTransaction","setMoneyTransaction","location","split","reload","getAllListOfTransfers","listOfTransactions","objectOfTransaction","bodyOfTransaction","actualMoney","transactionMoney","newMoney","setMoney","showProfile","openTransaccionts","TeacherReferencesComponent","teacherDetails","getTeachersDetailsMethod","testObject","getTeachersDetails","teacherImage","push","PanelComponent","publis_topic_endpoint_verify_state","publis_topic_endpoint_verify_state_of_chat","publis_topic_endpoint_private_teacher_chanel","teacherCourses","algo","watchStudents","onPersonalCourse","onGrupalCourse","onTransactions","globalUrlMeet","showStart","minutess","secondss","showStartButton","showStopButton","studentMinutes","getTicherTime","getListOfRetirements","getCourses","getTeahcerImage","source","getState","objetoToPrivateChanel","retirements","getTeacherTime","teacherTime","showSweetAlertForSession","close","showAlertOfCancel","playSound","notificationPopUp","sendNegativeAnswerToChannel","showNotification","autoClose","getAllCourseFromTeacher","bodyToverifyState","getStateOfTeacher","stateOfChat","getStateOfTeacherChat","getIdStudent","sweetAlertConfirmationChat","informationForPrivateChat","endpoint_topic_private_chat","filterCoursesByTeacherId","cantidadDeEstudiantes","cantidadDeEstuiantesTotal","forEach","totalStudents","grupalCourseSelectedToModify","tutoriaCourseToEdit","tutoriaCourseSelectedToModify","idImageToUpload","idGruaplImageToUpload","idTeacherImageToUpload","globalTeacherId","globalStudentId","openTimmerModal","studenId","timeOnClass","reduceTimeToStudentAndAddToTeacher","timerResponse","globalIdTeacher","gloablIdStudent","openTimerModal","stopTimer","editModal","sound","Audio","play","idTeacherToUploadImage","showTransfers","updateCourses","updateTutoriaCoursesNew","TransactionComponent","opciones","apiKey","informationFromSession","userEmail","getAllPaymentsOptions","paramsToEncrypt","encriptionResult","keyToEncript","merchantId","referenceCode","amount","currency","md5","appendStr","end","min","max","random","Math","toFixed","optionSelected","signature","referenceCodeMethod","form","method","action","cost","md5Encrypter","i","hasOwnProperty","input","appendChild","submit","AuthService","http","endpoint_student","jwt","appUser","appCredentials","appPass","pass","httpHeaders","credentials","btoa","URLSearchParams","responseLogin","post","accessToken","userId","adminId","_user","user_name","authorities","setItem","_token","stringAccessToken","atob","includes","clear","CourseService","endpoint_course","internalEnpoint","internalEndpoint","tutoriaCourseId","put","formData","FormData","append","response","FeedBackService","endpoint_feed_back","feedBack","endpoint_teacher","studentName","GrupalCoursesService","endpoint_grupal_course","grupalCourseId","ModalService","StudentService","bodyObject","internalUrl","idGruaplCourse","idStduent","TeacherService","Teacher","onChatToHeredate","disableUrl","updateProfile","teacherProfileEndpoint","TransactionService","endpoint_transaction","transaction","endpoint_transaction_insert","transfers","endpoint_transfers","endpoint_retirements","responseType","WebSocketService","socket_teacher","socket_teacher_on_chat","socket_teacher_on_chat_final","socket_teacher_on_chat_verification","socket_teacher_private_chat_chanel","url_meeet_for_session","webSocketFactory","getIdTeacher","onConnect","frame","suscribeToTopicTeacherSocket","suscribeToTopicTeacherState","suscribeToTopicPrivateChatVerification","suscribeToTopicPrivateChat","suscribeToTimerChanel","onDisconnect","activate","teacher_state","teacher_state_chat","responseTopicPrivateChat","endpointForPrivateChat","socket_teacher_state","state_teacher","state_on_chat","endpointForPrivateChatVerification","fecha","endpointPrivateChanelChatTeacher","reponseFromAgent","IDStudent","passwordValidation","control","passwordValidationDirective","PasswordDirective","knowPasswords","toUpperCase","test","useExisting","UsernameUniqueDirective","validateStudent","usernameArr","usernameUnico","UsernameUnicoService","usernameUniqueDirective","production","subject","bootstrapModule","error"],"mappings":"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;AAAA;;AAAA;AAAA;;AAAuC;;;;;;AADT,iGAAuB,WAAvB,EAAuB,iBAAvB,EAAuB,SAAvB,EAAuB,uBAAvB;;;;;;AA/DlC;;AACE;;AACE;;AACE;;AACE;;AAEA;;AAAgD;;AAAsB;;AACtE;;AAAiD;;AAAG;;AACpD;;AAAgD;;AACH;;AAC/C;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAEF;;AACA;;AACE;;;;AAGF;;AACF;;AACF;;AACF;;AAGA;;AA8BF;;AAEA;;AAEA;;AAGA;;AAEF;;;;;;;;AAnDc;;AAAA,kHAAyC,iBAAzC,EAAyC,IAAzC;;AAE4C;;AAAA;;AAClC;;AAAA;;AASf;;AAAA;;AAgCY;;AAAA;;AAET;;AAAA;;;;;;AAOZ;;;;;;AAAgD;;;;;;AAQ9C;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAGF;;AACA;;AACE;;AACE;;AAGF;;AACF;;AACF;;;;;;AA5BU;;AAAA;;AAUA;;AAAA;;;;;;;;AAoBV;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAEF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAgC;AAAA;;AAAA;;AAAA;AAAA;;AAC9B;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA1BY;;AAAA;;AAUA;;AAAA;;;;;;;;;;;;;;;AAkBZ;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AAC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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegisterStudentComponent } from './pages/register-student/register-student.component';\r\nimport { RegisterTeacherComponent } from './pages/register-teacher/register-teacher.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { RoleGuard } from './guards/role.guard';\r\nimport { StudentsComponent } from './pages/administration/students/students.component';\r\nimport { CoursesComponent } from './pages/administration/courses/courses.component';\r\nimport { SubjectsComponent } from './pages/administration/subjects/subjects.component';\r\nimport { TeachersComponent } from './pages/administration/teachers/teachers.component';\r\nimport { StudentFormComponent } from './pages/administration/students/student-form/student-form.component';\r\nimport { TeacherFormComponent } from './pages/administration/teachers/teacher-form/teacher-form.component';\r\nimport { CourseFormComponent } from './pages/administration/courses/course-form/course-form.component';\r\nimport { SubjectFormComponent } from './pages/administration/subjects/subject-form/subject-form.component';\r\nimport { HomeLogedComponent } from './pages/home/home-loged/home-loged.component';\r\nimport { PanelComponent } from './pages/teacher/panel/panel.component';\r\nimport { PrivateChatComponent } from './pages/private-chat/private-chat.component';\r\nimport { StudentPanelComponent } from './pages/student-panel/student-panel.component';\r\nimport { AdminPanelComponent } from './pages/administration/admin-panel/admin-panel.component';\r\nimport { TransactionComponent } from './pages/transaction/transaction.component';\r\nimport { TeacherReferencesComponent } from './pages/teacher-references/teacher-references.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'home-loged', component: HomeLogedComponent},\r\n\r\n  \r\n\r\n\r\n  // { path: 'administration-student-form', component: StudentFormComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n  // { path: 'administration-student-form/:id', component: StudentFormComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n  // { path: 'administration-student', component: StudentsComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n\r\n  // { path: 'administration-teacher-form', component: TeacherFormComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n  // { path: 'administration-teacher-form/:id', component: TeacherFormComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n  // { path: 'administration-teacher', component: TeachersComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n\r\n  // { path: 'administration-course-form', component: CourseFormComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n  // { path: 'administration-course-form/:id', component: CourseFormComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n  // { path: 'administration-course', component: CoursesComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n\r\n  // { path: 'administration-subject-form', component: SubjectFormComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n  // { path: 'administration-subject-form/:id', component: SubjectFormComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n  // { path: 'administration-subject', component: SubjectsComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n\r\n  { path: 'login', component: LoginComponent },\r\n\r\n  { path: 'register-student', component: RegisterStudentComponent },\r\n  { path: 'register-teacher', component: RegisterTeacherComponent },\r\n\r\n  { path: 'teacher-panel', component: PanelComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_TEACHER' }},\r\n  { path: 'student-panel', component: StudentPanelComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_STUDENT' }},\r\n  { path: 'admin-panel', component: AdminPanelComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_ADMIN' } },\r\n  { path: 'teacher-references', component: TeacherReferencesComponent},\r\n\r\n // { path: 'teacher-panel', component: PanelComponent, canActivate: [AuthGuard, RoleGuard], data: { role: 'ROLE_TEACHER', roleb: 'ROLE_STUDENT' }},\r\n\r\n  {path : 'private-chat', component: PrivateChatComponent, canActivate: [AuthGuard]},\r\n\r\n  {path : 'pagos', component: TransactionComponent},\r\n\r\n  { path: '', redirectTo: 'home-loged', pathMatch: 'full' },\r\n  { path: '**', component: HomeLogedComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Frontend';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { HeaderComponent } from './general/header/header.component';\r\nimport { FooterComponent } from './general/footer/footer.component';\r\nimport { LoginComponent } from './pages/login/login.component';\r\nimport { RegisterStudentComponent } from './pages/register-student/register-student.component';\r\nimport { RegisterTeacherComponent } from './pages/register-teacher/register-teacher.component';\r\nimport { StudentsComponent } from './pages/administration/students/students.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { TokenInterceptor } from './interceptors/TokenInterceptor';\r\nimport { AuthInterceptor } from './interceptors/AuthInterceptor';\r\nimport { PasswordDirective } from './validations/password.directive';\r\nimport { UsernameUniqueDirective } from './validations/username-unique.directive';\r\nimport { TeachersComponent } from './pages/administration/teachers/teachers.component';\r\nimport { CoursesComponent } from './pages/administration/courses/courses.component';\r\nimport { SubjectsComponent } from './pages/administration/subjects/subjects.component';\r\nimport { HeaderAdministrationComponent } from './general/header-administration/header-administration.component';\r\nimport { CourseFormComponent } from './pages/administration/courses/course-form/course-form.component';\r\nimport { StudentFormComponent } from './pages/administration/students/student-form/student-form.component';\r\nimport { TeacherFormComponent } from './pages/administration/teachers/teacher-form/teacher-form.component';\r\nimport { SubjectFormComponent } from './pages/administration/subjects/subject-form/subject-form.component';\r\nimport { HomeLogedComponent } from './pages/home/home-loged/home-loged.component';\r\nimport { PanelComponent } from './pages/teacher/panel/panel.component';\r\nimport { PrivateChatComponent } from './pages/private-chat/private-chat.component';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { GrupalCourseComponent } from './modals/grupal-course/grupal-course.component';\r\nimport { StudentPanelComponent } from './pages/student-panel/student-panel.component';\r\nimport { SlideVarComponent } from './general/slide-var/slide-var.component';\r\nimport { LoggedNvbarComponent } from './general/logged-nvbar/logged-nvbar.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { GrupalCourseStudentsComponent } from './modals/grupal-course-students/grupal-course-students.component';\r\nimport { GrupalCourseFormComponent } from './modals/grupal-course-form/grupal-course-form.component';\r\nimport { GrupalCourseFormCreateComponent } from './modals/grupal-course-form-create/grupal-course-form-create.component';\r\nimport { ChatComponent } from './modals/chat/chat.component';\r\nimport { TutoriaComponent } from './modals/tutoria/tutoria.component';\r\nimport { TutoriaFormComponent } from './modals/tutoria-form/tutoria-form.component';\r\nimport { TutoriaFormCreateComponent } from './modals/tutoria-form-create/tutoria-form-create.component';\r\nimport { UploadCourseImageComponent } from './modals/upload-course-image/upload-course-image.component';\r\nimport { UploadGrupalCourseImageComponent } from './modals/upload-grupal-course-image/upload-grupal-course-image.component';\r\nimport { AdminPanelComponent } from './pages/administration/admin-panel/admin-panel.component';\r\nimport { GrupalCourseGeneralComponent } from './pages/administration/grupal-course/grupal-course.component';\r\nimport { UploadTeacherImageComponent } from './modals/upload-teacher-image/upload-teacher-image.component';\r\nimport { TransactionComponent } from './pages/transaction/transaction.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TeacherTimerComponent } from './modals/teacher-timer/teacher-timer.component';\r\nimport { StudentTimerComponent } from './modals/student-timer/student-timer.component';\r\nimport { TeacherInfoComponent } from './modals/teacher-info/teacher-info.component';\r\nimport { TeacherReferencesComponent } from './pages/teacher-references/teacher-references.component';\r\nimport { ModalDetailComponent } from './modal-detail/modal-detail.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    RegisterStudentComponent,\r\n    RegisterTeacherComponent,\r\n    StudentsComponent,\r\n    HomeComponent,\r\n    PasswordDirective,\r\n    UsernameUniqueDirective,\r\n    TeachersComponent,\r\n    CoursesComponent,\r\n    SubjectsComponent,\r\n    HeaderAdministrationComponent,\r\n    CourseFormComponent,\r\n    StudentFormComponent,\r\n    TeacherFormComponent,\r\n    SubjectFormComponent,\r\n    HomeLogedComponent,\r\n    PanelComponent,\r\n    PrivateChatComponent,\r\n    GrupalCourseComponent,\r\n    GrupalCourseGeneralComponent,\r\n    StudentPanelComponent,\r\n    SlideVarComponent,\r\n    LoggedNvbarComponent,\r\n    GrupalCourseStudentsComponent,\r\n    GrupalCourseFormComponent,\r\n    GrupalCourseFormCreateComponent,\r\n    ChatComponent,\r\n    TutoriaComponent,\r\n    TutoriaFormComponent,\r\n    TutoriaFormCreateComponent,\r\n    UploadCourseImageComponent,\r\n    UploadGrupalCourseImageComponent,\r\n    AdminPanelComponent,\r\n    UploadTeacherImageComponent,\r\n    TransactionComponent,\r\n    TeacherTimerComponent,\r\n    StudentTimerComponent,\r\n    TeacherInfoComponent,\r\n    TeacherReferencesComponent,\r\n    ModalDetailComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    NgbModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy },\r\n  { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row text-center navbar navbar-expand-lg navbar-dark bg-dark\" style=\" position: fixed;  bottom: 0; width: 102%;\">\n    <div class=\"col-12 text-center\">\n        <button class=\"btn btn-info\">Mittu @2020 </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header-administration',\n  templateUrl: './header-administration.component.html',\n  styleUrls: ['./header-administration.component.css']\n})\nexport class HeaderAdministrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>header-administration works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { WebSocketService } from '../../services/web-socket.service';\nimport Sw from 'sweetalert2';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  public arrayRoutes: any[] = [];\n  public loged: boolean;\n  public user: string;\n  public noAuth: boolean;\n\n\n\n  constructor(\n    private atuhService: AuthService,\n    private router: Router,\n    private webSocketSergice: WebSocketService,\n    public authService: AuthService\n  ) {\n    this.noAuth = false;\n  }\n\n  ngOnInit(): void {\n    this.verify();\n    if (this.authService.hasRole('ROLE_STUDENT')) {\n      this.noAuth = true;\n    } else if (this.authService.hasRole('ROLE_TEACHER')) {\n      this.noAuth = true;\n    } else if (this.authService.hasRole('ROLE_ADMIN')) {\n      this.noAuth = true;\n    } else {\n      this.noAuth = this.authService.hasRole();\n    }\n\n    if (!this.noAuth) {\n      this.swalAlert();\n    }\n  }\n\n  swalAlert() {\n    Sw.fire('Querido estudiante', 'Si deseas inscribirte a un curso grupal o tutoría recuerda que debes estar registrado en la plataforma Mittu', 'info');\n  }\n\n  verify() {\n    this.loged = this.atuhService.isAuthenticated();\n    this.user = this.atuhService.user.username;\n  }\n\n  logoutt() {\n    this.webSocketSergice.desconnectFromSocket();\n    this.atuhService.logout();\n  }\n\n  teacherRegister() {\n    this.router.navigate(['/register-teacher']);\n  }\n\n  studentRegister() {\n    this.router.navigate(['/register-student']);\n  }\n\n  login() {\n    this.router.navigate(['/login']);\n  }\n\n  myProfile() {\n    this.router.navigate(['/student-panel']);\n  }\n\n  myProfileTeacher() {\n    this.router.navigate(['/teacher-panel']);\n  }\n\n  myProfileAdmin() {\n    this.router.navigate(['/admin-panel']);\n  }\n\n  goToRegisterStudent() {\n    this.router.navigate(['/register-student']);\n  }\n\n  goToRegisterTeacher() {\n    this.router.navigate(['/register-teacher']);\n  }\n\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n\n}\n","<div style=\"padding-top: 30px;\">\r\n    <div class=\"row text-center\" style=\"padding-bottom: 10px;\">\r\n        <div *ngIf=\"authService.hasRole('ROLE_STUDENT')\" class=\"col-1\">\r\n            <button class=\"btn option-one\" (click)=\"myProfile()\"> ver perfil </button>\r\n        </div>\r\n        <div *ngIf=\"authService.hasRole('ROLE_TEACHER')\" class=\"col-1\">\r\n            <button class=\"btn option-one\" (click)=\"myProfileTeacher()\"> ver perfil </button>\r\n        </div>\r\n        <div *ngIf=\"authService.hasRole('ROLE_ADMIN')\" class=\"col-1\">\r\n            <button class=\"btn option-one\" (click)=\"myProfileAdmin()\"> ver perfil </button>\r\n        </div>\r\n        <div *ngIf=\"!noAuth\" class=\"col-3\">\r\n            <button class=\"btn option-one\" (click)=\"goToRegisterStudent()\"> Registrarme como estudiante</button>\r\n        </div>\r\n        <div *ngIf=\"!noAuth\" class=\"col-3\">\r\n            <button class=\"btn option-one\" (click)=\"goToRegisterTeacher()\"> Registrarme como docente</button>\r\n        </div>\r\n        <div *ngIf=\"!noAuth\" class=\"col-3\">\r\n            <button class=\"btn option-one\" (click)=\"goToLogin()\"> Ingresar </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { WebSocketService } from '../../services/web-socket.service';\n\n@Component({\n  selector: 'app-logged-nvbar',\n  templateUrl: './logged-nvbar.component.html',\n  styleUrls: ['./logged-nvbar.component.css']\n})\nexport class LoggedNvbarComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    public authService: AuthService,\n    private webSocketService: WebSocketService\n\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  backToHome() {\n    this.router.navigate(['/home-loged']);\n  }\n\n  backToHomeTeacher() {\n    this.router.navigate(['/home-loged']);\n  }\n\n  backToHomeAdmin() {\n    this.router.navigate(['/home-loged']);\n  }\n\n  closeSession() {\n    this.webSocketService.desconnectFromSocket();\n    this.authService.logout();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\">Mittu</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item active\">\n        <button class=\"btn btn-info\" (click)=\"backToHome()\"> Volver al inicio </button>\n      </li>\n    </ul>\n    <button class=\"btn btn-outline-info\" (click)=\"closeSession()\">Cerrar sesion</button>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-slide-var',\n  templateUrl: './slide-var.component.html',\n  styleUrls: ['./slide-var.component.css']\n})\nexport class SlideVarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","asdsadasd","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.isAuthenticated()) {\n      // if (this.isTokenExpired) {\n      //   this.authService.logout();\n      //   this.router.navigate(['/login']);\n      //   return false;\n      // }\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n  isTokenExpired(): boolean {\n    let token = this.authService.token;\n    let payload = this.authService.decodeToken(token);\n    let now = new Date().getTime() / 1000;\n    if (payload.exp < now) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n\n    if (!this.authService.isAuthenticated()) {\n      this.router.navigate(['/login'])\n      return false;\n    }\n\n    let role = next.data['role'] as string;\n    let roleb = next.data['roleb'] as string;\n    let rolec = next.data['rolec'] as string;\n    if (this.authService.hasRole(role) || this.authService.hasRole(roleb) || this.authService.hasRole(rolec)) {\n      return true;\n    }\n\n    Swal.fire('Acceso denegado', 'No cuentas con acceso a este recurso', 'info');\n    this.router.navigate(['/home'])\n    return false;\n  }\n\n}\n","\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n    HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler):\r\n        Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(e => {\r\n                if (e.status == 401) {\r\n                    Swal.fire('Sin acceso', 'Debes ingresar primero para acceder a este recurso', 'info');\r\n\r\n                    if (this.authService.isAuthenticated()) {\r\n                        this.authService.logout();\r\n                    }\r\n                    this.router.navigate(['/login'])\r\n                }\r\n\r\n                if (e.status == 403) {\r\n                    Swal.fire('Acceso denegado', 'No cuentas con acceso a este recurso', 'info');\r\n                    this.router.navigate(['/home'])\r\n                }\r\n                return throwError(e);\r\n            })\r\n        );\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport {\n    HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n    constructor(private authService: AuthService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n\n        let token = this.authService.token;\n        if (token != null) {\n            const authReq = req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + token)\n            });\n            return next.handle(authReq);\n        }\n\n        return next.handle(req);\n    }\n}","export class Mensaje {\r\n    texto: string = '';\r\n    fecha: Date;\r\n    username: string;\r\n    tipo: string;\r\n    color: string;\r\n}","import { studentEntity } from './studentEntity';\r\nexport class grupalCourseEntity {\r\n  id: number;\r\n  name: string;\r\n  idTeacher: number;\r\n  picture?: any;\r\n  classTime?: any;\r\n  fechaDeCreacion: string;\r\n  studentes: studentEntity[];\r\n  description?: any;\r\n  urlMeet?: string;\r\n}\r\n","export class studentEntity {\r\n\r\n    id: number;\r\n    enabled: boolean;\r\n    name: string;\r\n    lastName: string;\r\n    email: string;\r\n    phone: string;\r\n    TermsAndConditions: boolean;\r\n    money: number = 0;\r\n    fechaDeCreacion: Date;\r\n\r\n}","import { courseEntity } from './coursesEntity';\r\nexport class teacherEntity {\r\n\r\n  id: number;\r\n  idUser?: any;\r\n  username: string;\r\n  enabled: boolean;\r\n  name: string;\r\n  lastName: string;\r\n  phone: string;\r\n  enabledPlatform: boolean;\r\n  meetUrl: string;\r\n  busy?: any;\r\n  email: string;\r\n  fechaDeCreacion: string;\r\n  courses: courseEntity[];\r\n  termsAndConditions: boolean;\r\n  picture: string;\r\n  hourCost: number;\r\n  description: string;\r\n  education: string;\r\n  money: number;\r\n  profile: string;\r\n  retirements: [];\r\n}","export class userEntity {\r\n\r\n    id: number;\r\n    username: string;\r\n    enabled: boolean;\r\n    nombre: string;\r\n    apellido: string;\r\n    email: string;\r\n    phone: string;\r\n    roles: string[] = [];\r\n\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-modal-detail',\n  templateUrl: './modal-detail.component.html',\n  styleUrls: ['./modal-detail.component.css']\n})\nexport class ModalDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>modal-detail works!</p>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ModalService } from '../../services/modal.service';\nimport { GrupalCoursesService } from '../../services/grupal-courses.service';\nimport { Router } from '@angular/router';\nimport { teacherEntity } from '../../interfaces/teacherEntity';\nimport { TeacherService } from '../../services/teacher.service';\nimport { WebSocketService } from '../../services/web-socket.service';\nimport { StudentService } from '../../services/student.service';\nimport { Mensaje } from '../../interfaces/Mensaje';\nimport { studentEntity } from '../../interfaces/studentEntity';\n\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  @Input() idStudent: any;\n  @Input() idTeacher: any;\n  @Input() urlMeet: any;\n  public mensaje: Mensaje = new Mensaje();\n  public mensajes: Mensaje[] = [];\n  public conectado: boolean = false;\n  public escribiendo: string = '';\n  public username: string;\n  public teacher: teacherEntity;\n  public student: studentEntity;\n  public idFromLocalStorage: any;\n  public primary: Boolean;\n  public initialParams: any;\n  @Output() goToMeetEventEmiter = new EventEmitter<any>();\n  \n\n  constructor(\n    private modalService: ModalService,\n    private webSocketService: WebSocketService,\n    private teacherService: TeacherService,\n    private studentService: StudentService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.mensajes = [];\n      this.initialParams = {\n        idTeacher: this.idTeacher,\n        idStudent: this.idStudent\n    };\n\n    if (sessionStorage.getItem('teacherId') != 'null') {\n      this.teacher = new teacherEntity();\n      let idFromLocalStorage = sessionStorage.getItem('teacherId');\n      this.teacherService.getTeachersById(idFromLocalStorage).subscribe((resp) => {\n        this.teacher = resp;\n        this.username = `${this.teacher.name} ${this.teacher.lastName}`.toString();\n        this.mensaje.color = 'blue';\n        this.primary = true;\n      });\n\n    } if (sessionStorage.getItem('studentId') != 'null') {\n      this.student = new studentEntity();\n      let idFromLocalStorage = sessionStorage.getItem('studentId');\n      this.studentService.getStudentsById(idFromLocalStorage).subscribe((resp) => {\n        this.student = resp;\n        this.username = `${this.student.name} ${this.student.lastName}`.toString();\n        this.mensaje.color = 'green';\n        this.primary = false;\n      });\n    }\n\n\n    if (this.initialParams.idTeacher != null || this.initialParams.idTeacher != undefined) {\n      this.idTeacher = this.initialParams.idTeacher;\n    }\n\n    if (this.initialParams.idTeacher != null || this.initialParams.idTeacher != undefined) {\n      this.idStudent = this.initialParams.idStudent;\n    }\n\n    setTimeout(() => {\n      this.subscribeToPrivateChat();\n    }, 3000);\n  }\n\n  closeModal() {\n    this.modalService.closeModal();\n    this.mensajes = [];\n  }\n\n  newUser() {\n    this.mensaje.tipo = \"NUEVO_USUARIO\";\n    let payload = this.mensaje;\n    this.mensaje.username = this.username;\n    this.webSocketService.sendEventToAgent(`/app/private/chanel/teacher/${this.idTeacher}`, payload)\n    this.mensajes = this.webSocketService.getMessages();\n  }\n\n  subscribeToPrivateChat() {\n    this.webSocketService.subcribeToPrivateChanelChatTeacher(this.idTeacher);\n    setTimeout(() => {\n      this.newUser();\n    }, 3000);\n  }\n\n  sendMessage() {\n    this.mensaje.tipo = \"MENSAJE\";\n    let payload = this.mensaje;\n    this.webSocketService.sendEventToAgent(`/app/private/chanel/teacher/${this.idTeacher}`, payload)\n    this.mensaje.texto = '';\n    this.mensaje.username = this.username;\n    this.mensajes = this.webSocketService.getMessages();\n  }\n\n  goToMeet(){\n    this.goToMeetEventEmiter.emit(true);\n  }\n\n  onKeydown(event: any) {\n    if(event.key === 'Enter') {\n      this.sendMessage();\n    }\n  }\n  \n}\n","<!-- Modal -->\n<div *ngIf=\"idStudent && idTeacher\" class=\"modal fade\" id=\"chatModal\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <div class=\"text-center\">\n                    <img src=\"../../../assets/images/mittu.png\" class=\"logo-size\">\n                </div>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-12 text-center\">\n                        <h2 class=\"text-info space-bottom space-over\"> Sala de chat</h2>\n                    </div>\n                </div>\n\n\n\n                <div class=\"card\">\n                    <!-- con esto del #scrollChat nos aseguramos de que baje automatico el scroll -->\n                    <div #scrollChat [scrollTop]=\"scrollChat.scrollHeight\" class=\"card-body\"\n                        style=\"overflow-y: scroll; height: 550px;\">\n                        <ul class=\"list-group list-group-flush\">\n                            <li class=\"list-group-item list-group-item-light\" *ngFor=\"let mensaje of mensajes\">\n                                <span *ngIf=\"mensaje.tipo == 'NUEVO_USUARIO'\"> {{mensaje.fecha | date: 'shortTime'}} @\n                                    {{mensaje.texto}}\n                                    <span [ngStyle]=\"{'color': mensaje.color}\"> El usuario {{mensaje.username}} </span>\n                                    se ha conectado al\n                                    chat!</span>\n                                <span *ngIf=\"mensaje.tipo == 'MENSAJE'\"> {{mensaje.fecha | date: 'shortTime'}} <span\n                                        [ngStyle]=\"{'color': mensaje.color}\"> {{mensaje.username}} </span> Dice: <br>\n                                    {{mensaje.texto}}\n                                </span>\n                            </li>\n                        </ul>\n                    </div>\n\n                    <div class=\"card-footer\">\n                        <div>\n                            {{escribiendo}}\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-8\">\n                                <div class=\"form-group\">\n                                    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"mensaje.texto\"\n                                        placeholder=\"Escribe el mensaje ...\" name=\"texto\" (keydown.enter)=\"onKeydown($event)\" autocomplete=\"off\">\n                                </div>\n                            </div>\n                            <div class=\"col-4 text-center\">\n                                <button class=\"btn btn-info\" (click)=\"sendMessage()\" type=\"submit\"> Enviar\n                                    mensaje\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row space-bottom space-over\">\n                <div class=\"col-6 text-center\">\n                    <button class=\"btn btn-info col-md-6\" (click)=\"goToMeet()\" type=\"submit\"> Ir a la tutoria </button>\n                </div>\n                <div class=\"col-6 text-center\">\n                    <button class=\"btn btn-outline-info col-md-6\" (click)=\"closeModal()\" type=\"submit\"> Cerrar </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalService } from '../../services/modal.service';\nimport { grupalCourseEntity } from '../../interfaces/grupalCourseEntity';\nimport { GrupalCoursesService } from '../../services/grupal-courses.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-grupal-course-form-create',\n  templateUrl: './grupal-course-form-create.component.html',\n  styleUrls: ['./grupal-course-form-create.component.css']\n})\nexport class GrupalCourseFormCreateComponent implements OnInit {\n\n\n  @Input() grupalCourse: grupalCourseEntity;\n  @Output() grupalCourseEmmiter = new EventEmitter<any>();\n  @Input() idTeacherHeredado: number;\n  grupalCourseForm: FormGroup;\n\n  constructor(\n    public modalService: ModalService,\n    public grupalCoursesService: GrupalCoursesService,\n    private formBuilder: FormBuilder,\n\n  ) { }\n\n  get name() {\n    return this.grupalCourseForm.get('name');\n  }\n\n  get description() {\n    return this.grupalCourseForm.get('description');\n  }\n\n  get classTime() {\n    return this.grupalCourseForm.get('classTime');\n  }\n\n  get urlMeet() {\n    return this.grupalCourseForm.get('urlMeet');\n  }\n\n\n  ngOnInit(): void {\n    this.grupalCourseForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]],\n      description: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]],\n      classTime: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]],\n      urlMeet: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]]\n    });\n  }\n\n  closeModal() {\n    this.modalService.closeModal();\n  }\n\n\n  createGrupalCourseAndCloseModal() {\n    let grupalCourseToCreate = this.grupalCourse = this.grupalCourseForm.value;\n    grupalCourseToCreate.idTeacher =  this.idTeacherHeredado;\n\n    this.grupalCoursesService.createGrupalCourse(grupalCourseToCreate).subscribe((resp) => {\n      Swal.fire({\n        title: `Creación exitosa`,\n        html: `El curso ${grupalCourseToCreate.name} ha sido creado con exito`,\n        icon: 'success',\n        confirmButtonColor: '#5cb85c',\n        confirmButtonText: 'Volver a la lista de cursos grupales',\n      }).then((result) => {\n        if (result.value) {\n          this.modalService.closeModal();\n          this.updateGrupalCourses();\n        }\n      })\n    });\n  }\n\n  updateGrupalCourses() {\n    this.grupalCourseEmmiter.emit(true);\n  }\n\n}\n","<!-- Modal -->\n<div *ngIf=\"modalService.modal\" class=\"modal fade\" id=\"modalGroupCreateForm\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row space-over space-bottom\">\n                    <div class=\"col-12 text-center\">\n                        <h2> Formulario para crear el curso grupal</h2>\n                    </div>\n                </div>\n                <div class=\"text-center\">\n                    <form autocomplete=\"off\" [formGroup]=\"grupalCourseForm\">\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput\">Nombre</label>\n                            <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"{{grupalCourse?.name}}\"\n                                formControlName=\"name\">\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"name.errors.minlength || name.errors.maxlength \">\n                                    El nombre debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"name.errors.required\">\n                                    El nombre es requerido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput\">Descripción</label>\n                            <input type=\"text\" class=\"form-control\" id=\"description\"\n                                placeholder=\"{{grupalCourse?.description}}\" formControlName=\"description\">\n                            <div *ngIf=\"description.invalid && (description.dirty || description.touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"description.errors.minlength || description.errors.maxlength \">\n                                    La descripción debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"description.errors.required\">\n                                    La descripción es requerido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput\">Horario</label>\n                            <input type=\"text\" class=\"form-control\" id=\"classTime\"\n                                placeholder=\"{{grupalCourse?.classTime}}\" formControlName=\"classTime\">\n                            <div *ngIf=\"classTime.invalid && (classTime.dirty || classTime.touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"classTime.errors.minlength || classTime.errors.maxlength \">\n                                    El horario debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"classTime.errors.required\">\n                                    El horario es requerido\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput2\">urlMeet</label>\n                            <input type=\"text\" class=\"form-control\" id=\"urlMeet\" placeholder=\"{{grupalCourse?.urlMeet}}\"\n                                formControlName=\"urlMeet\">\n                            <div *ngIf=\"urlMeet.invalid && (urlMeet.dirty || urlMeet.touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"urlMeet.errors.minlength || urlMeet.errors.maxlength \">\n                                    La url del meet debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"urlMeet.errors.required\">\n                                    La url del meet es requerido\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div class=\"modal-footer text-center\">\n\n                <button *ngIf= \"grupalCourseForm.valid\" type=\"submit\" class=\"btn btn-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"createGrupalCourseAndCloseModal()\">Crear</button>\n\n                <button type=\"button\" class=\"btn btn-outline-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"closeModal()\">Cerrar</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit, Output, EventEmitter, SimpleChanges, OnChanges } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalService } from '../../services/modal.service';\nimport { grupalCourseEntity } from '../../interfaces/grupalCourseEntity';\nimport { GrupalCoursesService } from '../../services/grupal-courses.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-grupal-course-form',\n  templateUrl: './grupal-course-form.component.html',\n  styleUrls: ['./grupal-course-form.component.css']\n})\nexport class GrupalCourseFormComponent implements OnInit {\n\n  @Input() grupalCourse: grupalCourseEntity;\n  @Output() grupalCourseEmmiter = new EventEmitter<any>();\n  grupalCourseForm: FormGroup;\n  grupalCourseToEdit: grupalCourseEntity;\n\n  constructor(\n    public modalService: ModalService,\n    public grupalCoursesService: GrupalCoursesService,\n    private formBuilder: FormBuilder,\n\n  ) {\n    this.grupalCourseToEdit = new grupalCourseEntity();\n  }\n\n  get description() {\n    return this.grupalCourseForm.get('description');\n  }\n\n  get classTime() {\n    return this.grupalCourseForm.get('classTime');\n  }\n\n  get urlMeet() {\n    return this.grupalCourseForm.get('urlMeet');\n  }\n\n  get name() {\n    return this.grupalCourseForm.get('name');\n  }\n\n  ngOnInit(): void {\n    this.grupalCourseForm = this.formBuilder.group({\n      description: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]],\n      classTime: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]],\n      urlMeet: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]],\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]]\n    });\n  }\n\n  closeModal() {\n    this.modalService.closeModal();\n  }\n\n  updateCourseAndCloseModal(grupalCourse: any, idGrupalCourse: any) {\n    let actualGrupalCourse = this.grupalCourse;\n    let updateGrupalCourse = this.grupalCourseForm.value;\n    if (updateGrupalCourse.classTime === null) {\n      updateGrupalCourse.classTime = actualGrupalCourse.classTime;\n    }\n\n    if (updateGrupalCourse.classTime === null) {\n      updateGrupalCourse.name = actualGrupalCourse.name;\n    }\n\n    if (updateGrupalCourse.description === null) {\n      updateGrupalCourse.description = actualGrupalCourse.description;\n    }\n\n    if (updateGrupalCourse.urlMeet === null) {\n      updateGrupalCourse.urlMeet = actualGrupalCourse.urlMeet;\n    }\n\n    if (actualGrupalCourse.name != updateGrupalCourse.name && updateGrupalCourse.name.length > 0) {\n      actualGrupalCourse.name = updateGrupalCourse.name;\n\n    } if (actualGrupalCourse.classTime != updateGrupalCourse.classTime && updateGrupalCourse.classTime.length > 0) {\n      actualGrupalCourse.classTime = updateGrupalCourse.classTime;\n\n    } if (actualGrupalCourse.description != updateGrupalCourse.description && updateGrupalCourse.description.length > 0) {\n      actualGrupalCourse.description = updateGrupalCourse.description;\n\n    } if (actualGrupalCourse.urlMeet != updateGrupalCourse.urlMeet && updateGrupalCourse.urlMeet.length > 0) {\n      actualGrupalCourse.urlMeet = updateGrupalCourse.urlMeet;\n    }\n\n    this.grupalCoursesService.updateGrupalCourseInformation(actualGrupalCourse, idGrupalCourse).subscribe((resp) => {\n      Swal.fire({\n        title: `Actualización exitosa`,\n        html: `El curso ${grupalCourse.name} ha sido actualizado con exito`,\n        icon: 'success',\n        confirmButtonColor: '#5cb85c',\n        confirmButtonText: 'Volver a la lista de cursos grupales',\n      }).then((result) => {\n        if (result.value) {\n          this.modalService.closeModal();\n          this.updateGrupalCourses();\n        }\n      })\n    });\n  }\n\n  updateGrupalCourses() {\n    this.grupalCourseEmmiter.emit(true);\n  }\n\n}\n","<!-- Modal -->\n<div *ngIf=\"modalService.modal && grupalCourse\" class=\"modal fade\" id=\"modalGroupEditForm\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row space-over space-bottom\">\n                    <div class=\"col-12 text-center\">\n                        <h2> Formulario para actualizar el curso grupal</h2>\n                    </div>\n                </div>\n                <div class=\"text-center\">\n                    <form autocomplete=\"off\" [formGroup]=\"grupalCourseForm\">\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput\">Nombre</label>\n                            <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"{{grupalCourse?.name}}\" formControlName=\"name\">\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"name.errors.minlength || name.errors.maxlength \">\n                                    La descripción debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"name.errors.required\">\n                                    La descripción es requerido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput\">Descripción</label>\n                            <input type=\"text\" class=\"form-control\" id=\"description\"\n                                placeholder=\"{{grupalCourse?.description}}\" formControlName=\"description\"\n                                value=\"{{grupalCourse?.description}}\">\n                            <div *ngIf=\"description.invalid && (description.dirty || description.touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"description.errors.minlength || description.errors.maxlength \">\n                                    La descripción debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"description.errors.required\">\n                                    La descripción es requerido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput\">Horario</label>\n                            <input type=\"text\" class=\"form-control\" id=\"classTime\"\n                                placeholder=\"{{grupalCourse?.classTime}}\" formControlName=\"classTime\"\n                                value=\"{{grupalCourse?.classTime}}\">\n                            <div *ngIf=\"classTime.invalid && (classTime.dirty || classTime.touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"classTime.errors.minlength || classTime.errors.maxlength \">\n                                    El horario debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"classTime.errors.required\">\n                                    El horario es requerido\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput2\">urlMeet</label>\n                            <input type=\"text\" class=\"form-control\" id=\"urlMeet\" placeholder=\"{{grupalCourse?.urlMeet}}\"\n                                formControlName=\"urlMeet\" value=\"{{grupalCourse?.urlMeet}}\">\n                            <div *ngIf=\"urlMeet.invalid && (urlMeet.dirty || urlMeet.touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"urlMeet.errors.minlength || urlMeet.errors.maxlength \">\n                                    La url del meet debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"urlMeet.errors.required\">\n                                    La url del meet es requerido\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div class=\"modal-footer text-center\">\n\n                <button *ngIf=\"grupalCourse\" type=\"submit\" class=\"btn btn-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"updateCourseAndCloseModal(grupalCourse,grupalCourse.id ); grupalCourseForm.reset()\">Editar</button>\n\n\n                <button type=\"button\" class=\"btn btn-outline-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"closeModal(); grupalCourseForm.reset()\">Cerrar</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalService } from '../../services/modal.service';\nimport { studentEntity } from '../../interfaces/studentEntity';\n\n@Component({\n  selector: 'app-grupal-course-students',\n  templateUrl: './grupal-course-students.component.html',\n  styleUrls: ['./grupal-course-students.component.css']\n})\nexport class GrupalCourseStudentsComponent implements OnInit {\n\n  @Input() students: studentEntity[];\n  @Input() courseName: string;\n\n  constructor(\n    public modalService: ModalService,\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  closeModal() {\n    this.modalService.closeModal();\n  }\n\n}\n","<!-- Modal -->\n<div *ngIf=\"modalService.modal && students && courseName\" class=\"modal fade\" id=\"modalGroupStudents\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <h2 class=\"text-center\">Estudiantes del curso {{courseName}}</h2>\n                <div class=\"row\">\n                    <div class=\"col-12 text-center\">\n                        <p >Cantidad de estudiantes inscritos al curso</p>\n                        <p class=\"badge badge-info\" style=\"font-size: 20px;\">{{students.length}}</p>\n                    </div>\n                </div>\n                <div class=\"space-over text-center \">\n                    <table class=\"table table-striped\">\n                        <thead class=\"thead-light\">\n                            <tr>\n                                <th scope=\"col\">Nombre</th>\n                                <th scope=\"col\">Telefono</th>\n                                <th scope=\"col\">Correo</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let student of students\">\n                                <td>{{student.name}} {{student.lastName}}</td>\n                                <td>{{student.phone}}</td>\n                                <td>{{student.email}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n            <div class=\"modal-footer text-center\">\n                <div class=\"col-12 text-center\">\n                    <button type=\"button\" class=\"btn btn-outline-info col-md-4\" data-dismiss=\"modal\" (click)=\"closeModal()\">Cerrar</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ModalService } from '../../services/modal.service';\nimport { grupalCourseEntity } from '../../interfaces/grupalCourseEntity';\nimport { GrupalCoursesService } from '../../services/grupal-courses.service';\nimport Sw from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment.prod';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-grupal-course',\n  templateUrl: './grupal-course.component.html',\n  styleUrls: ['./grupal-course.component.css']\n})\nexport class GrupalCourseComponent implements OnInit { \n\n  @Input() grupalCourse?: grupalCourseEntity;\n  public endpoint_grupal_course_image = environment.grupalCourse.host_image;\n\n  constructor(\n    public modalService: ModalService,\n    private grupalCourseService: GrupalCoursesService,\n    private router: Router,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  closeModal() {\n    this.modalService.closeModal();\n    this.grupalCourse = null;\n  }\n\n  goToProfile():void {\n    this.router.navigate(['/student-panel']);\n  }\n\n  makeInscription() {\n    Sw.fire({\n      'title': `Realizar inscripción`,\n      'text': `¿ Desea realizar la inscripcion para el curso grupal ${this.grupalCourse.name}?`,\n      'icon': `question`,\n      showCloseButton: true,\n      showCancelButton: true,\n      confirmButtonText: `Inscribirme`,\n      cancelButtonText: `Cancelar`,\n      confirmButtonColor: '#10d10d',\n      cancelButtonColor: '#e3a807',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        let studentId = sessionStorage.getItem('studentId');\n        let courseId = this.grupalCourse.id;\n        let data = {\n          \"courseId\": courseId,\n          \"studentId\": studentId\n        }\n        this.grupalCourseService.makeInscriptionToGrupalCourse(data).subscribe(resp => {\n          if (resp === null || resp === 'null') {\n            Sw.fire('Inscripcion realizada', `Te has inscrito al curso ${this.grupalCourse.name}, ahora puedes ver tu nuevo curso inscrito en tu perfil de usuario`, 'success')\n            // this.modalService.closeModal();\n          } \n        }, (err) =>  {\n          Sw.fire('Inscripción invalida', `Ya te encuentras inscrito al curso grupal ${this.grupalCourse.name}`, 'warning')\n      });\n      }\n    });\n  }\n  \n}\n","<!-- Modal -->\n<div *ngIf=\"grupalCourse\" class=\"modal fade\" id=\"modalGroup\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <div class=\"row\">\n                    <div class=\"col-12 text-center\" style=\"text-align: center !important;\">\n                        <h2 class=\"text-center\" style=\"text-align: center !important;\">{{grupalCourse.name}}</h2>\n                    </div>\n                </div>\n\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <img src=\"{{endpoint_grupal_course_image}}/{{grupalCourse.picture}}\" alt=\"\" class=\"img-thumbnail rounded image-size\">\n                    </div>\n                </div>\n                <div class=\"row space-over space-bottom\">\n                    <div class=\"col-6\">\n                        Horario de clase:\n                    </div>\n                    <div class=\"col-6\">\n                        {{grupalCourse.classTime}}\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-6\">\n                        Descripcion del curso:\n                    </div>\n\n                    <div class=\"col-6\">\n                        {{grupalCourse.description}}\n                    </div>\n                </div>\n\n                <div class=\"row space-over space-bottom\">\n                    <div *ngIf=\"authService.hasRole('ROLE_STUDENT')\" class=\"col-12 text-center\">\n                        <button type=\"button\" class=\"btn btn-outline-info col-6\" (click)=\"makeInscription()\" >Inscribirme al grupo</button>\n                    </div>\n                </div>\n\n            </div>\n            <div class=\"modal-footer\">\n                <button *ngIf=\"authService.hasRole('ROLE_STUDENT')\" type=\"button\" class=\"btn btn-info col-md-4\" data-dismiss=\"modal\" (click)=\"goToProfile()\">Ir a mi perfil</button>\n                <button type=\"button\" class=\"btn btn-outline-info col-md-4\" data-dismiss=\"modal\" (click)=\"closeModal()\">Cerrar</button>\n            </div>\n         \n        </div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-student-timer',\n  templateUrl: './student-timer.component.html',\n  styleUrls: ['./student-timer.component.css']\n})\nexport class StudentTimerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<ng-template #editModal let-modal>\n\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Edit Form</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div class=\"modal-body\">\n\n        <form>\n            <div class=\"form-group\">\n                <label for=\"dateOfBirth\">Date of birth</label>\n                <div class=\"input-group\">\n                    <input id=\"dateOfBirth\" class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" ngbDatepicker\n                        #dp=\"ngbDatepicker\">\n                    <div class=\"input-group-append\">\n                        <button class=\"btn btn-outline-secondary calendar\" (click)=\"dp.toggle()\" type=\"button\"></button>\n                    </div>\n                </div>\n            </div>\n        </form>\n\n    </div>\n\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close()\">Save</button>\n    </div>\n\n</ng-template>","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ModalService } from 'src/app/services/modal.service';\nimport { TeacherService } from '../../services/teacher.service';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-teacher-info',\n  templateUrl: './teacher-info.component.html',\n  styleUrls: ['./teacher-info.component.css']\n})\nexport class TeacherInfoComponent implements OnChanges, OnInit {\n\n  @Input() public idTeacherFor: any;\n  public teacherFound: any;\n  public endpoint_teacher_image = environment.teacher.host_image;\n\n  constructor(\n    private modalService: ModalService,\n    private teacherService: TeacherService\n  ) { }\n\n\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.idTeacherFor = this.idTeacherFor;\n    console.log(\"id del profesor ngOnInt teacher info \", this.idTeacherFor);\n    this.teacherService.getTeachersById(this.idTeacherFor).subscribe(resp => {\n      console.log(\"respuesta \", resp);\n      this.teacherFound = resp;\n      console.log(\"objeto del teacher \", this.teacherFound);\n    });\n  }\n\n\n  ngOnInit(): void {\n    console.log(\"id del profesor ngOnInt teacher info \", this.idTeacherFor);\n    this.teacherService.getTeachersById(this.idTeacherFor).subscribe(resp => {\n      console.log(\"respuesta \", resp);\n      this.teacherFound = resp;\n      console.log(\"objeto del teacher \", this.teacherFound);\n    });\n  }\n\n  closeModal() {\n    this.modalService.closeModal();\n  }\n\n}\n","<!-- Modal -->\n<div class=\"modal fade\" id=\"openTeacherInfo\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\"\n    aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row space-over\">\n                    <div class=\"col-12 text-center\">\n                        <img src=\"{{endpoint_teacher_image}}/{{teacherFound.picture }}\" alt=\"\"\n                            class=\"img-thumbnail rounded image-size\" style=\"border-radius: 50% !important;\">\n                    </div>\n                </div>\n\n\n                <div class=\"text-center\">\n                    <div class=\"row\" style=\"padding-top: 5px;\">\n                        <div class=\"col-6\">\n                            <h2 style=\"color: rgb(70, 219, 219);\"> Nombre </h2>\n                        </div>\n                        <div class=\"col-6\">\n                            <h2> {{teacherFound.name}} {{teacherFound.lastName}} </h2>\n                        </div>\n                    </div>\n\n                    <div class=\"row\" style=\"padding-top: 5px;\">\n                        <div class=\"col-6\">\n                            <h2 style=\"color: rgb(70, 219, 219);\"> Educación </h2>\n                        </div>\n                        <div class=\"col-6\">\n                            <h2> {{teacherFound.education}} </h2>\n                        </div>\n                    </div>\n\n                    <div class=\"row\" style=\"padding-top: 5px;\">\n                        <div class=\"col-6\">\n                            <h2 style=\"color: rgb(70, 219, 219);\"> Costo por hora</h2>\n                        </div>\n                        <div class=\"col-6\">\n                            <h2> {{teacherFound.hourCost | currency}} COP </h2>\n                        </div>\n                    </div>\n\n                    <div class=\"row\" style=\"padding-top: 5px;\">\n                        <div class=\"col-6\">\n                            <h2 style=\"color: rgb(70, 219, 219);\"> Acerca de mi </h2>\n                        </div>\n                        <div class=\"col-6\">\n                            <h2> {{teacherFound.description}}</h2>\n                        </div>\n                    </div>\n\n                    <div class=\"row\" style=\"padding-top: 5px;\">\n                        <div class=\"col-6\">\n                            <h2 style=\"color: rgb(70, 219, 219);\"> Clasificación </h2>\n                        </div>\n                        <div class=\"col-6\">\n                            <h2> Promedio: ( <u>{{teacherFound.calification}}</u> ) de ( <u>{{teacherFound.countStudent}}</u> ) clasificaciones</h2>\n                        </div>\n                    </div>\n\n                   \n\n                    <div class=\"row\" style=\"padding-top: 15px;\">\n                       \n                    </div>\n\n                    <div class=\"row\" style=\"padding-top: 15px;\">\n                       \n                    </div>\n                </div>\n\n\n\n            </div>\n            <div class=\"modal-footer\">\n\n            </div>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teacher-timer',\n  templateUrl: './teacher-timer.component.html',\n  styleUrls: ['./teacher-timer.component.css']\n})\nexport class TeacherTimerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>teacher-timer works!</p>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalService } from '../../services/modal.service';\nimport Swal from 'sweetalert2';\nimport { courseEntity } from '../../interfaces/coursesEntity';\nimport { CourseService } from '../../services/course.service';\nimport { environment } from '../../../environments/environment';\nimport { TeacherService } from '../../services/teacher.service';\nimport { teacherEntity } from '../../interfaces/teacherEntity';\n\n@Component({\n  selector: 'app-tutoria-form-create',\n  templateUrl: './tutoria-form-create.component.html',\n  styleUrls: ['./tutoria-form-create.component.css']\n})\nexport class TutoriaFormCreateComponent implements OnInit {\n\n  @Input() tutoriaCourse: courseEntity;\n  @Output() tutoriaCourseEmmiter = new EventEmitter<any>();\n  @Input() idTeacherHeredado: number;\n  modalTutoriaCreateForm: FormGroup;\n  public selectedPicture: File;\n  public environment = environment;\n  public endpoint_course_image = environment.course.host_image;\n  public imageNameFromService: any;\n  public idTeacher: any;\n  public teacherFound: teacherEntity = new teacherEntity();\n\n  constructor(\n    public modalService: ModalService,\n    private formBuilder: FormBuilder,\n    private tutoriaCourseService: CourseService,\n    private teacherService: TeacherService\n  ) { }\n\n  get name() {\n    return this.modalTutoriaCreateForm.get('name');\n  }\n\n  get description() {\n    return this.modalTutoriaCreateForm.get('description');\n  }\n\n  get meetUrlCourse() {\n    return this.modalTutoriaCreateForm.get('meetUrlCourse');\n  }\n\n  ngOnInit(): void {\n    this.modalTutoriaCreateForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]],\n      description: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]],\n      meetUrlCourse: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]]\n    });\n    this.idTeacher = sessionStorage.getItem('teacherId');\n    this.teacherService.getTeachersById(this.idTeacher).subscribe((resp) => {\n      this.teacherFound = resp;\n    });\n  }\n\n  closeModal() {\n    this.modalService.closeModal();\n  }\n\n  createTutoriaCourseAndCloseModal() {\n    let tutoriaCourseToCreate = this.tutoriaCourse = this.modalTutoriaCreateForm.value;\n    tutoriaCourseToCreate.busy = false;\n    tutoriaCourseToCreate.idTeacher = +this.idTeacherHeredado;\n    tutoriaCourseToCreate.name = tutoriaCourseToCreate.name;\n\n    this.tutoriaCourseService.createTutoriaCourse(tutoriaCourseToCreate).subscribe((resp) => {\n      Swal.fire({\n        title: `Creación exitosa`,\n        html: `El curso ${tutoriaCourseToCreate.name} ha sido creado con exito`,\n        icon: 'success',\n        confirmButtonColor: '#5cb85c',\n        confirmButtonText: 'Volver a la lista de tutorias',\n      }).then((result) => {\n        if (result.value) {\n          this.modalService.closeModal();\n          this.updateTutoriaCourses();\n        }\n      })\n    });\n  }\n\n  updateTutoriaCourses() {\n    this.tutoriaCourseEmmiter.emit(true);\n  }\n\n}\n","<!-- Modal -->\n<div *ngIf=\"modalService.modal\" class=\"modal fade\" id=\"modalTutoriaCreateForm\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row space-over space-bottom\">\n                    <div class=\"col-12 text-center\">\n                        <h2> Formulario para crear tutoria</h2>\n                    </div>\n                </div>\n                <div class=\"text-center\">\n                    <form autocomplete=\"off\" [formGroup]=\"modalTutoriaCreateForm\">\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput\">Nombre</label>\n                            <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"{{tutoriaCourse?.name}}\"\n                                formControlName=\"name\">\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"name.errors.minlength || name.errors.maxlength \">\n                                    El nombre debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"name.errors.required\">\n                                    El nombre es requerido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput\">Descripción</label>\n                            <input type=\"text\" class=\"form-control\" id=\"description\"\n                                placeholder=\"{{tutoriaCourse?.description}}\" formControlName=\"description\">\n                            <div *ngIf=\"description.invalid && (description.dirty || description.touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"description.errors.minlength || description.errors.maxlength \">\n                                    La descripción debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"description.errors.required\">\n                                    La descripción es requerido\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput2\">urlMeet</label>\n                            <input type=\"text\" class=\"form-control\" id=\"urlMeet\"\n                                placeholder=\"{{tutoriaCourse?.meetUrlCourse}}\" formControlName=\"meetUrlCourse\">\n                            <div *ngIf=\"meetUrlCourse.invalid && (meetUrlCourse.dirty || meetUrlCourse.touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"meetUrlCourse.errors.minlength || meetUrlCourse.errors.maxlength \">\n                                    La url del meet debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"meetUrlCourse.errors.required\">\n                                    La url del meet es requerido\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div class=\"modal-footer text-center\">\n\n                <button *ngIf=\"modalTutoriaCreateForm.valid\" type=\"submit\" class=\"btn btn-info col-md-5\"\n                    data-dismiss=\"modal\" (click)=\"createTutoriaCourseAndCloseModal()\">Crear</button>\n\n                <button type=\"button\" class=\"btn btn-outline-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"closeModal()\">Cerrar</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalService } from '../../services/modal.service';\nimport Swal from 'sweetalert2';\nimport { courseEntity } from '../../interfaces/coursesEntity';\nimport { CourseService } from '../../services/course.service';\n\n@Component({\n  selector: 'app-tutoria-form',\n  templateUrl: './tutoria-form.component.html',\n  styleUrls: ['./tutoria-form.component.css']\n})\nexport class TutoriaFormComponent implements OnInit {\n\n  @Input() tutoriaCourse: any;\n  @Input() idTeacherHeredado: any;\n  @Output() tutoriaCourseEmmiter = new EventEmitter<any>();\n  tutoriaCreateForm: FormGroup;\n\n  constructor(\n    public modalService: ModalService,\n    private formBuilder: FormBuilder,\n    private tutoriaCourseService: CourseService\n  ) { }\n\n  get name() {\n    return this.tutoriaCreateForm.get('name');\n  }\n\n  get description() {\n    return this.tutoriaCreateForm.get('description');\n  }\n\n  get meetUrlCourse() {\n    return this.tutoriaCreateForm.get('meetUrlCourse');\n  }\n\n  ngOnInit(): void {\n    this.tutoriaCreateForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]],\n      description: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]],\n      meetUrlCourse: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(255)]]\n    });\n  }\n\n  closeModal() {\n    this.modalService.closeModal();\n  }\n\n  updateTutoriaCourseAndCloseModal(tutoriaCourseFromParent: courseEntity, tutoriaCourseFromParentId: number) {\n\n    let actualTutoriaCourse = this.tutoriaCourse;\n    let tutoriaCourseGrupalCourse = this.tutoriaCreateForm.value;\n\n    if (tutoriaCourseGrupalCourse.name === null) {\n      tutoriaCourseGrupalCourse.name = actualTutoriaCourse.name;\n    }\n\n    if (tutoriaCourseGrupalCourse.description === null) {\n      tutoriaCourseGrupalCourse.description = actualTutoriaCourse.description;\n    }\n\n    if (tutoriaCourseGrupalCourse.meetUrlCourse === null) {\n      tutoriaCourseGrupalCourse.meetUrlCourse = actualTutoriaCourse.meetUrlCourse;\n    }\n\n    if (actualTutoriaCourse.name != tutoriaCourseGrupalCourse.name && tutoriaCourseGrupalCourse.name.length > 0) {\n      actualTutoriaCourse.name = tutoriaCourseGrupalCourse.name;\n    } \n\n    if (actualTutoriaCourse.description != tutoriaCourseGrupalCourse.description && tutoriaCourseGrupalCourse.description.length > 0) {\n      actualTutoriaCourse.description = tutoriaCourseGrupalCourse.description;\n\n    } if (actualTutoriaCourse.meetUrlCourse != tutoriaCourseGrupalCourse.meetUrlCourse && tutoriaCourseGrupalCourse.meetUrlCourse.length > 0) {\n      actualTutoriaCourse.meetUrlCourse = tutoriaCourseGrupalCourse.meetUrlCourse;\n    }\n\n    actualTutoriaCourse.busy = false;\n    actualTutoriaCourse.idTeacher = +this.idTeacherHeredado;\n    this.tutoriaCourseService.updateTutoriaCourse(actualTutoriaCourse, tutoriaCourseFromParentId).subscribe((resp) => {\n      Swal.fire({\n        title: `Edición exitosa`,\n        html: `El curso ${actualTutoriaCourse.name} ha sido actualizado con exito`,\n        icon: 'success',\n        confirmButtonColor: '#5cb85c',\n        confirmButtonText: 'Volver a la lista de tutorias',\n      }).then((result) => {\n        if (result.value) {\n          this.modalService.closeModal();\n          this.updateTutoriaCourses();\n        }\n      })\n    });\n  }\n\n  updateTutoriaCourses() {\n    this.tutoriaCourseEmmiter.emit(true);\n  }\n\n}\n","<!-- Modal -->\n<div *ngIf=\"modalService.modal && tutoriaCourse\" class=\"modal fade\" id=\"modalTutoriaEditForm\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row space-over space-bottom\">\n                    <div class=\"col-12 text-center\">\n                        <h2> Formulario para editar tutoria</h2>\n                    </div>\n                </div>\n                <div class=\"text-center\">\n                    <form autocomplete=\"off\" [formGroup]=\"tutoriaCreateForm\">\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput\">Nombre</label>\n                            <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"{{tutoriaCourse?.name}}\"\n                                formControlName=\"name\">\n                            <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"alert alert-danger\">\n                                <div *ngIf=\"name.errors.minlength || name.errors.maxlength \">\n                                    El nombre debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"name.errors.required\">\n                                    El nombre es requerido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput\">Descripción</label>\n                            <input type=\"text\" class=\"form-control\" id=\"description\"\n                                placeholder=\"{{tutoriaCourse?.description}}\" formControlName=\"description\">\n                            <div *ngIf=\"description.invalid && (description.dirty || description.touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"description.errors.minlength || description.errors.maxlength \">\n                                    La descripción debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"description.errors.required\">\n                                    La descripción es requerido\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"formGroupExampleInput2\">urlMeet</label>\n                            <input type=\"text\" class=\"form-control\" id=\"urlMeet\" placeholder=\"{{tutoriaCourse?.meetUrlCourse}}\"\n                                formControlName=\"meetUrlCourse\">\n                            <div *ngIf=\"meetUrlCourse.invalid && (meetUrlCourse.dirty || meetUrlCourse.touched)\"\n                                class=\"alert alert-danger\">\n                                <div *ngIf=\"meetUrlCourse.errors.minlength || meetUrlCourse.errors.maxlength \">\n                                    La url del meet debe de tener entre 2 y 200 caracteres\n                                </div>\n                                <div *ngIf=\"meetUrlCourse.errors.required\">\n                                    La url del meet es requerido\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n            <div class=\"modal-footer text-center\">\n\n                <button  type=\"submit\" class=\"btn btn-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"updateTutoriaCourseAndCloseModal(tutoriaCourse, tutoriaCourse.id); tutoriaCreateForm.reset()\">Actualizar</button>\n\n                <button type=\"button\" class=\"btn btn-outline-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"closeModal(); tutoriaCreateForm.reset()\">Cerrar</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tutoria',\n  templateUrl: './tutoria.component.html',\n  styleUrls: ['./tutoria.component.css']\n})\nexport class TutoriaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tutoria works!</p>\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModalService } from '../../services/modal.service';\nimport Swal from 'sweetalert2';\nimport { courseEntity } from '../../interfaces/coursesEntity';\nimport { CourseService } from '../../services/course.service';\nimport { environment } from '../../../environments/environment';\n\n\n@Component({\n  selector: 'app-upload-course-image',\n  templateUrl: './upload-course-image.component.html',\n  styleUrls: ['./upload-course-image.component.css']\n})\nexport class UploadCourseImageComponent {\n\n  @Input() courseId: any;\n  @Output() tutoriaCourseEmmiter = new EventEmitter<any>();\n  public selectedPicture: File;\n  public environment = environment;\n  public endpoint_course_image = environment.course.host_image;\n  public imageNameFromService: any;\n\n  constructor(\n    public modalService: ModalService,\n    private formBuilder: FormBuilder,\n    private tutoriaCourseService: CourseService\n  ) { }\n\n\n  closeModal() {\n    this.modalService.closeModal();\n  }\n\n  choosePicture(event) {\n    this.selectedPicture = event.target.files[0];\n    if (this.selectedPicture.type.indexOf('image') < 0) {\n      Swal.fire('Error', 'El formato de la imagen no es valido', 'error');\n      this.selectedPicture = null;\n    }\n\n    if (!this.selectedPicture) {\n      Swal.fire('Error', 'Se debe seleccionar una imagen', 'error');\n    } else {\n      this.tutoriaCourseService.uploadCoursePicture(this.selectedPicture, this.courseId)\n      .subscribe((resp => {\n        // colocar spinner en lo que carga la imagen\n        this.imageNameFromService = resp.picture;\n        Swal.fire('Subida exitosa', 'La imagen se ha cargado con exito', 'success');\n      }))\n    }\n  }\n\n\n  okk() {\n    this.tutoriaCourseEmmiter.emit(true);\n  }\n}\n","<!-- Modal -->\n<div *ngIf=\"modalService.modal && courseId\" class=\"modal fade\" id=\"modalImageCourse\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"input-group\">\n                    <div class=\"custom-file\">\n                        <input (change)=\"choosePicture($event)\" type=\"file\" class=\"custom-file-input\"\n                            id=\"inputGroupFile04\">\n                        <label class=\"custom-file-label\" for=\"inputGroupFile04\"></label>\n                    </div>\n                </div>\n\n                <div *ngIf=\"selectedPicture\" class=\"input-group\">\n                        <div class=\"row\">\n                            <div class=\"col-12 text-center\">\n                                <img src=\"{{endpoint_course_image}}/{{imageNameFromService}}\" alt=\"\"\n                                    class=\"img-thumbnail rounded image-size\">\n\n                            </div>\n                        </div>\n                </div>\n            </div>\n            <div class=\"modal-footer text-center\">\n\n                <button [disabled]=\"!selectedPicture\" type=\"submit\" class=\"btn btn-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"okk()\">Aceptar</button>\n\n                <button type=\"button\" class=\"btn btn-outline-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"closeModal();\">Cerrar</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModalService } from '../../services/modal.service';\nimport Swal from 'sweetalert2';\nimport { courseEntity } from '../../interfaces/coursesEntity';\nimport { CourseService } from '../../services/course.service';\nimport { environment } from '../../../environments/environment';\nimport { GrupalCoursesService } from '../../services/grupal-courses.service';\n\n@Component({\n  selector: 'app-upload-grupal-course-image',\n  templateUrl: './upload-grupal-course-image.component.html',\n  styleUrls: ['./upload-grupal-course-image.component.css']\n})\nexport class UploadGrupalCourseImageComponent {\n\n  @Input() courseId: any;\n  @Output() grupalCourseEmmiterUpload = new EventEmitter<any>();\n  public selectedPicture: File;\n  public environment = environment;\n  public endpoint_grupal_course_image = environment.grupalCourse.host_image;\n  public imageNameFromService: any;\n\n  constructor(\n    public modalService: ModalService,\n    private formBuilder: FormBuilder,\n    private grupalCourseService: GrupalCoursesService\n  ) { }\n\n\n  closeModal() {\n    this.modalService.closeModal();\n  }\n\n  choosePicture(event) {\n    this.selectedPicture = event.target.files[0];\n    if (this.selectedPicture.type.indexOf('image') < 0) {\n      Swal.fire('Error', 'El formato de la imagen no es valido', 'error');\n      this.selectedPicture = null;\n    }\n    if (!this.selectedPicture) {\n      Swal.fire('Error', 'Se debe seleccionar una imagen', 'error');\n    } else {\n      this.grupalCourseService.uploadGrupalCoursePicture(this.selectedPicture, this.courseId)\n        .subscribe((resp => {\n          // colocar spinner en lo que carga la imagen\n          this.imageNameFromService = resp.picture;\n          Swal.fire('Subida exitosa', 'La imagen se ha cargado con exito', 'success');\n        }))\n    }\n  }\n\n  okk() {\n    this.grupalCourseEmmiterUpload.emit(true);\n  }\n\n}\n","<!-- Modal -->\n<div *ngIf=\"modalService.modal && courseId\" class=\"modal fade\" id=\"modalImageGrupalCourse\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"input-group\">\n                    <div class=\"custom-file\">\n                        <input (change)=\"choosePicture($event)\" type=\"file\" class=\"custom-file-input\"\n                            id=\"inputGroupFile04\">\n                        <label class=\"custom-file-label\" for=\"inputGroupFile04\"></label>\n                    </div>\n                </div>\n\n                <div *ngIf=\"selectedPicture\" class=\"input-group\">\n                    <div>\n                        <img src=\"{{endpoint_grupal_course_image}}/{{imageNameFromService}}\" alt=\"\"\n                            class=\"img-thumbnail rounded image-size\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer text-center\">\n\n                <button [disabled]=\"!selectedPicture\" type=\"submit\" class=\"btn btn-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"okk()\">Aceptar</button>\n\n                <button type=\"button\" class=\"btn btn-outline-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"closeModal();\">Cerrar</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ModalService } from '../../services/modal.service';\nimport Swal from 'sweetalert2';\nimport { courseEntity } from '../../interfaces/coursesEntity';\nimport { CourseService } from '../../services/course.service';\nimport { environment } from '../../../environments/environment';\nimport { GrupalCoursesService } from '../../services/grupal-courses.service';\nimport { TeacherService } from '../../services/teacher.service';\n\n\n@Component({\n  selector: 'app-upload-teacher-image',\n  templateUrl: './upload-teacher-image.component.html',\n  styleUrls: ['./upload-teacher-image.component.css']\n})\nexport class UploadTeacherImageComponent {\n\n  @Input() teacherIdToHeredate: any;\n  @Output() TeacherEmmiterUpload = new EventEmitter<any>();\n  public selectedPicture: File;\n  public environment = environment;\n  public endpoint_grupal_course_image = environment.teacher.host_image;\n  public imageNameFromService: any;\n\n  constructor(\n    public modalService: ModalService,\n    private formBuilder: FormBuilder,\n    private teacherService: TeacherService\n  ) { }\n\n  closeModal() {\n    this.modalService.closeModal();\n  }\n\n  choosePicture(event) {\n    this.selectedPicture = event.target.files[0];\n    if (this.selectedPicture.type.indexOf('image') < 0) {\n      Swal.fire('Error', 'El formato de la imagen no es valido', 'error');\n      this.selectedPicture = null;\n    }\n    if (!this.selectedPicture) {\n      Swal.fire('Error', 'Se debe seleccionar una imagen', 'error');\n    } else {\n      this.teacherService.uploadTeacherPicture(this.selectedPicture, this.teacherIdToHeredate)\n      .subscribe((resp => {\n        // colocar spinner en lo que carga la imagen\n        this.imageNameFromService = resp.picture;\n        Swal.fire('Subida exitosa', 'La imagen se ha cargado con exito', 'success');\n      }))\n    }\n  }\n\n  okk() {\n    this.TeacherEmmiterUpload.emit(true);\n  }\n\n}\n","<!-- Modal -->\n<div *ngIf=\"modalService.modal\" class=\"modal fade\" id=\"modalImageTeacher\" tabindex=\"-1\" role=\"dialog\"\n    aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"closeModal()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"input-group\">\n                    <div class=\"custom-file\">\n                        <input (change)=\"choosePicture($event)\" type=\"file\" class=\"custom-file-input\"\n                            id=\"inputGroupFile04\">\n                        <label class=\"custom-file-label\" for=\"inputGroupFile04\"></label>\n                    </div>\n                </div>\n\n                <div *ngIf=\"selectedPicture\" class=\"input-group\">\n                    <div>\n                        <img src=\"{{endpoint_grupal_course_image}}/{{imageNameFromService}}\" alt=\"\"\n                            class=\"img-thumbnail rounded image-size\">\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer text-center\">\n\n                <button [disabled]=\"!selectedPicture\"  type=\"submit\" class=\"btn btn-info col-md-5\"\n                data-dismiss=\"modal\" (click)=\"okk()\">Aceptar</button>\n\n                <button type=\"button\" class=\"btn btn-outline-info col-md-5\" data-dismiss=\"modal\"\n                    (click)=\"closeModal();\">Cerrar</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FeedBackService } from 'src/app/services/feed-back.service';\nimport { TransactionService } from '../../../services/transaction.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n  displayedColumns: string[] = ['Nombre del estudiante', 'Nombre del profesor', 'Calificación', 'Comentario', 'fechaDeCreacion'];\n  dataSource: MatTableDataSource<any>;\n  documentForm: FormGroup;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  public onStudents: boolean;\n  public onTeachers: boolean;\n  public onCourses: boolean;\n  public onGrupalCourses: boolean;\n  public onMetrics: boolean;\n  public plaformValue: any;\n  public showTableFeedback: boolean;\n\n  constructor(\n    private transactionService: TransactionService,\n    private feedBackService: FeedBackService,\n    private formBuilder: FormBuilder,\n  ) {\n    this.onStudents = false;\n    this.onTeachers = false;\n    this.onCourses = false;\n    this.onGrupalCourses = false;\n    this.onMetrics = true;\n    this.showTableFeedback = false;\n\n\n\n  }\n\n  get documentName() {\n    return this.documentForm.get('documentName');\n  }\n\n  get initialDate() {\n    return this.documentForm.get('initialDate');\n  }\n\n  get endDate() {\n    return this.documentForm.get('endDate');\n  }\n\n  ngOnInit(): void {\n    this.documentForm = this.formBuilder.group({\n      initialDate: ['', [Validators.required]],\n      endDate: ['', [Validators.required]],\n      documentName: ['', [Validators.required]]\n    });\n    this.getPlataformValue();\n    this.getFeedBacks();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, 500);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getFeedBacks() {\n    this.feedBackService.getAllFeedBacks().subscribe(resp => {\n      this.dataSource = new MatTableDataSource(resp);\n    });\n  }\n\n  showFeedback() {\n    this.showTableFeedback = true;\n  }\n\n  closeFeedBack() {\n    this.showTableFeedback = false;\n  }\n\n  getPlataformValue() {\n    this.transactionService.getPlataformValues().subscribe(resp => {\n      console.log(\"valor \" + resp);\n      this.plaformValue = resp;\n    });\n  }\n\n\n  showPersonalCourses() {\n    this.onStudents = false;\n    this.onTeachers = false;\n    this.onCourses = true;\n    this.onGrupalCourses = false;\n    this.onMetrics = false\n  }\n\n\n  showGrupalCourses() {\n    this.onStudents = false;\n    this.onTeachers = false;\n    this.onCourses = false;\n    this.onGrupalCourses = true;\n    this.onMetrics = false\n  }\n\n\n  showTeachers() {\n    this.onStudents = false;\n    this.onTeachers = true;\n    this.onCourses = false;\n    this.onGrupalCourses = false;\n    this.onMetrics = false\n  }\n\n\n  showStudents() {\n    this.onStudents = true;\n    this.onTeachers = false;\n    this.onCourses = false;\n    this.onGrupalCourses = false;\n    this.onMetrics = false\n  }\n\n\n  showMetrics() {\n    this.onStudents = false;\n    this.onTeachers = false;\n    this.onCourses = false;\n    this.onGrupalCourses = false;\n    this.onMetrics = true\n  }\n\n  generateStudy() {\n    let initalDateToFormate = this.documentForm.value.initialDate;\n    let endDateToFormate = this.documentForm.value.endDate;\n    let documentName = this.documentForm.value.documentName;\n\n    var d = new Date(initalDateToFormate),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2)\n      month = '0' + month;\n    if (day.length < 2)\n      day = '0' + day;\n\n    var e = new Date(endDateToFormate),\n      monthe = '' + (e.getMonth() + 1),\n      daye = '' + e.getDate(),\n      yeare = e.getFullYear();\n\n    if (monthe.length < 2)\n      monthe = '0' + monthe;\n    if (daye.length < 2)\n      daye = '0' + daye;\n\n    let initialDateToSend = [year, month, day].join('-');\n    let endDateToSend = [yeare, monthe, daye].join('-');\n\n\n    let bodyToSend = {\n      'initialDate': initialDateToSend,\n      'finalDate': endDateToSend,\n      'documentName': documentName\n    }\n    console.log(\"BODYYY\", bodyToSend);\n\n\n    this.transactionService.createExcel(bodyToSend)\n      .subscribe(resp => {\n        const blob = new Blob([resp], { type: 'application/xlsx' });\n\n        const data = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = data;\n        link.download = `${documentName}.xlsx`;\n        link.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));\n\n      });\n  }\n\n\n}\n","<div class=\"all\">\n    <app-logged-nvbar></app-logged-nvbar>\n    <div class=\"card border-info\">\n        <div class=\"space-over space-bottom\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-12 space-bottom space-over text-center\">\n                        <h2>Acciones</h2>\n                    </div>\n                </div>\n                <div class=\"row navBarBackground text-center\">\n                    <div class=\"col-1\">\n\n                    </div>\n                    <div class=\"col-2\">\n                        <button class=\"btn btn-info\" (click)=\"showMetrics()\">Ver métricas </button>\n                    </div>\n                    <div class=\"col-2\">\n                        <button class=\"btn btn-info\" (click)=\"showStudents()\">Ver estudiantes </button>\n                    </div>\n                    <div class=\"col-2\">\n                        <button class=\"btn btn-info\" (click)=\"showTeachers()\">Ver profesores </button>\n                    </div>\n                    <div class=\"col-2\">\n                        <button class=\"btn btn-info\" (click)=\"showPersonalCourses()\">Ver tutorias</button>\n                    </div>\n                    <div class=\"col-3\">\n                        <button class=\"btn btn-info\" (click)=\"showGrupalCourses()\">Ver cursos grupales </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <div *ngIf=\"onMetrics\" class=\"space-over space-bottom\">\n            <div class=\"row\">\n                <div class=\"col-12 text-center text-info\">\n                    <h1>Panel de metricas</h1>\n                </div>\n            </div>\n\n            <div class=\"container card\">\n                <div class=\"row\">\n                    <div class=\"col-12 text-center\">\n                        <h2>Valor total generado por la plataforma</h2>\n                        <h1> <span class=\"badge badge-info\"> {{ this.plaformValue | currency}} COP </span> </h1>\n                    </div>\n                </div>\n\n                <form autocomplete=\"off\" [formGroup]=\"documentForm\">\n                    <div class=\"row\">\n                        <div class=\"col-12 text-center\">\n                            <h2> Exportar estadisticas </h2>\n                            <div class=\"row\" style=\"padding-bottom: 20px;\">\n                                <div class=\"col-4 text-center\">\n                                    Nombre del documento\n                                </div>\n                                <div class=\"col-4 text-center\">\n                                    Fecha Inicial\n                                </div>\n                                <div class=\"col-4 text-center\">\n                                    Fecha Final\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-4 text-center\" style=\"padding-top: 15px;\">\n                                    <div class=\"form-group\">\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"documentName\"\n                                            id=\"form-control\" name=\"documentName\">\n                                        <div *ngIf=\"documentName.invalid && (documentName.dirty || documentName.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"documentName.errors.required\">\n                                                El nombre del documento es requerido\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col text-center\">\n                                    <mat-form-field appearance=\"fill\">\n                                        <input matInput [matDatepicker]=\"one\" formControlName=\"initialDate\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"one\"></mat-datepicker-toggle>\n                                        <mat-datepicker #one></mat-datepicker>\n                                    </mat-form-field>\n                                    <div *ngIf=\"initialDate.invalid && (initialDate.dirty || initialDate.touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div *ngIf=\"initialDate.errors.required\">\n                                            El nombre del documento es requerido\n                                        </div>\n                                    </div>\n\n                                </div>\n                                <div class=\"col text-center\">\n                                    <mat-form-field appearance=\"fill\">\n                                        <input matInput [matDatepicker]=\"two\" formControlName=\"endDate\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"two\"></mat-datepicker-toggle>\n                                        <mat-datepicker #two></mat-datepicker>\n                                    </mat-form-field>\n                                    <div *ngIf=\"endDate.invalid && (endDate.dirty || endDate.touched)\"\n                                        class=\"alert alert-danger\">\n                                        <div *ngIf=\"endDate.errors.required\">\n                                            El nombre del documento es requerido\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-12 text-center\" style=\"padding-top: 20px; padding-bottom: 20px;\">\n                            <button class=\"btn btn-info\" (click)=\"generateStudy()\"\n                                [disabled]=documentForm.invalid>Generar\n                                informe </button>\n                            <div style=\"padding-bottom: 15px;\"></div>\n                            <div *ngIf=\"documentForm.invalid === true\" class=\"alert alert-danger\">\n                                <div *ngIf=\"endDate.errors.required\">\n                                    Algun campo para generar el documento no ha sido diligenciado correctamente\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n\n                <div class=\"row\">\n                    <div *ngIf=\"showTableFeedback === false; else elseBlockTable\" class=\"col-12 text-center\"\n                        style=\"padding-top: 20px; padding-bottom: 20px;\">\n                        <button class=\"btn btn-info\" (click)=\"showFeedback()\">Ver calificaciones a docentes\n                        </button>\n                    </div>\n                    <ng-template #elseBlockTable>\n                        <div class=\"col-12 text-center\" style=\"padding-top: 20px; padding-bottom: 20px;\">\n                            <button class=\"btn btn-info\" (click)=\"closeFeedBack()\">Cerrar calificaciones a docentes\n                            </button>\n                        </div>\n                    </ng-template>\n                </div>\n\n                <div *ngIf=\"showTableFeedback\">\n                    <div *ngIf=\"dataSource\" style=\"padding-bottom: 50px;\">\n                        <mat-form-field>\n                            <mat-label>Buscar</mat-label>\n                            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n                        </mat-form-field>\n\n                        <div class=\"mat-elevation-z8\">\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\n                                <ng-container matColumnDef=\"Nombre del estudiante\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre del estudiante </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.studentName}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Nombre del profesor\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre del profesor </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.teacherName}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Calificación\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Calificación </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.calification}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"Comentario\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Comentario </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.feedBack}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"fechaDeCreacion\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha de creación </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.fechaDeCreacion}} </td>\n                                </ng-container>\n\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                                <!-- Row shown when there is no matching data. -->\n                                <tr class=\"mat-row\" *matNoDataRow>\n                                    <td class=\"mat-cell\" colspan=\"3\">No data matching the filter \"{{input.value}}\"</td>\n                                </tr>\n                            </table>\n\n                            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <div *ngIf=\"onStudents\" class=\"space-over space-bottom\">\n        <div class=\"row\">\n            <div class=\"col-12 text-center text-info\">\n                <h1>Estudiantes registrados</h1>\n            </div>\n        </div>\n        <app-students></app-students>\n    </div>\n\n    <div *ngIf=\"onTeachers\" class=\"space-over space-bottom\">\n        <div class=\"row\">\n            <div class=\"col-12 text-center text-info\">\n                <h1>Profesores registrados</h1>\n            </div>\n        </div>\n        <app-teachers></app-teachers>\n    </div>\n\n    <div *ngIf=\"onCourses\" class=\"space-over space-bottom\">\n        <div class=\"row\">\n            <div class=\"col-12 text-center text-info\">\n                <h1>Tutorias registradas</h1>\n            </div>\n        </div>\n        <app-courses></app-courses>\n    </div>\n\n    <div *ngIf=\"onGrupalCourses\" class=\"space-over space-bottom\">\n        <div class=\"row\">\n            <div class=\"col-12 text-center text-info\">\n                <h1>Cursos gruaples registrados</h1>\n            </div>\n        </div>\n        <app-grupal-course-general></app-grupal-course-general>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-course-form',\n  templateUrl: './course-form.component.html',\n  styleUrls: ['./course-form.component.css']\n})\nexport class CourseFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>course-form works!</p>\n","import { AfterViewInit, Component, ViewChild, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { courseEntity } from '../../../interfaces/coursesEntity';\nimport { CourseService } from '../../../services/course.service';\nimport { environment } from '../../../../environments/environment.prod';\n\n\n@Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.css']\n})\nexport class CoursesComponent implements OnInit {\n  displayedColumns: string[] = ['algo', 'nombre', 'descripcion', 'urlMeet', 'profesor'];\n  dataSource: MatTableDataSource<courseEntity>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  public endpoint_course_image = environment.course.host_image;\n\n  constructor(\n    private courseService: CourseService\n  ) { }\n\n  ngOnInit(): void {\n    this.getAllCourses();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, 500);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getAllCourses() {\n    this.courseService.getAllCourses().subscribe((resp) => {\n      this.dataSource = new MatTableDataSource(resp);\n    });\n  }\n\n}\n","<div class=\"general-pedding\">\n    <div *ngIf=\"dataSource\" style=\"padding-bottom: 50px;\">\n        <mat-form-field>\n            <mat-label>Buscar tutoria</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n        </mat-form-field>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                <ng-container matColumnDef=\"algo\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>  </th>\n                    <td mat-cell *matCellDef=\"let row\">   \n                        <img src=\"{{endpoint_course_image}}/{{row.picture}}\" alt=\"\"\n                        class=\"img-thumbnail rounded image-size\"> \n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"nombre\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Curso </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"descripcion\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Descripcion </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"urlMeet\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> urlMeet </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.meetUrlCourse}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"profesor\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Profesor </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.teacherName}} </td>\n                </ng-container>\n\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"3\">No data matching the filter \"{{input.value}}\"</td>\n                </tr>\n            </table>\n\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n        </div>\n    </div>\n</div>\n\n<!-- <app-footer></app-footer> -->","import { AfterViewInit, Component, ViewChild, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { grupalCourseEntity } from '../../../interfaces/grupalCourseEntity';\nimport { GrupalCoursesService } from '../../../services/grupal-courses.service';\nimport { studentEntity } from '../../../interfaces/studentEntity';\nimport { environment } from '../../../../environments/environment.prod';\n\n@Component({\n  selector: 'app-grupal-course-general',\n  templateUrl: './grupal-course.component.html',\n  styleUrls: ['./grupal-course.component.css']\n})\nexport class GrupalCourseGeneralComponent implements OnInit {\n  displayedColumns: string[] = ['picture', 'name', 'description', 'classTime', 'urlMeet', 'ver'];\n  dataSource: MatTableDataSource<grupalCourseEntity>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  public studentList: studentEntity[];\n  public endpoint_grupal_course_image = environment.grupalCourse.host_image;\n  public courseName: any;\n\n\n  constructor(\n    private grupalCourseService: GrupalCoursesService\n  ) {\n    this.studentList = [];\n  }\n\n  ngOnInit(): void {\n    this.getAllGrupalCourses();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, 500);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getAllGrupalCourses() {\n    this.grupalCourseService.getAllGrupalCourses().subscribe((resp) => {\n      this.dataSource = new MatTableDataSource(resp);\n    });\n  }\n\n  watchStudents(element: any) {\n    this.courseName = element.name;\n    this.studentList = element.studentes;\n  }\n\n}\n","<div class=\"general-pedding\">\n    <div *ngIf=\"dataSource\" style=\"padding-bottom: 50px;\">\n        <mat-form-field>\n            <mat-label>Buscar curso</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n        </mat-form-field>\n\n        <div *ngIf=\"studentList.length > 0\">\n            <div class=\"card border-info\">\n                <div class=\"row\">\n                    <div class=\"col-12 text-center text-info\" style=\"padding-top: 10px; padding-bottom: 10px;\">\n                        <h2>Estudiantes inscritos al curso {{courseName}}</h2>\n                    </div>\n                </div>\n                <div class=\"space-over text-center \">\n                    <table class=\"table table-striped\">\n                        <thead class=\"thead-light\">\n                            <tr>\n                                <th scope=\"col\">Nombre</th>\n                                <th scope=\"col\">Telefono</th>\n                                <th scope=\"col\">Correo</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let student of studentList\">\n                                <td>{{student.name}} {{student.lastName}}</td>\n                                <td>{{student.phone}}</td>\n                                <td>{{student.email}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n                <ng-container matColumnDef=\"picture\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <img src=\"{{endpoint_grupal_course_image}}/{{row.picture}}\" alt=\"\"\n                            class=\"img-thumbnail rounded image-size\">\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"name\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"description\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Descripcion </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.description}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"classTime\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Hora </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.classTime}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"urlMeet\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Url meet </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.urlMeet}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"ver\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Ver cursos </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <button class=\"btn btn-info\" (click)=\"watchStudents(row)\"> ver estudiantes </button>\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"3\">No data matching the filter \"{{input.value}}\"</td>\n                </tr>\n            </table>\n\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n        </div>\n    </div>\n</div>\n<!-- \n<app-footer></app-footer> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-student-form',\n  templateUrl: './student-form.component.html',\n  styleUrls: ['./student-form.component.css']\n})\nexport class StudentFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>student-form works!</p>\n","import { AfterViewInit, Component, ViewChild, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { StudentService } from '../../../services/student.service';\nimport { studentEntity } from '../../../interfaces/studentEntity';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css']\n})\nexport class StudentsComponent implements OnInit {\n  displayedColumns: string[] = ['nombre', 'apellido', 'correo', 'telefono', 'fechaDeCreacion'];\n  dataSource: MatTableDataSource<studentEntity>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private studentService: StudentService\n  ) { }\n\n  ngOnInit() {\n    this.getAllStudents();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, 500);\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getAllStudents() {\n    this.studentService.getAllStudents().subscribe((resp => {\n      this.dataSource = new MatTableDataSource(resp);\n    }));\n  }\n\n}\n","<div class=\"general-pedding\">\n    <div *ngIf=\"dataSource\" style=\"padding-bottom: 50px;\">\n        <mat-form-field>\n            <mat-label>Buscar estudiante</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n        </mat-form-field>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n                <ng-container matColumnDef=\"nombre\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"apellido\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Apellido </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.lastName}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"correo\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Correo </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"telefono\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Telefono </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.phone}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"fechaDeCreacion\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha de creación </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.fechaDeCreacion}} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"3\">No data matching the filter \"{{input.value}}\"</td>\n                </tr>\n            </table>\n\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n        </div>\n    </div>\n</div>\n\n<!-- <app-footer></app-footer> -->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subject-form',\n  templateUrl: './subject-form.component.html',\n  styleUrls: ['./subject-form.component.css']\n})\nexport class SubjectFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>subject-form works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-subjects',\n  templateUrl: './subjects.component.html',\n  styleUrls: ['./subjects.component.css']\n})\nexport class SubjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>subjects works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teacher-form',\n  templateUrl: './teacher-form.component.html',\n  styleUrls: ['./teacher-form.component.css']\n})\nexport class TeacherFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>teacher-form works!</p>\n","import { AfterViewInit, Component, ViewChild, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { teacherEntity } from '../../../interfaces/teacherEntity';\nimport { TeacherService } from '../../../services/teacher.service';\nimport { courseEntity } from '../../../interfaces/coursesEntity';\nimport { environment } from '../../../../environments/environment.prod';\n\n\n@Component({\n  selector: 'app-teachers',\n  templateUrl: './teachers.component.html',\n  styleUrls: ['./teachers.component.css']\n})\nexport class TeachersComponent implements OnInit {\n\n  displayedColumns: string[] = ['nombre', 'apellido', 'correo', 'telefono', 'fecha','state', 'profile', 'cursos', 'available', 'calificacion'];\n  dataSource: MatTableDataSource<teacherEntity>;\n  public environment = environment;\n  public listOfCourses: courseEntity[];\n  public endpoint_grupal_course_image = environment.course.host_image;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private teacherService: TeacherService\n  ) {\n    this.listOfCourses = [];\n  }\n\n  ngOnInit(): void {\n    this.getAllTeachers();\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, 500);\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  getAllTeachers() {\n    this.teacherService.getAllTeachers().subscribe((resp => {\n      this.dataSource = new MatTableDataSource(resp);\n    }));\n  }\n\n  watchCourses(element: any) {\n    this.listOfCourses = element.courses;\n  }\n\n  enableTeacher(row: any) {\n    console.log(\"valor de disable \", row);\n    this.teacherService.enableTeacherPlatform(row.idUser).subscribe(resp => {\n      console.log(\"respuesta del servicio de activar profesor \", resp);\n    })\n    this.dataSource = new MatTableDataSource();\n    setTimeout(() => {\n      this.getAllTeachers();\n    }, 1000);\n\n  }\n\n  disableTeacher(row: any) {\n    console.log(\"valor de disable \", row);\n    this.teacherService.disableTeacherPlatform(row.idUser).subscribe(resp => {\n      console.log(\"respuesta del servicio de desactivar profesor \", resp);\n    })\n    this.dataSource = new MatTableDataSource();\n    setTimeout(() => {\n      this.getAllTeachers();\n    }, 1000);\n\n  }\n\n  profileChoosed(profile:any, teacherID: any) {\n    console.log(\"perfil seleccionado \", profile );\n    let objectToSend = {\n      \"teacherId\": teacherID,\n      \"profile\": profile\n    }\n    this.teacherService.updateTeacherProfile(objectToSend).subscribe(resp => {\n      console.log(\"perfil actualizado\");\n    })\n    this.dataSource = new MatTableDataSource();\n    setTimeout(() => {\n      this.getAllTeachers();\n    }, 2000);\n  }\n\n}\n","<div class=\"general-pedding\">\n    <div *ngIf=\"dataSource\" style=\"padding-bottom: 50px;\">\n        <mat-form-field>\n            <mat-label>Buscar profesor</mat-label>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\n        </mat-form-field>\n\n\n        <div *ngIf=\"listOfCourses.length > 0\" class=\"row\">\n            <div *ngFor=\"let course of listOfCourses\" class=\"col-4 text-center\">\n                <div class=\"card border-secondary mb-3\" style=\"width: 300px; height: 400px;\">\n                    <div class=\"card-header\"><b>Nombre</b></div>\n                    <div class=\"card-header\">{{course.name}}</div>\n                    <div class=\"card-body text-secondary\">\n                        <img src=\"{{endpoint_grupal_course_image}}/{{course.picture}}\" alt=\"\"\n                            class=\"img-thumbnail rounded image-size\">\n                        <p class=\"card-text\"><b>descripción de curso</b></p>\n                        <p class=\"card-text\">{{course.description}} </p>\n                        <p class=\"card-text\"><b> Url de Google meet</b> </p>\n                        <a href=\"{{course.meetUrlCourse}}\" target=\"_blank\">{{course.meetUrlCourse}}</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort>\n                <ng-container matColumnDef=\"nombre\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"apellido\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Apellido </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.lastName}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"correo\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Correo </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.email}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"telefono\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Telefono </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.phone}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"fecha\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha de creacion </th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.fechaDeCreacion}} </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"state\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Estado </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <div *ngIf=\"row.enabled == false; else disableTeacher\">\n                            <h2><span class=\"badge badge-warning\"> Desactivado </span> </h2>\n                        </div>\n                        <ng-template #disableTeacher>\n                            <h2><span class=\"badge badge-success\" style=\"color: white !important;\"> Activado </span> </h2>\n                        </ng-template>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"profile\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Perfil </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <select class=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\">\n                            <option selected>{{row.profile}} </option>\n                            <option value=\"Amateur\" (click)=\"profileChoosed('Amateur', row.id)\">Amateur</option>\n                            <option value=\"Junior\" (click)=\"profileChoosed('Junior', row.id)\">Junior</option>\n                            <option value=\"Senior\" (click)=\"profileChoosed('Senior', row.id)\">Senior</option>\n                            <option value=\"Master\" (click)=\"profileChoosed('Master', row.id)\">Master</option>\n                            <option value=\"Gran Master\" (click)=\"profileChoosed('Gran Master', row.id)\">Gran Master</option>\n                          </select>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"cursos\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Ver cursos </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <button class=\"btn btn-info\" (click)=\"watchCourses(row)\"> ver </button>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"available\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Acceso </th>\n                    <td mat-cell *matCellDef=\"let row\">\n                        <div *ngIf=\"row.enabled == true; else elseButton\">\n                            <button class=\"btn btn-warning\" (click)=\"disableTeacher(row)\"> Descativar </button>\n                        </div>\n                        <ng-template #elseButton>\n                            <button class=\"btn btn-success\" (click)=\"enableTeacher(row)\"> Activar</button>\n                        </ng-template>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"calificacion\">\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Calificación</th>\n                    <td mat-cell *matCellDef=\"let row\"> {{row.calification}} ({{row.countStudent}}) </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n                <!-- Row shown when there is no matching data. -->\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell\" colspan=\"3\">No data matching the filter \"{{input.value}}\"</td>\n                </tr>\n            </table>\n\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n        </div>\n    </div>\n</div>\n<div style=\"padding-top: 100px;\">\n    <!-- <app-footer></app-footer> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { WebSocketService } from '../../../services/web-socket.service';\nimport { Client } from '@stomp/stompjs';\nimport { environment } from '../../../../environments/environment.prod';\nimport { interval } from 'rxjs';\nimport Sw, { SweetAlertIcon } from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { flatMap, map } from 'rxjs/operators';\nimport { courseEntity } from '../../../interfaces/coursesEntity';\nimport { CourseService } from '../../../services/course.service';\nimport { GrupalCoursesService } from '../../../services/grupal-courses.service';\nimport { grupalCourseEntity } from '../../../interfaces/grupalCourseEntity';\nimport { ModalService } from '../../../services/modal.service';\nimport { Mensaje } from '../../../interfaces/Mensaje';\nimport { AuthService } from '../../../services/auth.service';\nimport Swal from 'sweetalert2';\nimport { TemplateRef, ViewChild } from '@angular/core';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { FeedBackService } from 'src/app/services/feed-back.service';\nimport { TeacherService } from 'src/app/services/teacher.service';\nimport { StudentService } from 'src/app/services/student.service';\n\n\n@Component({\n  selector: 'app-home-loged',\n  templateUrl: './home-loged.component.html',\n  styleUrls: ['./home-loged.component.css']\n})\nexport class HomeLogedComponent implements OnInit {\n\n  private client: Client;\n  private responseTopicTeacherSocket: any;\n  private publis_topic_endpoint = '/app/teacher/socket';\n  private timer_channel_send = '/app/teacher/student/timer';\n  private timer_channel_subscribe = '/topic/teacher/student/timer';\n  private endpoint_socket: string = environment.webSocket.host;\n  public reponseFromTopicSocketTeacher: any;\n  public array: any[] = [];\n  public mensaje: any;\n  public coursesToShow: any[] = [];\n  public idStudent: any;\n  public idTeacher: any;\n  public groupCourses: any[] = [];\n  public favoritOne: any[] = [];\n  public favoritTwo: any[] = [];\n  public favoritThree: any[] = [];\n  public coursesFonundSearch: courseEntity[] = [];\n  public coursesFonundGrupal: grupalCourseEntity[] = [];\n  public grupalCourseSelected: grupalCourseEntity;\n  public optionOneSelected: boolean = false;\n  public optionTwoSelected: boolean = false;\n  public chatModalOpen: boolean = false;\n  public urlMeetSelected: any;\n  public environment = environment;\n  public endpoint_course_image = environment.course.host_image;\n  public endpoint_grupal_course_image = environment.grupalCourse.host_image;\n  public socketClient: any;\n  private socket_teacher_notification_chanel: any = '/topic/notification/chanel/teacher';\n  private publish_socket_teacher_notification_chanel: any = '/app/notification/chanel/teacher';\n  public timeOnSession: any;\n  public studentTime: any;\n  public seconds: number;\n  public minutes: number;\n  public totalTime: any;\n  public breakLopp: boolean;\n  public counter: number;\n  public counterTwo: number;\n  public isTrue: boolean;\n  public showPartOne: boolean;\n  public showPartTwo: boolean;\n  public showPartThree: boolean;\n  public showStartButton: boolean;\n  public showStopButton: boolean;\n  public studentMinutes: number;\n  public showTeacherInfo: boolean;\n  public idTeacherSelected: any;\n  public feedback: any;\n  public radioOne: any;\n  public isCheckedOne = false;\n  public isCheckedTwo = false;\n  public isCheckedThree = false;\n  public isCheckedFour = false;\n  public isCheckedFive = false;\n  public finalCalification: number;\n  public isTutoriaAvailable: boolean;\n\n\n  @ViewChild('editModalHome') editModalHome: TemplateRef<any>; // Note: TemplateRef\n\n  constructor(\n    private webSocketService: WebSocketService,\n    private router: Router,\n    private courseService: CourseService,\n    private grupalService: GrupalCoursesService,\n    private modalService: ModalService,\n    public authService: AuthService,\n    private boostrapModalService: NgbModal,\n    private feedBackService: FeedBackService,\n    private teacherService: TeacherService,\n    private studentService: StudentService\n  ) {\n    this.timeOnSession = 0;\n    this.studentTime = 0;\n    this.counter = 0;\n    this.seconds = 0;\n    this.minutes = 0;\n    this.isTrue = false;\n    this.showPartOne = true;\n    this.showPartTwo = false;\n    this.showPartThree = false;\n    this.breakLopp = true;\n    this.counterTwo = 0;\n    this.showTeacherInfo = false;\n    this.isTutoriaAvailable = false;\n  }\n\n  autoComplete = new FormControl();\n  autoCompleteGrupalCourses = new FormControl();\n  filteredOptions: Observable<courseEntity[]>;\n  filteredOptionsGrupalCourses: Observable<grupalCourseEntity[]>;\n\n\n  //buscar una mejor forma para observar los cambios\n  ngOnInit(): void {\n    this.idStudent = sessionStorage.getItem('studentId');\n    // const source = interval(2000);\n    // const subscribe = source.subscribe(() => this.getNewData());\n\n    this.filteredOptions = this.autoComplete.valueChanges\n      .pipe(\n        map(value => typeof value === 'string' ? value : value.name),\n        flatMap(value => value ? this._filter(value) : [])\n      );\n\n    this.filteredOptionsGrupalCourses = this.autoCompleteGrupalCourses.valueChanges\n      .pipe(\n        map(value => typeof value === 'string' ? value : value.name),\n        flatMap(value => value ? this._filterGrupalCourse(value) : [])\n      );\n\n    this.getStudentMoneyMethod();\n\n  }\n\n  getStudentMoneyMethod() {\n    this.studentService.getStudentMoney(this.idStudent).subscribe(resp => {\n      if (resp >= +5000) {\n        console.log(\"can have tutoria\");\n        this.isTutoriaAvailable = true;\n      } else {\n        console.log(\"cant have tutoria\");\n        this.isTutoriaAvailable = false;\n      }\n    })\n  }\n\n  private _filter(value: string): Observable<courseEntity[]> {\n    const filterValue = value.toLowerCase();\n    this.courseService.getCourseFiltredByNameAndBusy(filterValue)\n      .subscribe(resp => {\n        this.coursesFonundSearch = resp;\n      });\n    return this.courseService.getCourseFiltredByNameAndBusy(filterValue);\n  }\n\n  private _filterGrupalCourse(value: string): Observable<grupalCourseEntity[]> {\n    const filterValue = value.toLowerCase();\n    this.grupalService.getCourseFiltredByName(filterValue)\n      .subscribe(resp => {\n        this.coursesFonundGrupal = resp;\n      });\n    return this.grupalService.getCourseFiltredByName(filterValue);\n  }\n\n  showName(course?: courseEntity): string | undefined {\n    return course ? course.name : undefined\n  }\n\n  showNameTwo(grupalCourse?: grupalCourseEntity): string | undefined {\n    return grupalCourse ? grupalCourse.name : undefined\n  }\n\n\n  sendEventToAgent(endpoint: any, payload: any, extra?: any) {\n    if (extra) {\n      let generalObject: any = {\n        id: 0,\n        idStudent: payload.idStudent,\n        onChat: payload.onChat,\n        tipo: extra.tipo\n      };\n      this.socketClient.publish({\n        destination: endpoint,\n        body: JSON.stringify(generalObject)\n      });\n    } else {\n      this.socketClient.publish({\n        destination: endpoint,\n        body: JSON.stringify(payload)\n      });\n    }\n  }\n\n  sendInitialMessageToPrivateNotificationChannel() {\n    let quemado = this.idTeacher;\n    let bodyNotification: any = {\n      mensaje: 'ASKING_FOR_MEETING'\n    }\n    this.sendEventToAgent(`${this.publish_socket_teacher_notification_chanel}/${quemado}`, bodyNotification)\n    this.waitingForAnswer();\n  }\n\n  waitingForAnswer() {\n    Swal.fire({\n      title: 'Se ha enviado la notifcación al profesor',\n      text: \"Esperando respuesta del profesor\",\n      icon: 'success',\n      showCancelButton: true,\n      showConfirmButton: false,\n      confirmButtonColor: '#17a2b8',\n      cancelButtonColor: '#4d545a',\n      confirmButtonText: 'Cancelar notificación de tutoria',\n      cancelButtonText: 'Cancelar notificación de tutoria'\n    }).then((result) => {\n      if (result.isDismissed) {\n        let quemado = this.idTeacher;\n        let bodyNotification: any = {\n          mensaje: 'ESTUDENT_DENY'\n        }\n        this.sendEventToAgent(`${this.publish_socket_teacher_notification_chanel}/${quemado}`, bodyNotification)\n      }\n    })\n  }\n\n  subscrieToNotificationTeacherChanel(idTeacher: any) {\n    let endpointToNotificationChanel = `${this.socket_teacher_notification_chanel}/${idTeacher}`;\n    this.socketClient.subscribe(endpointToNotificationChanel, e => {\n      let responseFromAgent = JSON.parse(e.body);\n      if (responseFromAgent.body.mensaje == 'ANSWER_TEACHER_ACCEPT') {\n        this.swalMessageMeetingAcepted();\n      }\n      if (responseFromAgent.body == 'ANSWER_TEACHER_DENY') {\n        this.swalMessageMeetingDeny();\n      }\n    });\n  }\n\n  swalMessageMeetingAcepted() {\n    this.desconectar(this.idTeacher);\n    Swal.fire({\n      title: 'El profesor ha aceptado la solicitud',\n      text: \"Ya puedes ir a tu tutoria\",\n      icon: 'success',\n      showCancelButton: false,\n      confirmButtonColor: '#17a2b8',\n      cancelButtonColor: '#4d545a',\n      confirmButtonText: 'ir a la tutoria'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.goToMeetUrl();\n        this.sendPositiveAnswerToChannel();\n        this.webSocketService.desconnectFromSocket();\n        this.socketClient.deactivate();\n        setTimeout(() => {\n          this.webSocketService.connectToSocket();\n        }, 2000)\n        setTimeout(() => {\n          this.subscribeToTimerTeacherStudent(this.idTeacher, this.idStudent);\n        }, 5000)\n\n      }\n    })\n  }\n\n  conectar() {\n    let bodyToEnableTeacherAndCourses: any = {\n      idTeacher: this.idTeacher,\n      mensaje: 'ENABLE_TEACHER'\n    }\n    setTimeout(() => {\n      this.webSocketService.sendEventToAgent(this.publis_topic_endpoint, bodyToEnableTeacherAndCourses)\n    }, 2000);\n  }\n\n  swalMessageMeetingDeny() {\n    this.webSocketService.desconnectFromSocket();\n    this.socketClient.deactivate();\n    setTimeout(() => {\n      this.webSocketService.connectToSocket();\n    }, 2000)\n    Swal.fire({\n      title: 'Se ha rechazado la solicitud para la tutoria',\n      icon: 'info',\n      showCancelButton: false,\n      confirmButtonColor: '#17a2b8',\n      cancelButtonColor: '#4d545a',\n      confirmButtonText: 'Aceptar'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setTimeout(() => {\n          this.webSocketService.connectToSocket();\n        }, 2000)\n      }\n    })\n  }\n\n  getNewData() {\n    setTimeout(() => {\n      this.array = this.webSocketService.getResponse();\n      const arrayFilter = this.array.filter(course => course.busy == false)\n      this.coursesToShow = arrayFilter;\n    }, 2000);\n  }\n\n  guardarMensaje(mensaje: any) {\n    this.mensaje = mensaje;\n  }\n\n  createSessionChat(idTeacherArgument: any, teacherName: any, urlMeet: any) {\n    this.idTeacher = idTeacherArgument;\n    setTimeout(() => {\n      this.desconectar(this.idTeacher);\n    }, 2000);\n    this.modalService.openModal();\n    this.chatModalOpen = true;\n    this.urlMeetSelected = urlMeet;\n    let quemado = this.idTeacher;\n    setTimeout(() => {\n      this.socketClient = this.webSocketService.socketInitialConnection();\n    }, 2000);\n\n    if (this.isTutoriaAvailable == true) {\n      Swal.fire({\n        title: '¿ Deseas enviar una notificación para realizar una tutoría ?',\n        icon: 'success',\n        showCancelButton: true,\n        confirmButtonColor: '#17a2b8',\n        cancelButtonColor: '#4d545a',\n        confirmButtonText: 'Enviar notificacíon',\n        cancelButtonText: 'Cancelar'\n      }).then((result) => {\n        if (result.isConfirmed) {\n          setTimeout(() => {\n            this.subscrieToNotificationTeacherChanel(quemado);\n          }, 2000)\n\n          setTimeout(() => {\n            this.sendInitialMessageToPrivateNotificationChannel();\n          }, 2000)\n        } if (result.isDismissed) {\n          this.conectar();\n        }\n      })\n    } else {\n      Swal.fire({\n        title: 'Querido estudiante, debes contar con al menos 5.000 COP en tu saldo para poder ingresar a la tutoría.',\n        text: \"¿Deseas recargar saldo?\",\n        icon: 'info',\n        showCancelButton: true,\n        confirmButtonColor: '#17a2b8',\n        cancelButtonColor: '#4d545a',\n        confirmButtonText: 'Recargar saldo',\n        cancelButtonText: 'Volver'\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.router.navigate(['/student-panel']);\n          this.conectar();\n        }\n        if (result.isDismissed) {\n          this.conectar();\n        }\n      })\n    }\n\n\n  }\n\n  desconectar(idTeacher) {\n    let bodyToDisableTeacherAndCourses: any = {\n      idTeacher: idTeacher,\n      mensaje: 'DISABLE_TEACHER'\n    }\n    setTimeout(() => {\n      this.webSocketService.sendEventToAgent(this.publis_topic_endpoint, bodyToDisableTeacherAndCourses)\n    }, 2000);\n  }\n\n  goToMeetUrl() {\n    window.open(this.urlMeetSelected, '_blank');\n  }\n\n  goToDetailGroup(grupalCourse: grupalCourseEntity) {\n    this.grupalCourseSelected = grupalCourse;\n    this.modalService.openModal();\n  }\n\n  optionOneMethod() {\n    this.optionOneSelected = true;\n    this.optionTwoSelected = false;\n  }\n\n  optionTwoMethod() {\n    this.optionOneSelected = false;\n    this.optionTwoSelected = true;\n  }\n\n  sendPositiveAnswerToChannel() {\n    let bodyNotification: any = {\n      mensaje: 'TEACHER_ACCEPT',\n      idStudent: this.idStudent,\n      idTeacher: this.idTeacher,\n      urlMeetOnQueue: this.urlMeetSelected\n    }\n    this.sendEventToAgent(`${this.publish_socket_teacher_notification_chanel}/${this.idTeacher}`, bodyNotification)\n  }\n\n  // TIMER SECTION\n\n  subscribeToTimerTeacherStudent(idTeacher: any, idStudent: any) {\n    let endpointToTimmerChanel = `${this.timer_channel_subscribe}/${idTeacher}/${idStudent}`;\n\n    this.socketClient.subscribe(endpointToTimmerChanel, e => {\n      let responseFromAgent = JSON.parse(e.body);\n\n\n      if (responseFromAgent.body.message == 'ANSWER_INITAL_TIMER_CONNECTION_STUDENT') {\n        this.waitingToStarTimer();\n      }\n\n      if (responseFromAgent.body.message == 'ANSWER_TIMER_START') {\n        this.onClass();\n      }\n\n      if (responseFromAgent.body.message == 'ANSWER_TIMER_STOP') {\n        // this.timeOnSession;\n        // this.studentTime;\n        this.showPartOne = false;\n        this.showPartTwo = true;\n        this.breakLopp = false;\n      }\n\n    });\n\n    setTimeout(() => {\n      this.initialMessageOnTimerConnection(idTeacher, idStudent);\n    }, 3000);\n  }\n\n\n  waitingToStarTimer() {\n    Swal.fire('Clase iniciada con exito', 'en breve el profesor iniciara un cronometro para la clase', 'question');\n  }\n\n  onClass() {\n    this.startTimer();\n    this.openModalTimer();\n\n  }\n\n\n  initialMessageOnTimerConnection(idTeacher: any, idStudent: any) {\n    let body: any = {\n      message: 'INITAL_TIMER_CONNECTION_STUDENT'\n    }\n    setTimeout(() => {\n      ;\n      this.webSocketService.sendEventToAgent(`${this.timer_channel_send}/${idTeacher}/${idStudent}`, body)\n    }, 2000);\n  }\n\n\n  openModalTimer() {\n    let ngbModalOptions: NgbModalOptions = {\n      backdrop: 'static',\n      keyboard: false\n    };\n    this.boostrapModalService.open(this.editModalHome, ngbModalOptions);\n  }\n\n  startTimmer() {\n    setTimeout(() => {\n      this.counter++;;\n      if (this.counter < 400 && this.breakLopp) {\n        this.minutes = this.counter;\n        this.startTimmer();\n      }\n    }, 60000)\n  }\n\n  startTimmerSeconds() {\n    setTimeout(() => {\n      this.counterTwo++;\n      if (this.counterTwo <= 60 && this.breakLopp) {\n        this.seconds = this.counterTwo;\n        if (this.counterTwo == 60) {\n          this.counterTwo = 0;\n        }\n        this.startTimmerSeconds();\n      }\n    }, 1000)\n  }\n  //\n\n  startTimer() {\n    this.showPartOne = true;\n    this.startTimmer();\n    this.startTimmerSeconds();\n  }\n\n  openTeacherInformation(teacherId: any) {\n    console.log(\"id que he seleccionado \", teacherId);\n    this.showTeacherInfo = true;\n    this.modalService.openModal();\n    this.idTeacherSelected = teacherId;\n    console.log(\"valor del modal \", this.modalService.modal);\n  }\n\n  openFeedBack() {\n    this.showPartOne = false;\n    this.showPartTwo = false;\n    this.showPartThree = true;\n  }\n\n\n  sentCalification() {\n    let calification;\n    let studentCount;\n    let studenName;\n    let TeacherName;\n\n    this.teacherService.getTeachersById(this.idTeacher).subscribe(resp => {\n      TeacherName = `${resp.name} ${resp.lastName}`;\n    });\n\n    this.studentService.getStudentsById(this.idStudent).subscribe(resp => {\n      studenName = `${resp.name} ${resp.lastName}`;\n    });\n\n    setTimeout(() => {\n      let objectToSendFinal: any = {\n        \"studentId\": this.idStudent,\n        \"studentName\": studenName,\n        \"teacherId\": this.idTeacher,\n        \"teacherName\": TeacherName,\n        \"calification\": this.finalCalification,\n        \"feedBack\": this.feedback\n      }\n      this.feedBackService.createFeedBack(objectToSendFinal).subscribe(resp => {\n        console.log(\"feedback creado \");\n      });\n    }, 2000);\n\n\n    setTimeout(() => {\n      this.feedBackService.getCalification(this.idTeacher).subscribe(resp => {\n        calification = resp;\n      });\n\n      this.feedBackService.getTeacherCalificationStudents(this.idTeacher).subscribe(resp => {\n        studentCount = resp;\n      });\n    }, 2000);\n\n    setTimeout(() => {\n      let object: any = {\n        \"califaction\": calification,\n        \"studentCount\": studentCount,\n        \"teacherId\": this.idTeacher\n      }\n\n      console.log(\"info to send \", object);\n\n      this.feedBackService.updateTeacherCalification(object).subscribe(resp => {\n        console.log(\"update calification works\");\n      })\n      this.modalService.closeModal();\n    }, 3000);\n\n    Swal.fire({\n      title: 'Operación exitosa',\n      text: \"Se ha enviado la calificación\",\n      icon: 'success',\n      showConfirmButton: true,\n      confirmButtonColor: '#17a2b8',\n      confirmButtonText: 'Continuar',\n    })\n  }\n\n  startOne() {\n    this.isCheckedOne = true;\n    this.isCheckedTwo = false;\n    this.isCheckedThree = false;\n    this.isCheckedFour = false;\n    this.isCheckedFive = false;\n    this.finalCalification = 1;\n  }\n\n  startTwo() {\n    this.isCheckedOne = true;\n    this.isCheckedTwo = true;\n    this.isCheckedThree = false;\n    this.isCheckedFour = false;\n    this.isCheckedFive = false;\n    this.finalCalification = 2;\n  }\n\n  startThree() {\n    this.isCheckedOne = true;\n    this.isCheckedTwo = true;\n    this.isCheckedThree = true;\n    this.isCheckedFour = false;\n    this.isCheckedFive = false;\n    this.finalCalification = 3;\n  }\n\n  startFour() {\n    this.isCheckedOne = true;\n    this.isCheckedTwo = true;\n    this.isCheckedThree = true;\n    this.isCheckedFour = true;\n    this.isCheckedFive = false;\n    this.finalCalification = 4;\n  }\n\n  startFive() {\n    this.isCheckedOne = true;\n    this.isCheckedTwo = true;\n    this.isCheckedThree = true;\n    this.isCheckedFour = true;\n    this.isCheckedFive = true;\n    this.finalCalification = 5;\n  }\n\n}\n","<div class=\"all\" style=\"padding-bottom: 100px;\">\r\n  <!-- <app-header></app-header> -->\r\n  <!-- <div class=\"row\">\r\n    <div class=\"col-12 text-center\">\r\n      <img src=\"../../../../assets/images/Mittu.svg\" class=\"card-img-top image-size-mittu\" alt=\"...\">\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"row space-over space-bottom\">\r\n    <div class=\"col-12 personal-div text-center\">\r\n      asds\r\n    </div>\r\n  </div> -->\r\n  <!-- <div>\r\n  <app-slide-var></app-slide-var>>\r\n</div> -->\r\n\r\n  <div>\r\n    <video playsinline autoplay muted loop id=\"bgvid\">\r\n      <source src=\"../../../../assets/videos/study.mp4\" type=\"video/mp4\">\r\n    </video>\r\n\r\n    <app-header></app-header>\r\n\r\n    <div class=\"container\" style=\"padding-bottom: 20px;\">\r\n      <div class=\"row title-style-primary initial-space\">\r\n        <div class=\"col-12 text-center space-over\">\r\n          Mittu\r\n        </div>\r\n        <div class=\"col-12 text-center space-over\">\r\n          Tutorías y cursos grupales online\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row title-style-primary second-space\">\r\n        <div class=\"col-12 text-center space-over\">\r\n          Elige lo que buscas\r\n        </div>\r\n        <div class=\"col-12 text-center\">\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row space-over space-bottom\">\r\n        <div class=\"col-6 text-center\">\r\n          <button class=\"btn btn-dark\" (click)=\"optionOneMethod()\">\r\n            <img class=\"imagePersonal\"\r\n              src=\"https://www.tandem-madrid.es/wp-content/uploads/2020/03/curso_videoconferencia.jpg\" alt=\"\"\r\n              title=\"Bootstrap\">\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"col-6 text-center\">\r\n          <button class=\"btn btn-dark\" (click)=\"optionTwoMethod()\">\r\n            <img class=\"imagePersonal\"\r\n              src=\"https://previews.123rf.com/images/belchonock/belchonock1803/belchonock180330931/97412265-grupo-de-j%C3%B3venes-dise%C3%B1adores-trabajando-en-el-nuevo-proyecto-37-00.jpg\"\r\n              alt=\"\" title=\"Bootstrap\">\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-6 text-center title-style-secondary\">\r\n          Tutorías individuales\r\n        </div>\r\n\r\n        <div class=\"col-6 text-center title-style-secondary\">\r\n          Cursos grupales\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- TAB 1  -->\r\n  <div class=\"section-space\" *ngIf=\"optionOneSelected\">\r\n    <div class=\"container text-center\">\r\n      <div class=\"row title-style-secondary\">\r\n        <div class=\"col-12\">\r\n          <img src=\"../../../../assets/icons/bootstrap-icons/people.svg\" alt=\"\" width=\"300px\" height=\"150px\">\r\n          <p class=\"space-over-min\" style=\"color: white;\">Buscar tutorias</p>\r\n          <p class=\"space-over-min\" style=\"color: yellow;\">Tip</p>\r\n\r\n          <p class=\"space-over-min\" style=\"color: white;\">Puedes buscar tutorías por cualquier criterio ... Ejemplo:\r\n            'Inglés', 'Español', 'Matemáticas'</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 input-group-prepend text-center space-over\">\r\n          <form class=\"example-form\">\r\n            <div class=\"input-padding\">\r\n              <input type=\"text\" placeholder=\"Realiza tu busqueda\" aria-label=\"Tutorias\" matInput\r\n                [formControl]=\"autoComplete\" [matAutocomplete]=\"auto\">\r\n            </div>\r\n            <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"showName\">\r\n              <mat-option *ngFor=\"let course of filteredOptions | async\" [value]=\"course\">\r\n                {{course.name}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"filteredOptions\">\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let course of coursesFonundSearch\" class=\"col-6 space-over text-center\">\r\n            <div class=\"card border-secondary mb-3 card-background\">\r\n              <div class=\"card-header\"><b>Nombre</b></div>\r\n              <div class=\"card-header\">{{course.name}}</div>\r\n              <div class=\"card-body\">\r\n                <img src=\"{{endpoint_course_image}}/{{course.picture}}\" alt=\"\" class=\"img-thumbnail rounded image-size\">\r\n                <p class=\"space-over\"><b>descripción de curso</b></p>\r\n                <p class=\"card-text\">{{course.description}} </p>\r\n                <!-- <p class=\"card-text\"><b> Profesor que ofrece el curso</b> </p> -->\r\n                <!-- <p class=\"card-text\">{{course.teacherName}} </p> -->\r\n                <div class=\"row space-bottom space-over\">\r\n                  <!-- <div class=\"col-6\">\r\n                    <button class=\"btn btn-outline-info text-center\" (click)=goToMeetUrl()>\r\n                      Ver mas detalles\r\n                    </button>\r\n                  </div> -->\r\n                  <!-- <div class=\"col-12\" style=\"padding-bottom: 15px;\">\r\n                    <button class=\"btn btn-outline-info\">\r\n                      ver informacion del profesor\r\n                    </button>\r\n                  </div>\r\n                  <div class=\"col-12\">\r\n                    <button class=\"btn btn-info\"\r\n                      (click)=createSessionChat(course.idTeacher,course.teacherName,course.meetUrlCourse)\r\n                      data-toggle=\"modal\" data-target=\"#chatModal\">\r\n                      enviar mensaje al profesor\r\n                    </button>\r\n                  </div> -->\r\n                  <div *ngIf=\"authService.hasRole('ROLE_STUDENT')\" class=\"col-6\">\r\n                    <button class=\"btn btn-info\"\r\n                      (click)=createSessionChat(course.idTeacher,course.teacherName,course.meetUrlCourse)\r\n                      data-toggle=\"modal\" data-target=\"#chatModal\">\r\n                      Entrar a tutoría\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div class=\"col-6\">\r\n                    <button class=\"btn btn-warning\" (click)=openTeacherInformation(course.idTeacher) data-toggle=\"modal\"\r\n                      data-target=\"#openTeacherInfo\">\r\n                      Ver informacion del docente\r\n                    </button>\r\n                  </div>\r\n                  <!-- <button class=\"btn btn-info col-md-8\" (click)=goToDetailGroup(course) data-toggle=\"modal\"\r\n                      data-target=\"#modalGroup\">\r\n                      Ver informacion del curso\r\n                    </button> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-footer></app-footer>\r\n</div>\r\n\r\n<!-- TAB 2  -->\r\n<div class=\"section-space\" *ngIf=\"optionTwoSelected\">\r\n  <div class=\"container text-center\">\r\n    <div class=\"row title-style-secondary\">\r\n      <div class=\"col-12\">\r\n        <img src=\"../../../../assets/icons/bootstrap-icons/people-fill.svg\" alt=\"\" width=\"300px\" height=\"150px\"\r\n          title=\"Bootstrap\">\r\n        <p class=\"space-over-min\" style=\"color: white;\">Buscar cursos grupales</p>\r\n        <p class=\"space-over-min\" style=\"color: yellow;\">Tip</p>\r\n        <p class=\"space-over-min\" style=\"color: white;\">Puedes buscar cursos grupales por cualquier criterio ...\r\n          Ejemplo: 'Inglés', 'Español', 'Matemáticas'</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 input-group-prepend text-center space-over\">\r\n        <form class=\"example-form\">\r\n          <div class=\"input-padding\">\r\n            <input type=\"text\" placeholder=\"Realiza tu busqueda\" aria-label=\"Grupales\" matInput\r\n              [formControl]=\"autoCompleteGrupalCourses\" [matAutocomplete]=\"autoGrupal\">\r\n          </div>\r\n          <mat-autocomplete #autoGrupal=\"matAutocomplete\" [displayWith]=\"showNameTwo\">\r\n            <mat-option *ngFor=\"let grupalCourse of filteredOptionsGrupalCourses | async\" [value]=\"grupalCourse\">\r\n              {{grupalCourse.name}}\r\n            </mat-option>\r\n          </mat-autocomplete>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div *ngIf=\"filteredOptionsGrupalCourses\">\r\n      <div class=\"row\">\r\n        <div *ngFor=\"let grupalCourse of coursesFonundGrupal\" class=\"col-6 space-over\">\r\n          <div class=\"card border-secondary mb-3 card-background\">\r\n            <div class=\"card-header\"><b>Nombre</b></div>\r\n            <div class=\"card-header\">{{grupalCourse.name}}</div>\r\n            <div class=\"card-body\">\r\n              <img src=\"{{endpoint_grupal_course_image}}/{{grupalCourse.picture}}\" alt=\"\"\r\n                class=\"img-thumbnail rounded image-size\">\r\n              <p class=\"card-text space-over\"><b>descripción de curso</b></p>\r\n              <p class=\"card-text\">{{grupalCourse.description}} </p>\r\n              <p class=\"card-text\"><b> Horario</b> </p>\r\n              <p class=\"card-text\">{{grupalCourse.classTime}} </p>\r\n              <div class=\"text-center space-over\">\r\n                <button class=\"btn btn-info col-md-8\" (click)=goToDetailGroup(grupalCourse) data-toggle=\"modal\"\r\n                  data-target=\"#modalGroup\">\r\n                  Ver informacion del curso\r\n                </button>\r\n              </div>\r\n              <div class=\"text-center space-over\">\r\n                <button class=\"btn btn-warning\" (click)=openTeacherInformation(grupalCourse.idTeacher)\r\n                  data-toggle=\"modal\" data-target=\"#openTeacherInfo\">\r\n                  Ver informacion del docente\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <app-grupal-course *ngIf=\"grupalCourseSelected\" [grupalCourse]=\"grupalCourseSelected\"></app-grupal-course>\r\n\r\n  <app-chat *ngIf=\"chatModalOpen\" [idStudent]=\"idStudent\" [idTeacher]=\"idTeacher\" [urlMeet]=\"urlMeetSelected\"\r\n    (goToMeetEventEmiter)=\"goToMeetUrl()\"> </app-chat>\r\n\r\n  <app-footer></app-footer>\r\n\r\n</div>\r\n\r\n<app-teacher-info *ngIf=\"idTeacherSelected > 0\" [idTeacherFor]=\"idTeacherSelected\"> </app-teacher-info>\r\n\r\n<!-- Timmer modal -->\r\n<ng-template #editModalHome let-modal>\r\n  <div class=\"modal-header\">\r\n\r\n  </div>\r\n\r\n  <div *ngIf=\"showPartOne\">\r\n    <div class=\"modal-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 text-center\" style=\"padding-top: 20px; padding-bottom: 5px;\">\r\n          <h1>\r\n            Tiempo actual de la tutoría\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" style=\"padding-bottom: 40px;\">\r\n        <div class=\"col-6 text-center\">\r\n          <div class=\"text-center\">\r\n            Minutos\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6 text-center\">\r\n          <div class=\"text-center\">\r\n            Segundos\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-5 text-center numbers\">\r\n          <div class=\"text-center\">\r\n            {{this.minutes}}\r\n          </div>\r\n        </div>\r\n        <div class=\"col-1 text-center numbers\">\r\n          <div class=\"text-center\">\r\n            :\r\n          </div>\r\n        </div>\r\n        <div class=\"col-6 text-center numbers\">\r\n          <div class=\"text-center\">\r\n            {{this.seconds}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\" style=\"padding-top: 40px;\">\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 text-center\">\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"showPartTwo\">\r\n    <div class=\"modal-body\">\r\n      <div class=\"col-12 text-center\" style=\"padding-top: 20px; padding-bottom: 5px;\">\r\n        <h1>\r\n          Tiempo actual de la tutoría\r\n        </h1>\r\n      </div>\r\n\r\n      <div class=\"round-border\">\r\n        <div class=\"row\" style=\"padding-bottom: 40px; padding-top: 45px;\">\r\n          <div class=\"col-5 text-center\">\r\n            <div class=\"text-center\">\r\n              Minutos\r\n            </div>\r\n          </div>\r\n          <div class=\"col-1 text-center numbers\">\r\n            <div class=\"text-center\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6 text-center\">\r\n            <div class=\"text-center\">\r\n              Segundos\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-5 text-center numbers\">\r\n            <div class=\"text-center\">\r\n              {{this.minutes}}\r\n            </div>\r\n          </div>\r\n          <div class=\"col-1 text-center numbers\">\r\n            <div class=\"text-center\">\r\n              :\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6 text-center numbers\">\r\n            <div class=\"text-center\">\r\n              {{this.seconds}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal-footer\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 text-center\">\r\n          <button class=\"btn btn-warning\" (click)=\"openFeedBack()\">\r\n            Continuar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"showPartThree\">\r\n    <div class=\"modal-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 text-center\" style=\"padding-top: 5px; padding-bottom: 5px;\">\r\n          <h1>\r\n            Clasifica la calidad de tu tutoría\r\n          </h1>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-12 text-center\" style=\"padding-top: 5px; padding-bottom: 5px;\">\r\n          <h2>\r\n            Donde 1 es malo y 5 es excelente\r\n          </h2>\r\n        </div>\r\n      </div>\r\n\r\n      <div style=\"padding-left: 70px;\">\r\n        <div class=\"row\" style=\"padding-top: 5px; padding-bottom: 5px;\">\r\n          <div class=\"col-1.1\">\r\n            <div class=\"input-group mb-3\">\r\n              <button [ngClass]=\"{'star-color' : isCheckedOne === true, 'star-no-color': isCheckedOne === false}\" (click)=\"startOne()\"> </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-1\"></div>\r\n          <div class=\"col-1.1\">\r\n            <div class=\"input-group mb-3\">\r\n              <button [ngClass]=\"{'star-color' : isCheckedTwo === true, 'star-no-color': isCheckedTwo === false}\" (click)=\"startTwo()\"> </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-1\"></div>\r\n          <div class=\"col-1.1\">\r\n            <div class=\"input-group mb-3\">\r\n              <button [ngClass]=\"{'star-color' : isCheckedThree === true, 'star-no-color': isCheckedThree === false}\" (click)=\"startThree()\"> </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-1\"></div>\r\n          <div class=\"col-1.1\">\r\n            <div class=\"input-group mb-3\">\r\n              <button [ngClass]=\"{'star-color' : isCheckedFour === true, 'star-no-color': isCheckedFour === false}\" (click)=\"startFour()\"> </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-1\"></div>\r\n          <div class=\"col-1.1\">\r\n            <div class=\"input-group mb-3\">\r\n              <button [ngClass]=\"{'star-color' : isCheckedFive === true, 'star-no-color': isCheckedFive === false}\" (click)=\"startFive()\"> </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <form #feedBackForm=\"ngForm\">\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-12 text-center\">\r\n            <div class=\"input-group\">\r\n              <textarea type=\"text\" class=\"form-control\" [(ngModel)]=\"feedback\" aria-label=\"With textarea\"\r\n                name=\"feedback\"></textarea>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-12 text-center\" style=\"padding-top: 20px; padding-bottom: 20px;\">\r\n            <button class=\"btn btn-info\" (click)=\"sentCalification(); modal.close()\"> Enviar calificación </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"https://images.wallpaperscraft.com/image/code_programming_text_140050_1920x1080.jpg\" class=\"img-fluid\" alt=\"Responsive image\">","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { userEntity } from '../../interfaces/userEntity';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\nimport { Client } from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { environment } from '../../../environments/environment.prod';\nimport { WebSocketService } from '../../services/web-socket.service';\nimport { async } from '@angular/core/testing';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  user: userEntity;\n  authenticated: boolean;\n  booleanPassword: boolean;\n  public conected: boolean = false;\n  public environment = environment;\n  private client: Client;\n  private autenticationState: boolean = false;\n  private endpoint_socket: string = environment.webSocket.host;\n  private idTeacher;\n  private destination_topic = '/app/teacher/socket';\n  public notification_topic_chanel = '/notification/chanel/teacher';\n  public parent: any;\n  public punochilduno: boolean;\n  public punochilddos: boolean;\n  public punochildtres: boolean;\n  public punochildcuatro: boolean;\n  public parentFlag: boolean;\n  public idAdmin: any;\n  public idStudent: any;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private socketService: WebSocketService) {\n    this.user = new userEntity();\n  }\n\n  get email() {\n    return this.loginForm.get('email');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  ngOnInit(): void {\n    this.authenticated = false;\n    this.authenticated = this.authService.isAuthenticated();\n    if (this.authenticated) {\n      this.router.navigate(['/home-loged']);\n    }\n\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50), Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30)]]\n    });\n  }\n\n\n  login() {\n    if (!this.loginForm.valid) {\n      alert('Alguna regla de validación no se está cumpliendo');\n      return;\n    }\n\n    this.authService.login(this.loginForm).subscribe((resp) => {\n\n      setTimeout(() => {\n        let user = this.authService.user;\n        this.authService.saveUser(resp.access_token);\n        this.authService.saveToken(resp.access_token);\n        this.idStudent = sessionStorage.getItem('studentId');\n        this.idTeacher = sessionStorage.getItem('teacherId');\n        this.idAdmin = sessionStorage.getItem('adminId');\n\n\n      \n          if (this.idStudent != 'null' ) {\n          this.router.navigate(['/home-loged']);\n\n        }  else if (this.idTeacher != 'null' ) {\n          this.router.navigate(['/teacher-panel']);\n\n        } else if (this.idAdmin == 1) {\n          this.router.navigate(['/admin-panel']);\n        \n\n      }}, 2000);\n\n      setTimeout(() => {\n        this.client = this.socketService.socketInitialConnection();\n        this.socketService.connectToSocket();\n      }, 3000);\n\n      setTimeout(() => {\n        let mensajeInicial = { mensaje: 'SESION_START' };\n        this.socketService.sendEventToAgent(this.destination_topic, mensajeInicial)\n      }, 4000);\n\n\n    }, (err) => {\n      if (err.status == 400) {\n        Swal.fire('Credenciales invalidas', 'El usuario o la contraseña son invalidas', 'error');\n      }\n    });\n  }\n\n\n  funcion() {\n    this.parentFlag = true;\n    this.punochilduno = true;\n    this.punochilddos = true;\n    this.punochildtres = true;\n    this.punochildcuatro = true;\n\n  }\n\n  funcionDischek() {\n    this.parentFlag = false;\n    this.punochilduno = false;\n    this.punochilddos = false;\n    this.punochildtres = false;\n    this.punochildcuatro = false;\n  }\n\n  teacherRegister() {\n    this.router.navigate(['/register-teacher']);\n  }\n\n  studentRegister() {\n    this.router.navigate(['/register-student']);\n  }\n\n}\n","<div class=\"background-image-gradient\">\n    <div class=\"all\">\n        <div class=\"row\">\n            <div class=\"col-12 text-center mittu-title\">\n                mittu\n            </div>\n        </div>\n        <div class=\"general-padding\">\n            <div class=\"container\">\n                <div class=\"borders\">\n                    <div class=\"col-12 background-middle-two\" style=\"border-radius: 30px;\">\n                        <div class=\"row shadow-box\" style=\"padding-top: 10px; padding-bottom: 10px;\">\n                            <div class=\"col-6\">\n                                <div class=\"middle-image\">\n                                </div>\n                            </div>\n\n                            <div class=\"col-6\">\n                                <div class=\"\" style=\"max-width: 100%;\">\n                                    <div class=\"row\" style=\"padding-top: 40px\">\n                                        <div class=\"col-12 text-center\">\n                                            <h1>Bienvenido</h1>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"text-center\" style=\"padding-bottom: 10px;\">\n                                        Teaching & Learning\n                                    </div>\n                                    <div class=\"text-center\" style=\"padding-bottom: 10px;\">\n                                        Tutorías y clases online\n                                    </div>\n                                    <div class=\"formSpace text-center\">\n                                        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n                                            <div class=\"form-group\" style=\"padding-top: 15px;\">\n                                                <div class=\"input-container\">\n                                                    <i class=\"fa fa-envelope icon\"></i>\n                                                    <input type=\"email\" class=\"form-control\" formControlName=\"email\"\n                                                        placeholder=\"Correo Electronico\">\n                                                </div>\n\n                                                <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n                                                    class=\"alert alert-danger\">\n                                                    <div *ngIf=\"email.errors.minlength || email.errors.maxlength \">\n                                                        El email debe tener entre 1 y 50 caracteres\n                                                    </div>\n                                                    <div *ngIf=\"email.errors.required\">\n                                                        El correo es requerido\n                                                    </div>\n                                                    <div *ngIf=\"email.errors.email\">\n                                                        El correo debe tener un formato valido\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"form-group\" style=\"padding-top: 15px;\">\n                                                <div class=\"input-container\">\n                                                    <i class=\"fa fa-key icon\"></i>\n                                                    <input type=\"password\" class=\"form-control\" id=\"password\"\n                                                        formControlName=\"password\" placeholder=\"Contraseña\">\n                                                </div>\n                                                <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n                                                    class=\"alert alert-danger\">\n                                                    <div\n                                                        *ngIf=\"password.errors.minlength || password.errors.maxlength \">\n                                                        La contraseña debe tener entre 6 y 30 caracteres\n                                                    </div>\n                                                    <div *ngIf=\"password.errors.required\">\n                                                        La contraseña es requerida\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col-12 text-center\" style=\"padding-top: 15px;\">\n                                                    <button class=\"btn btn-round btn-block\"\n                                                        style=\"border-radius: 20px !important; background-color: #17A2B8; color: white;\"\n                                                        type=\"submit\" [disabled]=\"loginForm.invalid\">Ingresar</button>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\" style=\"padding-top: 20px;\">\n                                                <div class=\"col-12 text-center\"\n                                                    style=\"padding-top: 5px; padding-bottom: 5px; color: black;\">\n                                                    ¿Aún no estás registrado?\n                                                </div>\n                                            </div>\n                                        </form>\n                                    </div>\n                                </div>\n\n                                <div class=\"row\" style=\"padding-top: 10px; padding-bottom: 40px;\">\n                                    <div class=\"col-6\">\n                                        <div class=\"text-center btn btn-outline-info option-one option-two\"\n                                            (click)=\"studentRegister()\">\n                                            Registrate como estudiante\n                                        </div>\n                                    </div>\n                                    <div class=\"col-6\">\n                                        <div class=\"text-center btn btn-outline-info option-one option-two\"\n                                            (click)=\"teacherRegister()\">\n                                            Registrate como docente\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- <div style=\"padding-top: 100px;\">\n            <app-footer></app-footer>\n        </div> -->\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Mensaje } from '../../interfaces/Mensaje';\nimport { WebSocketService } from '../../services/web-socket.service';\nimport { TeacherService } from '../../services/teacher.service';\nimport { StudentService } from '../../services/student.service';\nimport { teacherEntity } from '../../interfaces/teacherEntity';\nimport { studentEntity } from '../../interfaces/studentEntity';\n\n@Component({\n  selector: 'app-private-chat',\n  templateUrl: './private-chat.component.html',\n  styleUrls: ['./private-chat.component.css']\n})\nexport class PrivateChatComponent implements OnInit {\n\n  public mensaje: Mensaje = new Mensaje();\n  public mensajes: Mensaje[] = [];\n  public conectado: boolean = false;\n  public escribiendo: string = '';\n  public username: string;\n  public teacher: teacherEntity;\n  public student: studentEntity;\n  public idFromLocalStorage: any;\n  public primary: Boolean;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private webSocketService: WebSocketService,\n    private teacherService: TeacherService,\n    private studentService: StudentService\n  ) { }\n\n  public idTeacher: any;\n  public idStudent: any;\n  public initialParams: any;\n\n  ngOnInit(): void {\n    this.activatedRoute.queryParams.subscribe(params => {\n      this.initialParams = {\n        idTeacher: params['idTeacher'],\n        idStudent: params['idStudent']\n      }\n    });\n\n    if (sessionStorage.getItem('teacherId') != 'null') {\n      this.teacher = new teacherEntity();\n      let idFromLocalStorage = sessionStorage.getItem('teacherId');\n      this.teacherService.getTeachersById(idFromLocalStorage).subscribe((resp) => {\n        this.teacher = resp;\n        this.username = `${this.teacher.name} ${this.teacher.lastName}`.toString();\n        this.mensaje.color = 'blue';\n        this.primary = true;\n      });\n\n    } if (sessionStorage.getItem('studentId') != 'null') {\n      this.student = new studentEntity();\n      let idFromLocalStorage = sessionStorage.getItem('studentId');\n      this.studentService.getStudentsById(idFromLocalStorage).subscribe((resp) => {\n        this.student = resp;\n        this.username = `${this.student.name} ${this.student.lastName}`.toString();\n        this.mensaje.color = 'green';\n        this.primary = false;\n      });\n    }\n\n\n    if (this.initialParams.idTeacher != null || this.initialParams.idTeacher != undefined) {\n      this.idTeacher = this.initialParams.idTeacher;\n    }\n\n    if (this.initialParams.idTeacher != null || this.initialParams.idTeacher != undefined) {\n      this.idStudent = this.initialParams.idStudent;\n    }\n\n    setTimeout(() => {\n      this.subscribeToPrivateChat();\n    }, 3000);\n  }\n\n  newUser() {\n    this.mensaje.tipo = \"NUEVO_USUARIO\";\n    let payload = this.mensaje;\n    this.mensaje.username = this.username;\n    this.webSocketService.sendEventToAgent(`/app/private/chat/message/${this.idTeacher}/${this.idStudent}`, payload)\n    this.mensajes = this.webSocketService.getMessages();\n  }\n\n  subscribeToPrivateChat() {\n    this.webSocketService.subcribeToTopicPrivateChatStudentTeacher(this.idTeacher, this.idStudent);\n    setTimeout(() => {\n      this.newUser();\n    }, 3000);\n  }\n\n  sendMessage() {\n    this.mensaje.tipo = \"MENSAJE\";\n    let payload = this.mensaje;\n    this.webSocketService.sendEventToAgent(`/app/private/chat/message/${this.idTeacher}/${this.idStudent}`, payload)\n    this.mensaje.texto = '';\n    this.mensaje.username = this.username;\n    this.mensajes = this.webSocketService.getMessages();\n  }\n\n\n}\n\n","<H1>CHAT PRIVADO PARA ESTUDIANTE Y PROFESOR</H1>\r\n<h3>id teacher {{idTeacher}}</h3>\r\n<h3>id student {{idStudent}}</h3>\r\n\r\n<div class=\"card\">\r\n\r\n    <!-- con esto del #scrollChat nos aseguramos de que baje automatico el scroll -->\r\n    <div #scrollChat [scrollTop]=\"scrollChat.scrollHeight\" class=\"card-body\" style=\"overflow-y: scroll; height: 550px;\">\r\n        <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item list-group-item-light\" *ngFor=\"let mensaje of mensajes\">\r\n                <span *ngIf=\"mensaje.tipo == 'NUEVO_USUARIO'\"> {{mensaje.fecha | date: 'shortTime'}} @ {{mensaje.texto}}\r\n                    <span [ngStyle]=\"{'color': mensaje.color}\"> El usuario {{mensaje.username}} </span> se ha conectado al\r\n                    chat!</span>\r\n                <span *ngIf=\"mensaje.tipo == 'MENSAJE'\"> {{mensaje.fecha | date: 'shortTime'}} <span\r\n                        [ngStyle]=\"{'color': mensaje.color}\"> {{mensaje.username}} </span> Dice: <br> {{mensaje.texto}}\r\n                </span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"card-footer\">\r\n        <div>\r\n            {{escribiendo}}\r\n        </div>\r\n        <form class=\"form-inline\">\r\n            <div class=\"form-group mx-3\">\r\n                <!-- KeyUp notifica cuando alguien esta escribiendo -->\r\n                <input type=\"text\" class=\"form-control\" [(ngModel)]=\"mensaje.texto\" placeholder=\"Escribir mensaje\"\r\n                    name=\"texto\">\r\n            </div>\r\n            <button class=\"btn btn-primary\" (click)=\"sendMessage()\" type=\"submit\"> Enviar </button>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { StudentService } from '../../services/student.service';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { passwordValidation } from '../../validations/password.directive';\nimport { UsernameUnicoService } from '../../validations/username-unique.directive';\n\n@Component({\n  selector: 'app-register-student',\n  templateUrl: './register-student.component.html',\n  styleUrls: ['./register-student.component.css']\n})\nexport class RegisterStudentComponent implements OnInit {\n\n  registerStudentForm: FormGroup;\n  public passwordEnable: boolean = false;\n  public emailEnable: boolean = false;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private registerStudentService: StudentService,\n    private usernameUnicoService:UsernameUnicoService\n  ) { }\n\n  get name() {\n    return this.registerStudentForm.get('name');\n  }\n\n  get lastName() {\n    return this.registerStudentForm.get('lastName');\n  }\n\n  get email() {\n    return this.registerStudentForm.get('email');\n  }\n\n  get emailVerification() {\n    return this.registerStudentForm.get('emailVerification');\n  }\n\n  get password() {\n    return this.registerStudentForm.get('password');\n  }\n\n  get passwordVerification() {\n    return this.registerStudentForm.get('passwordVerification');\n  }\n\n  get phone() {\n    return this.registerStudentForm.get('phone');\n  }\n\n  get TermsAndConditions() {\n    return this.registerStudentForm.get('TermsAndConditions');\n  }\n\n\n\n  ngOnInit(): void {\n    this.registerStudentForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(40)]],\n      lastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(40)]],\n      email: ['', { validators:[Validators.required, Validators.minLength(12), Validators.maxLength(50), Validators.email], asyncValidators: [this.usernameUnicoService.validate.bind(this.usernameUnicoService)]}],\n      emailVerification: ['', { validators:[Validators.required, Validators.minLength(12), Validators.maxLength(50), Validators.email]}],\n      phone: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(10)]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30), passwordValidation()]],\n      passwordVerification: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30), passwordValidation()]],\n      TermsAndConditions: ['', [Validators.required]]\n    });\n  }\n\n\n  register() {\n    if (!this.registerStudentForm.valid) {\n      alert('Alguna regla de validación no se está cumpliendo');\n      return;\n    }\n\n    if (this.password != this.passwordVerification) {\n    }\n\n    let student: any;\n    student = this.registerStudentForm.value;\n    let arrayCharacteristicas: any[] = Object.values(student);\n    student.name = arrayCharacteristicas[0]\n\n    Swal.fire({\n      title: `Registro exitoso`,\n      html: `Bienvenido ${student.name} ya puedes ingresar a mittu e inscribirte a nuestros cursos y tutorías <br> <b>Nota<b> <br> <p style=\"color:green;\">En breve recibirás una copia a tu correo electrónico con tus datos de ingreso </p>`,\n      icon: 'success',\n      confirmButtonColor: '#5cb85c',\n      confirmButtonText: 'Ir al ingreso',\n    }).then((result) => {\n      if (result.value) {\n        this.router.navigate(['/login']);\n      }\n    })\n\n    this.registerStudentService.registerStudent(student)\n      .subscribe((resp) => {\n      }, (err) => {\n      })\n  }\n\n\n  verifyPassword(verifyPassword: any) {\n\n    if(this.password.value != verifyPassword.value ) {\n      this.passwordEnable = false;\n    }\n\n    if(this.password.value == verifyPassword.value ) {\n      this.passwordEnable = true;\n    }\n\n    return;\n  }\n\n  verifyEmail(verifyEmail: any) {\n\n    if(this.email.value != verifyEmail.value ) {\n      this.emailEnable = false;\n    }\n\n    if(this.email.value == verifyEmail.value ) {\n      this.emailEnable = true;\n    }\n\n    return;\n  }\n}\n","<div class=\"background-image-gradient\">\n    <div class=\"all\">\n        <div class=\"row\">\n            <div class=\"col-12 text-center mittu-title\">\n                mittu\n            </div>\n        </div>\n        <div class=\"general-padding\">\n            <div class=\"container\" style=\"padding-top: 50px;\">\n                <div class=\"card background-middle-two borders\">\n                    <div class=\"formSpace\">\n                        <form autocomplete=\"off\" [formGroup]=\"registerStudentForm\" (ngSubmit)=\"register()\">\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <h1> Registro de estudiante</h1>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-address-card icon\"></i>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"name\"\n                                                placeholder=\"Nombres\">\n                                        </div>\n                                        <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"name.errors.minlength || name.errors.maxlength \">\n                                                Los nombres debe tener entre 6 y 40 caracteres\n                                            </div>\n                                            <div *ngIf=\"name.errors.required\">\n                                                Los nombres son requeridos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-address-card icon\"></i>\n                                            <input type=\"text\" class=\"form-control\" id=\"lastName\"\n                                                formControlName=\"lastName\" placeholder=\"Apellidos\">\n                                        </div>\n                                        <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"lastName.errors.minlength || lastName.errors.maxlength \">\n                                                Los apellidos debn tener entre 6 y 40 caracteres\n                                            </div>\n                                            <div *ngIf=\"lastName.errors.required\">\n                                                El apellido es requerido\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div class=\"row\">\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-envelope icon\"></i>\n                                            <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\"\n                                                placeholder=\"Correo Electronico\">\n                                        </div>\n                                        <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"email.errors.minlength || email.errors.maxlength \">\n                                                El correo debe tener entre 12 y 40 caracteres\n                                            </div>\n                                            <div *ngIf=\"email.errors.required\">\n                                                El correo es requerido\n                                            </div>\n                                            <div *ngIf=\"email.errors.email\">\n                                                El correo debe ser valido\n                                            </div>\n                                            <div *ngIf=\"email.errors.usernameUnico\">\n                                                El correo ya esta registrado\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-envelope icon\"></i>\n                                            <input type=\"email\" class=\"form-control\" id=\"emailVerify\"\n                                                formControlName=\"emailVerification\"\n                                                (ngModelChange)=\"verifyEmail(emailVerification)\"\n                                                placeholder=\"Verificar Correo Electronico\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <div *ngIf=\"!emailEnable\" class=\"alert alert-danger\">\n                                        Las direcciones de correo no son las mismas\n                                    </div>\n                                    <div *ngIf=\"emailEnable\" class=\"alert alert-success\">\n                                        Las direcciones de correo coinciden\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-lock icon\"></i>\n                                            <input type=\"password\" class=\"form-control\" id=\"password\"\n                                                formControlName=\"password\" placeholder=\"Contraseña\">\n                                        </div>\n                                        <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"password.errors.minlength || password.errors.maxlength \">\n                                                La contraseña debe tener entre 6 y 30 caracteres\n                                            </div>\n                                            <div *ngIf=\"password.errors.required\">\n                                                La contraseña es requerida\n                                            </div>\n                                            <div *ngIf=\"password.errors.passwordValidation\">\n                                                {{password.errors.passwordValidation.message}}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-lock icon\"></i>\n                                            <input type=\"password\" class=\"form-control\" id=\"passwordVerify\"\n                                                formControlName=\"passwordVerification\"\n                                                (ngModelChange)=\"verifyPassword(passwordVerification)\"\n                                                placeholder=\"Verificar Contraseña\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <div *ngIf=\"!passwordEnable\" class=\"alert alert-danger\">\n                                        Las contraseñas no son las mismas\n                                    </div>\n                                    <div *ngIf=\"passwordEnable\" class=\"alert alert-success\">\n                                        Las contraseñas coinciden\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-phone icon\"></i>\n                                            <input type=\"text\" class=\"form-control\" id=\"phone\" formControlName=\"phone\"\n                                                placeholder=\"Telefono\">\n                                        </div>\n                                        <div *ngIf=\"phone.invalid && (phone.dirty || phone.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"phone.errors.minlength || phone.errors.maxlength \">\n                                                El telefono debe de tener entre 6 y 10 numeros\n                                            </div>\n                                            <div *ngIf=\"phone.errors.required\">\n                                                El telefono es requerido\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-building icon\"></i>\n                                            <input type=\"text\" class=\"form-control\" id=\"phone\" placeholder=\"ciudad\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"form-check\">\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TermsAndConditions\"\n                                                formControlName=\"TermsAndConditions\">\n                                            <label class=\"form-check-label\" for=\"defaultCheck1\">\n                                                He leído y acepto los <u class=\"text-primary\">términos</u> y <u\n                                                    class=\"text-primary\">condiciones</u>\n                                            </label>\n                                        </div>\n                                        <div *ngIf=\"!TermsAndConditions.value\" class=\"alert alert-danger\">\n                                            Debe aceptar los términos y condiciones\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <button\n                                        *ngIf=\"((registerStudentForm.valid) && (passwordEnable) && (TermsAndConditions.value == true) && (emailEnable))\"\n                                        class=\"btn btn-info\" type=\"submit\">Realizar registro</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- <app-footer></app-footer> -->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { passwordValidation } from '../../validations/password.directive';\nimport { UsernameUnicoService } from '../../validations/username-unique.directive';\nimport { TeacherService } from '../../services/teacher.service';\n\n\n\n@Component({\n  selector: 'app-register-teacher',\n  templateUrl: './register-teacher.component.html',\n  styleUrls: ['./register-teacher.component.css']\n})\nexport class RegisterTeacherComponent implements OnInit {\n\n  registerTeacherForm: FormGroup;\n  public passwordEnable: boolean = false;\n  public emailEnable: boolean = false;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private registerTeacherService: TeacherService,\n    private usernameUnicoService: UsernameUnicoService\n  ) { }\n\n  get name() {\n    return this.registerTeacherForm.get('name');\n  }\n\n  get lastName() {\n    return this.registerTeacherForm.get('lastName');\n  }\n\n  get email() {\n    return this.registerTeacherForm.get('email');\n  }\n\n  get emailVerification() {\n    return this.registerTeacherForm.get('emailVerification');\n  }\n\n  get password() {\n    return this.registerTeacherForm.get('password');\n  }\n\n  get passwordVerification() {\n    return this.registerTeacherForm.get('passwordVerification');\n  }\n\n  get phone() {\n    return this.registerTeacherForm.get('phone');\n  }\n\n  get TermsAndConditions() {\n    return this.registerTeacherForm.get('TermsAndConditions');\n  }\n\n\n\n  ngOnInit(): void {\n    this.registerTeacherForm = this.formBuilder.group({\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(40)]],\n      lastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(40)]],\n      email: ['', { validators: [Validators.required, Validators.minLength(12), Validators.maxLength(50), Validators.email], asyncValidators: [this.usernameUnicoService.validate.bind(this.usernameUnicoService)] }],\n      emailVerification: ['', { validators: [Validators.required, Validators.minLength(12), Validators.maxLength(50), Validators.email] }],\n      phone: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(10)]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30), passwordValidation()]],\n      passwordVerification: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30), passwordValidation()]],\n      TermsAndConditions: ['', [Validators.required]]\n    });\n  }\n\n\n  register() {\n    if (!this.registerTeacherForm.valid) {\n      alert('Alguna regla de validación no se está cumpliendo');\n      return;\n    }\n\n    if (this.password != this.passwordVerification) {\n    }\n\n    let teacher: any;\n    teacher = this.registerTeacherForm.value;\n    let arrayCharacteristicas: any[] = Object.values(teacher);\n    teacher.name = arrayCharacteristicas[0]\n\n    Swal.fire({\n      title: `Registro exitoso`,\n      html: `Bienvenido ${teacher.name} ya puedes ingresar a la plataforma <br> <b>Nota<b> <br> <p style=\"color:green;\">En breve recibiras tus datos de ingreso en el correo </p>`,\n      icon: 'success',\n      confirmButtonColor: '#5cb85c',\n      confirmButtonText: 'Ir al ingreso',\n    }).then((result) => {\n      if (result.value) {\n        this.router.navigate(['/login']);\n      }\n    })\n\n    this.registerTeacherService.registerTeacher(teacher)\n      .subscribe((resp) => {\n      }, (err) => {\n      })\n  }\n\n  verifyPassword(verifyPassword: any) {\n\n    if (this.password.value != verifyPassword.value) {\n      this.passwordEnable = false;\n    }\n\n    if (this.password.value == verifyPassword.value) {\n      this.passwordEnable = true;\n    }\n    return;\n  }\n\n  verifyEmail(verifyEmail: any) {\n\n    if (this.email.value != verifyEmail.value) {\n      this.emailEnable = false;\n    }\n\n    if (this.email.value == verifyEmail.value) {\n      this.emailEnable = true;\n    }\n\n    return;\n  }\n\n}\n","<div class=\"background-image-gradient\">\n    <div class=\"all\">\n        <div class=\"row\">\n            <div class=\"col-12 text-center mittu-title\">\n                mittu\n            </div>\n        </div>\n        <div class=\"general-padding\">\n            <div class=\"container\" style=\"padding-top: 50px;\">\n                <div class=\"card background-middle-two borders\">\n                    <div class=\"formSpace\">\n                        <form autocomplete=\"off\" [formGroup]=\"registerTeacherForm\" (ngSubmit)=\"register()\">\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <h1> Registro de docente</h1>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-address-card icon\"></i>\n                                            <input type=\"text\" class=\"form-control\" formControlName=\"name\"\n                                                placeholder=\"Nombres\">\n                                        </div>\n                                        <div *ngIf=\"name.invalid && (name.dirty || name.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"name.errors.minlength || name.errors.maxlength \">\n                                                Los nombres debe tener entre 6 y 40 caracteres\n                                            </div>\n                                            <div *ngIf=\"name.errors.required\">\n                                                Los nombres son requeridos\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-address-card icon\"></i>\n                                            <input type=\"text\" class=\"form-control\" id=\"lastName\"\n                                                formControlName=\"lastName\" placeholder=\"Apellidos\">\n                                        </div>\n                                        <div *ngIf=\"lastName.invalid && (lastName.dirty || lastName.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"lastName.errors.minlength || lastName.errors.maxlength \">\n                                                Los apellidos debn tener entre 6 y 40 caracteres\n                                            </div>\n                                            <div *ngIf=\"lastName.errors.required\">\n                                                El apellido es requerido\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-envelope icon\"></i>\n                                            <input type=\"text\" class=\"form-control\" id=\"email\" formControlName=\"email\"\n                                                placeholder=\"Correo Electronico\">\n                                        </div>\n                                        <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"email.errors.minlength || email.errors.maxlength \">\n                                                El correo debe tener entre 12 y 40 caracteres\n                                            </div>\n                                            <div *ngIf=\"email.errors.required\">\n                                                El correo es requerido\n                                            </div>\n                                            <div *ngIf=\"email.errors.email\">\n                                                El correo debe ser valido\n                                            </div>\n                                            <div *ngIf=\"email.errors.usernameUnico\">\n                                                El correo ya esta registrado\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-envelope icon\"></i>\n                                            <input type=\"email\" class=\"form-control\" id=\"emailVerify\"\n                                                formControlName=\"emailVerification\"\n                                                (ngModelChange)=\"verifyEmail(emailVerification)\"\n                                                placeholder=\"Verificar Correo Electronico\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <div *ngIf=\"!emailEnable\" class=\"alert alert-danger\">\n                                        Las direcciones de correo no son las mismas\n                                    </div>\n                                    <div *ngIf=\"emailEnable\" class=\"alert alert-success\">\n                                        Las direcciones de correo coinciden\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-lock icon\"></i>\n                                            <input type=\"password\" class=\"form-control\" id=\"password\"\n                                                formControlName=\"password\" placeholder=\"Contraseña\">\n                                        </div>\n                                        <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"password.errors.minlength || password.errors.maxlength \">\n                                                La contraseña debe tener entre 6 y 30 caracteres\n                                            </div>\n                                            <div *ngIf=\"password.errors.required\">\n                                                La contraseña es requerida\n                                            </div>\n                                            <div *ngIf=\"password.errors.passwordValidation\">\n                                                {{password.errors.passwordValidation.message}}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-lock icon\"></i>\n                                            <input type=\"password\" class=\"form-control\" id=\"passwordVerify\"\n                                                formControlName=\"passwordVerification\"\n                                                (ngModelChange)=\"verifyPassword(passwordVerification)\"\n                                                placeholder=\"Verificar Contraseña\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <div *ngIf=\"!passwordEnable\" class=\"alert alert-danger\">\n                                        Las contraseñas no son las mismas\n                                    </div>\n                                    <div *ngIf=\"passwordEnable\" class=\"alert alert-success\">\n                                        Las contraseñas coinciden\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-phone icon\"></i>\n                                            <input type=\"text\" class=\"form-control\" id=\"phone\" formControlName=\"phone\">\n                                        </div>\n                                        <div *ngIf=\"phone.invalid && (phone.dirty || phone.touched)\"\n                                            class=\"alert alert-danger\">\n                                            <div *ngIf=\"phone.errors.minlength || phone.errors.maxlength \">\n                                                El telefono debe de tener entre 6 y 10 numeros\n                                            </div>\n                                            <div *ngIf=\"phone.errors.required\">\n                                                El telefono es requerido\n                                            </div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                                <div class=\"col-6 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"input-container\">\n                                            <i class=\"fa fa-building icon\"></i>\n                                            <input type=\"text\" class=\"form-control\" id=\"phone\" placeholder=\"ciudad\">\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <div class=\"form-group\">\n                                        <div class=\"form-check\">\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"TermsAndConditions\"\n                                                formControlName=\"TermsAndConditions\">\n                                            <label class=\"form-check-label\" for=\"defaultCheck1\">\n                                                He leído y acepto los <u class=\"text-primary\">términos</u> y <u\n                                                    class=\"text-primary\">condiciones</u>\n                                            </label>\n                                        </div>\n                                        <div *ngIf=\"!TermsAndConditions.value\" class=\"alert alert-danger\">\n                                            Debe aceptar los términos y condiciones\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <button\n                                        *ngIf=\"((registerTeacherForm.valid) && (passwordEnable) && (TermsAndConditions.value == true) && (emailEnable))\"\n                                        class=\"btn btn-info\" type=\"submit\">Realizar registro</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- \n<app-footer></app-footer> -->","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GrupalCoursesService } from '../../services/grupal-courses.service';\nimport { grupalCourseEntity } from '../../interfaces/grupalCourseEntity';\nimport { studentEntity } from '../../interfaces/studentEntity';\nimport { StudentService } from '../../services/student.service';\nimport { environment } from '../../../environments/environment.prod';\nimport Sw from 'sweetalert2';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TransactionService } from '../../services/transaction.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { WebSocketService } from 'src/app/services/web-socket.service';\n\n@Component({\n  selector: 'app-student-panel',\n  templateUrl: './student-panel.component.html',\n  styleUrls: ['./student-panel.component.scss']\n})\nexport class StudentPanelComponent implements OnInit {\n  displayedColumns: string[] = ['Fecha', 'CantidadRecargada'];\n  dataSource: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  public idStudent: any;\n  public grupalCoursesFound: grupalCourseEntity[] = [];\n  public showVar: boolean;\n  public grupalCourses: boolean;\n  public profiles: boolean;\n  public transactions: boolean;\n  public studentObject = new studentEntity();\n  public endpoint_grupal_course_image = environment.grupalCourse.host_image;\n  public studentTime: any;\n  public openTransactions: any;\n  public responseOne: any;\n  public responseTwo: any;\n  public listOfTransactions: any[];\n  public usernameEmail: any;\n  public userData: any;\n  public costOfTransaction: any;\n  public transferId: any;\n  public transferIdFromDB: any;\n\n  constructor(\n    private grupalCoursesService: GrupalCoursesService,\n    private studentService: StudentService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private transferService: TransactionService,\n    public authService: AuthService,\n    private webSocketService: WebSocketService\n  ) {\n    this.showVar = false;\n    this.grupalCourses = false;\n    this.profiles = false;\n    this.transactions = false;\n  }\n\n  ngOnInit(): void {\n\n    this.userData = JSON.parse(sessionStorage.getItem('user'));\n    this.usernameEmail = this.userData.username;\n\n\n    this.activatedRoute.queryParams.subscribe(params => {\n      console.log(\"params\", params);\n      console.log(\"RESPUESTA DE LA URL\", params['lapResponseCode']);\n      console.log(\"RESPUESTA DE LA URL\", params['lapTransactionState']);\n      console.log(\"RESPUESTA DE LA URL COSTO\", params['TX_VALUE']);\n      console.log(\"RESPUESTA DE LA URL ID TRANSFERENCIA\", params['referenceCode']);\n      this.responseOne = params['lapResponseCode'];\n      this.responseTwo = params['lapTransactionState'];\n      this.costOfTransaction = params['TX_VALUE'];\n      this.transferId = params['referenceCode'];\n    });\n\n    this.idStudent = sessionStorage.getItem('studentId');\n    this.getListOfTransactions();\n    this.getAllgrupalCoursesFromStudent();\n    this.getStudentInformation();\n    this.profiles = true;\n    this.getStudentTime();\n\n\n    if (this.responseOne == 'APPROVED' && this.responseTwo == 'APPROVED') {\n      this.transactionApproved();\n    } else if (this.responseTwo == 'DECLINED') {\n      this.transactionReject();\n    }\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, 500);\n  }\n\n  getStudentInformation() {\n    let idStudent = this.idStudent;\n    this.studentService.getStudentsById(idStudent).subscribe((resp) => {\n      this.studentObject = resp;\n    });\n  }\n\n  getAllgrupalCoursesFromStudent() {\n    this.grupalCoursesService.getAllgrupalCoursesFromStudent(this.idStudent).subscribe((grupalCourses) => {\n      this.grupalCoursesFound = grupalCourses;\n    });\n  }\n\n  goToMeet(meetUrl: any) {\n    window.open(meetUrl, '_blank');\n  }\n\n  showNavbar() {\n    this.showVar = true;\n  }\n\n  hideNavbar() {\n    this.showVar = false;\n  }\n\n  showGrupalCourses() {\n    this.profiles = false;\n    this.transactions = false;\n    this.grupalCourses = true;\n  }\n\n  showProfile() {\n    this.transactions = false;\n    this.grupalCourses = false;\n    this.profiles = true;\n    this.getStudentTime();\n  }\n\n  showTransactions() {\n    this.grupalCourses = false;\n    this.profiles = false;\n    this.transactions = true;\n  }\n\n  getStudentTime() {\n    this.studentService.getStudentTime(this.idStudent).subscribe((resp) => {\n      console.log(\"tiempo del estudiante \", resp);\n      this.studentTime = resp;\n    });\n  }\n\n  openTransaccionts() {\n    this.openTransactions = true;\n  }\n\n  closeTransactions() {\n    this.openTransactions = false;\n  }\n\n  transactionApproved() {\n    this.makeTransaction();\n    setTimeout(() => {\n      this.setMoneyTransaction();\n    }, 1000);\n    Sw.fire({\n      'title': `Transacción exitosa!`,\n      'text': `tu saldo ha sido recargado con exito, podras ver tu nuevo saldo disponible en tu panel`,\n      'icon': `success`,\n      showCloseButton: false,\n      showCancelButton: false,\n      confirmButtonText: `Ir a mi panel`,\n      confirmButtonColor: '#10d10d',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        window.location.href.split(\"?\")[0];\n        this.router.navigate(['/student-panel']);\n        setTimeout(() => {\n          location.reload();\n        }, 500);\n      } else if (result.isDismissed) {\n        window.location.href.split(\"?\")[0];\n        this.router.navigate(['/student-panel']);\n        setTimeout(() => {\n          location.reload();\n        }, 500);\n      }\n    });\n  }\n\n  transactionReject() {\n    Sw.fire({\n      'title': `A ocurrido un error durante la transacción!`,\n      'text': `No se ha realizado ningun pago, podras consultar tu saldo actual en tu panel`,\n      'icon': `error`,\n      showCloseButton: false,\n      showCancelButton: false,\n      confirmButtonText: `Ir a mi panel`,\n      confirmButtonColor: '#10d10d',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // this.router.navigate(['/student-panel']);\n      }\n    });\n  }\n\n  getListOfTransactions() {\n    this.transferService.getAllListOfTransfers(this.idStudent).subscribe((resp) => {\n      this.dataSource = new MatTableDataSource(resp);\n      console.log(\"lista de transacciones \", this.listOfTransactions);\n    });\n    console.log(\"DATA SOURCEEEE \" , this.dataSource);\n  }\n\n  makeTransaction() {\n    let objectOfTransaction: any = {\n      \"name\": this.usernameEmail,\n      \"cost\": this.costOfTransaction,\n      \"idStudent\": this.idStudent,\n      \"transferCode\": this.transferId\n    }\n\n    console.log(\"objeto que se enviaria para realizar la transaccion \", objectOfTransaction);\n    this.transferService.makeTransaction(objectOfTransaction).subscribe(resp => {\n      console.log(\"transferencia exitosa \");\n    })\n  }\n\n  setMoneyTransaction() {\n    console.log(\"estudiante \", this.studentObject);\n    let bodyOfTransaction: any = {};\n    let actualMoney: number = +this.studentObject.money;\n    console.log(\"dinero actual del estudiante \", actualMoney);\n    let transactionMoney: number = +this.costOfTransaction;\n    console.log(\"dinero a sumer al saldo del estudiante \", transactionMoney);\n    let newMoney: number = (actualMoney + transactionMoney);\n    console.log(\"nuevo valor de dinero \", newMoney);\n    bodyOfTransaction = {\n      'money': newMoney,\n      'studentId': this.idStudent\n    }\n    this.studentService.setMoney(bodyOfTransaction).subscribe((resp) => {\n      console.log(\"opreacion exitosa \", resp);\n    });\n  }\n\n  backToHome() {\n    this.router.navigate(['/home-loged']);\n  }\n\n  closeSession() {\n    this.webSocketService.desconnectFromSocket();\n    this.authService.logout();\n  }\n\n\n\n}\n","<div class=\"all\">\n    <!-- <app-logged-nvbar></app-logged-nvbar> -->\n\n    <div class=\"row panel buttons-space\">\n        <div class=\"col-3\">\n            <div class=\"col-12 text-center mittu-title\" (click)=\"backToHome()\">\n                mittu\n            </div>\n        </div>\n\n        <div class=\"col-3 text-center\">\n            <button class=\"btn btn-info btn-block\" style=\"border-radius: 20px;\" (click)=\"showProfile()\">Ver mis\n                transacciones</button>\n        </div>\n\n        <div class=\"col-3 text-center\">\n            <button class=\"btn btn-outline-info btn-block\" style=\"border-radius: 20px;\"\n                (click)=\"showGrupalCourses()\">Ver mis\n                cursos grupales </button>\n        </div>\n\n        <div class=\"col-3\">\n            <div class=\"row\">\n                <div class=\"col text-center\">\n                    <i class=\"fa fa-user-secret icon\" (click)=\"closeSession()\"></i>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col text-center\" style=\"padding-top: 10px; color: #17A2B8; cursor: pointer;\">\n                    <p (click)=\"closeSession()\"> Cerrar sesión</p>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n\n\n\n\n    <div class=\"row\">\n        <div class=\"col-12\" style=\"padding-top: 40px;\">\n\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-1\">\n\n        </div>\n\n        <div class=\"col-2 vertical-panel borders\">\n            <div style=\"padding-top: 20px;\"></div>\n            <div class=\"row\">\n                <div class=\"col text-center\" style=\"color: white;\">\n                    <h1> <b> <span class=\"badge badge-info\"> Mi perfil</span> </b> </h1>\n                </div>\n            </div>\n            <div style=\"padding-top: 20px;\"></div>\n            <div class=\"row borders-sides\">\n                <div class=\"col text-center\">\n                    <h2> <b> Saldo disponible</b> </h2>\n                    <p class=\"card-text\">{{studentObject.money | currency}} COP</p>\n                </div>\n            </div>\n\n            <div style=\"padding-top: 20px;\"></div>\n            <div class=\"row borders-sides\">\n                <div class=\"col text-center\">\n                    <h2> <b> Nombre</b> </h2>\n                    <p> {{studentObject.name}} {{studentObject.lastName}} </p>\n                </div>\n            </div>\n\n            <div style=\"padding-top: 20px;\"></div>\n            <div class=\"row borders-sides\">\n                <div class=\"col text-center\">\n                    <h2> <b> Correo electronico </b> </h2>\n                    <p> {{studentObject.email}} </p>\n                </div>\n            </div>\n\n            <div style=\"padding-top: 20px;\"></div>\n            <div class=\"row borders-sides\">\n                <div class=\"col text-center\">\n                    <h2> <b> Telefono</b> </h2>\n                    {{studentObject.phone}}\n                </div>\n            </div>\n\n            <div style=\"padding-top: 30px;\"></div>\n            <div class=\"row\">\n                <div class=\"col text-center\">\n                    <button class=\"btn btn-info\" (click)=\"openTransaccionts()\"> Realizar recarga </button>\n                </div>\n            </div>\n            <div style=\"padding-top: 15px;\"></div>\n            <div class=\"row\">\n                <div class=\"col text-center\">\n                    <button class=\"btn btn-outline-info\"> Editar información </button>\n                </div>\n            </div>\n            <div style=\"padding-bottom: 20px;\"></div>\n\n        </div>\n\n        <div class=\"col-1\">\n\n        </div>\n        <div class=\"col-7 horizontal-panel\">\n\n            <div *ngIf=\"grupalCourses\" style=\"padding-bottom: 40px;\">\n                <div class=\"row\">\n                    <div class=\"col text-center\" style=\"padding-top: 15px;\">\n                        <h2>Cursos grupales</h2>\n                    </div>\n                </div>\n\n                <div *ngIf=\"grupalCoursesFound.length <= 0\" class=\"container\">\n                    <div class=\"card bg-info\">\n                        <div class=\"row\">\n                            <div class=\"col-12 text-center text-white\">\n                                <h2>Aún no has realizado transacciones</h2>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div *ngFor=\"let grupalCourse of grupalCoursesFound\" class=\"col-6\">\n                        <div class=\"card border-secondary mb-3 text-center\">\n                            <div class=\"card-header\"><b>Nombre</b></div>\n                            <div class=\"card-header\">{{grupalCourse.name}}</div>\n                            <div class=\"card-body text-secondary\">\n                                <img src=\"{{endpoint_grupal_course_image}}/{{grupalCourse.picture}}\" alt=\"\"\n                                    class=\"img-thumbnail rounded image-size\">\n                                <p class=\"card-text space-over\"><b>descripción de curso</b></p>\n                                <p class=\"card-text\">{{grupalCourse.description}} </p>\n                                <p class=\"card-text\"><b> Horario</b> </p>\n                                <p class=\"card-text\">{{grupalCourse.classTime}} </p>\n                                <p class=\"card-text\"><b> Url de Google meet</b> </p>\n                                <a href=\"{{grupalCourse.urlMeet}}\" target=\"_blank\">{{grupalCourse.urlMeet}}</a>\n                                <div class=\"col-12 text-center space-over\"\n                                    style=\"padding-top: 10px; padding-bottom: 10px\">\n                                    <button class=\"btn btn-info\" (click)=\"goToMeet(grupalCourse.urlMeet)\">Ir a\n                                        clase</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <div *ngIf=\"profiles\">\n\n                <div>\n                    <div class=\"container\">\n                        <div class=\"row space-over space-bottom\">\n                        </div>\n                        <div *ngIf=\"openTransactions\" style=\"padding-top: 20px; padding-bottom: 20px;\">\n                            <div class=\"row\" style=\"padding-bottom: 30px;\">\n                                <div class=\"col text-right\">\n                                    <button class=\"btn btn-info col-md-4\" (click)=\"closeTransactions()\"> cerrar opciones\n                                        de recarga\n                                    </button>\n                                </div>\n                            </div>\n                            <app-transaction></app-transaction>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"row\">\n                    <div class=\"col text-center\" style=\"padding-top: 15px;\">\n                        <h2>\n                            <p>Historial de transacciones</p>\n                        </h2>\n                    </div>\n                </div>\n\n                <div *ngIf=\"dataSource\">\n                    <div *ngIf=\"dataSource.data.length <= 0\" class=\"container\"\n                        style=\"padding-top: 30px; padding-bottom: 30px;\">\n                        <div class=\"card bg-info\">\n                            <div class=\"row\" style=\"padding-bottom: 30px; padding-top: 30px;\">\n                                <div class=\"col-12 text-center text-white\">\n                                    <h2>Aún no has realizado transacciones</h2>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"dataSource.data.length > 0\" class=\"container\"\n                        style=\"padding-top: 30px; padding-bottom: 30px;\">\n                        <div class=\"mat-elevation-z8\">\n                            <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                                <ng-container matColumnDef=\"Fecha\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.fechaDeCreacion}} </td>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"CantidadRecargada\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Cantidad Recargada </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.cost | currency}} COP </td>\n                                </ng-container>\n\n\n                                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                            </table>\n\n                            <mat-paginator [pageSizeOptions]=\"[10, 25, 100]\"></mat-paginator>\n                        </div>\n                    </div>\n                </div>\n\n\n\n            </div>\n        </div>\n    </div>\n\n\n\n\n    <div style=\"padding-top: 140px\">\n        <!--  <app-footer></app-footer>-->\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TeacherService } from 'src/app/services/teacher.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-teacher-references',\n  templateUrl: './teacher-references.component.html',\n  styleUrls: ['./teacher-references.component.css']\n})\nexport class TeacherReferencesComponent implements OnInit {\n\n  public teacherDetails: any[] = [];\n  public endpoint_teacher_image = environment.teacher.host_image;\n  public teacherImage: any;\n  \n\n  constructor(\n    private teacherService: TeacherService\n  ) { }\n\n  ngOnInit(): void {\n    this.getTeachersDetailsMethod();\n  }\n\n\n  getTeachersDetailsMethod(): void {\n    let testObject = {\n      \"name\": \"omardocente\",\n      \"lastName\": \"omardocente\",\n      \"phone\": \"1231231\",\n      \"picture\": \"bb10d349-11a2-4f41-8bcd-a97513c709eb_universo.jpg\",\n      \"hourCost\": 1,\n      \"profile\": \"Gran Master\",\n      \"busy\": true,\n      \"education\": \"asd\",\n      \"description\": \"asd\",\n      \"calification\": 3.6,\n      \"countStudent\": 5,\n      \"email\": \"omardocente@gmail.com\",\n      \"courses\": [\n        {\n          \"id\": 2,\n          \"name\": \"tutoria 1\",\n          \"description\": \"tutoria uno descripcion\",\n          \"picture\": \"8ff7f133-610c-40e2-a03e-7fefe79aa7c3_planet_omega-wallpaper-2560x1080.jpg\",\n          \"fechaDeCreacion\": \"2021-06-05\",\n          \"busy\": true,\n          \"idTeacher\": 1,\n          \"teacherName\": \"omardocente omardocente\",\n          \"meetUrlCourse\": \"una url\"\n        },\n        {\n          \"id\": 3,\n          \"name\": \"Casa\",\n          \"description\": \"muy bonita\",\n          \"picture\": \"6ad99b81-b9e7-4766-b7e1-d8caeaceff81_planet_omega-wallpaper-2560x1080.jpg\",\n          \"fechaDeCreacion\": \"2021-06-21\",\n          \"busy\": true,\n          \"idTeacher\": 1,\n          \"teacherName\": \"omardocente omardocente\",\n          \"meetUrlCourse\": \"meet\"\n        }\n      ],\n      \"grupalCourses\": [\n        {\n          \"id\": 6,\n          \"name\": \"curso grupal 1\",\n          \"idTeacher\": 1,\n          \"picture\": \"84ef00bd-2144-444d-b5ff-5b918b3a1a2c_universo.jpg\",\n          \"classTime\": \"Lunes a Martes 12:00 am 1:00 pm\",\n          \"urlMeet\": \"alguna\",\n          \"fechaDeCreacion\": \"2021-06-05\",\n          \"studentes\": [],\n          \"description\": \"curso grupal 1 descripcion\"\n        },\n        {\n          \"id\": 7,\n          \"name\": \"curso grupal 1\",\n          \"idTeacher\": 1,\n          \"picture\": \"84ef00bd-2144-444d-b5ff-5b918b3a1a2c_universo.jpg\",\n          \"classTime\": \"Lunes a Martes 12:00 am 1:00 pm\",\n          \"urlMeet\": \"alguna\",\n          \"fechaDeCreacion\": \"2021-06-05\",\n          \"studentes\": [],\n          \"description\": \"curso grupal 1 descripcion\"\n        },\n        {\n          \"id\": 8,\n          \"name\": \"curso grupal 1\",\n          \"idTeacher\": 1,\n          \"picture\": \"84ef00bd-2144-444d-b5ff-5b918b3a1a2c_universo.jpg\",\n          \"classTime\": \"Lunes a Martes 12:00 am 1:00 pm\",\n          \"urlMeet\": \"alguna\",\n          \"fechaDeCreacion\": \"2021-06-05\",\n          \"studentes\": [],\n          \"description\": \"curso grupal 1 descripcion\"\n        },\n        {\n          \"id\": 9,\n          \"name\": \"curso grupal 1\",\n          \"idTeacher\": 1,\n          \"picture\": \"84ef00bd-2144-444d-b5ff-5b918b3a1a2c_universo.jpg\",\n          \"classTime\": \"Lunes a Martes 12:00 am 1:00 pm\",\n          \"urlMeet\": \"alguna\",\n          \"fechaDeCreacion\": \"2021-06-05\",\n          \"studentes\": [],\n          \"description\": \"curso grupal 1 descripcion\"\n        },\n        {\n          \"id\": 10,\n          \"name\": \"curso grupal 1\",\n          \"idTeacher\": 1,\n          \"picture\": \"84ef00bd-2144-444d-b5ff-5b918b3a1a2c_universo.jpg\",\n          \"classTime\": \"Lunes a Martes 12:00 am 1:00 pm\",\n          \"urlMeet\": \"alguna\",\n          \"fechaDeCreacion\": \"2021-06-05\",\n          \"studentes\": [],\n          \"description\": \"curso grupal 1 descripcion\"\n        },\n        {\n          \"id\": 11,\n          \"name\": \"curso grupal 1\",\n          \"idTeacher\": 1,\n          \"picture\": \"84ef00bd-2144-444d-b5ff-5b918b3a1a2c_universo.jpg\",\n          \"classTime\": \"Lunes a Martes 12:00 am 1:00 pm\",\n          \"urlMeet\": \"alguna\",\n          \"fechaDeCreacion\": \"2021-06-05\",\n          \"studentes\": [],\n          \"description\": \"curso grupal 1 descripcion\"\n        }\n      ]\n    }\n    this.teacherService.getTeachersDetails().subscribe(resp => {\n      console.log(\"informacion del profesor \", resp);\n      this.teacherDetails = resp;\n      this.teacherImage = resp.picture;\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n      this.teacherDetails.push(testObject);\n    });\n  }\n\n}\n","<div class=\"all\">\n    <app-header></app-header>\n    <div style=\"padding-top: 50px; padding-bottom: 50px;\">\n        <div class=\"row\">\n            <div class=\"col-12 text-center\">\n                <h1>\n                    <u> Conoce a nuestros docentes </u>\n                </h1>\n            </div>\n        </div>\n        <div class=\"card border-info\" style=\"padding-top: 50px; padding-bottom: 50px;\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div *ngFor=\"let teacher of teacherDetails\" class=\"col-4\"\n                        style=\"padding-bottom: 20px; padding-top: 20px;\">\n                        <div class=\"card text-center\" style=\"padding-bottom: 25px;\">\n                            <img class=\"card-img-top\" src=\"{{endpoint_teacher_image}}/{{teacher.picture }}\"\n                                alt=\"Card image cap\">\n                            <div class=\"card-body\">\n                                <h2 class=\"card-title\">{{teacher.name}} {{teacher.lastName}}</h2>\n                                <p class=\"card-text text-info\"> <b>Nivel de estudios</b></p>\n                                <p class=\"card-text\">{{teacher.education}}</p>\n                                <p class=\"card-text text-info\"><b>Perfil actual en la plataforma</b></p>\n                                <p class=\"card-text\">{{teacher.profile}}</p>\n                                <p class=\"card-text text-info\"><b>Acerca de mi</b></p>\n                                <p class=\"card-text\">{{teacher.description}}</p>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-12 text-center\">\n                                    <button class=\"btn btn-info\">Ver tutorías y cursos grupales</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Client } from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { AuthService } from '../../../services/auth.service';\nimport { WebSocketService } from '../../../services/web-socket.service';\nimport { TeacherService } from '../../../services/teacher.service';\nimport { teacherEntity } from '../../../interfaces/teacherEntity';\nimport { CourseService } from '../../../services/course.service';\nimport { courseEntity } from '../../../interfaces/coursesEntity';\nimport { interval } from 'rxjs';\nimport Sw from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { GrupalCoursesService } from '../../../services/grupal-courses.service';\nimport { grupalCourseEntity } from '../../../interfaces/grupalCourseEntity';\nimport { ModalService } from '../../../services/modal.service';\nimport Swal from 'sweetalert2';\nimport { environment } from '../../../../environments/environment';\nimport { TemplateRef, ViewChild } from '@angular/core';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport webNotification from 'simple-web-notification';\n\n@Component({\n  selector: 'app-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.css']\n})\nexport class PanelComponent implements OnInit {\n  displayedColumns: string[] = ['Fecha', 'Estado', 'Cantidad retirada'];\n  dataSource: MatTableDataSource<any>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  public conected: boolean = true;\n  private autenticationState: boolean = false;\n  private endpoint_socket: string = environment.webSocket.host;\n  public idTeacher: any;\n  private publis_topic_endpoint = '/app/teacher/socket';\n  private publis_topic_endpoint_verify_state = '/app/teacher/state';\n  private publis_topic_endpoint_verify_state_of_chat = '/app/teacher/state/chat';\n  private publis_topic_endpoint_private_teacher_chanel = '/app/private/chanel/teacher';\n  public teacherName: any;\n  public teacherFound: teacherEntity = new teacherEntity();\n  public teacherCourses: courseEntity[] = [];\n  public chatOnQueue: any;\n  public idStudent: any;\n  public lastStateOfChat: boolean;\n  public stateOfChat: boolean;\n  public grupalCourses: grupalCourseEntity[];\n  public watchStudents: boolean;\n  public onPersonalCourse: boolean;\n  public onGrupalCourse: boolean;\n  public onTransactions: boolean;\n  public grupalCourseSelected: grupalCourseEntity;\n  public grupalCourseSelectedToModify: grupalCourseEntity;\n  public informationForPrivateChat: any;\n  public onChat: boolean = false;\n  public algo: boolean = false;\n  public tutoriaCourseSelectedToModify: any;\n  public totalStudents: any;\n  public environment = environment;\n  public endpoint_course_image = environment.course.host_image;\n  public endpoint_grupal_course_image = environment.grupalCourse.host_image;\n  public endpoint_teacher_image = environment.teacher.host_image;\n  public idImageToUpload: any;\n  public idGruaplImageToUpload: any;\n  public teacherImage: any;\n  public idTeacherImageToUpload: any;\n  public socketClient: any;\n  private socket_teacher_notification_chanel: any = '/topic/notification/chanel/teacher'\n  private publish_socket_teacher_notification_chanel: any = '/app/notification/chanel/teacher'\n  public globalUrlMeet: any;\n  private timer_channel_send = '/app/teacher/student/timer';\n  private timer_channel_subscribe = '/topic/teacher/student/timer';\n  public timeOnSession: any;\n  public studentTime: any;\n  public showStart: any;\n  public globalTeacherId: any;\n  public globalStudentId: any;\n  public teacherTime: any;\n  public timerResponse: any;\n  public secondss: number;\n  public minutess: number;\n  public totalTime: any;\n  public breakLopp: boolean;\n  public counter: number;\n  public counterTwo: number;\n  public isTrue: boolean;\n  public showPartOne: boolean;\n  public showPartTwo: boolean;\n  public showStartButton: boolean;\n  public showStopButton: boolean;\n  public studentMinutes: number;\n  public globalIdTeacher: any;\n  public gloablIdStudent: any;\n\n  @ViewChild('editModal') editModal: TemplateRef<any>; // Note: TemplateRef\n\n  constructor(\n    private authService: AuthService,\n    private webSocketService: WebSocketService,\n    private teacherService: TeacherService,\n    private courseService: CourseService,\n    private grupalCourseService: GrupalCoursesService,\n    private router: Router,\n    private modalService: ModalService,\n    private boostrapModalService: NgbModal\n  ) {\n    this.grupalCourses = [];\n    this.watchStudents = false;\n    this.onPersonalCourse = true;\n    this.onGrupalCourse = false;\n    this.onTransactions = false;\n    this.globalUrlMeet = '';\n    this.showStart = true;\n    this.showPartOne = true;\n    this.showPartTwo = false;\n    this.counter = 0;\n    this.breakLopp = true;\n    this.counterTwo = 0;\n    this.minutess = 0;\n    this.secondss = 0;\n    this.showStartButton = true;\n    this.showStopButton = true;\n    this.studentMinutes = 20;\n  }\n\n  ngOnInit(): void {\n    this.conected = true;\n    this.idTeacher = sessionStorage.getItem('teacherId');\n    this.teacherService.getTeachersById(this.idTeacher).subscribe((resp) => {\n      this.teacherFound = resp;\n      if (resp.description.length > 5) {\n        this.teacherFound.description = resp.description;\n      } else if (this.teacherFound.description === null || this.teacherFound.description === 'null' || this.teacherFound.description === undefined || this.teacherFound.description === 'undefined') {\n        this.teacherFound.description = 'asd';\n      }\n      else {\n        this.teacherFound.description = 'asd';\n      }\n\n      console.log(\"teacher found \", this.teacherFound);\n    });\n    this.getTicherTime();\n\n    setTimeout(() => {\n      this.getListOfRetirements();\n    }, 1000);\n\n    this.getCourses();\n    // hacer filtros para traer los cursos que pertenecen al profesor no mas no todos\n    this.getAllGrupalCourses();\n    setTimeout(() => {\n      this.getTeahcerImage();\n    }, 1000)\n    setTimeout(() => {\n      const source = interval(1000);\n      source.subscribe(() => this.getState());\n    }, 1000);\n\n\n    setTimeout(() => {\n      let objetoToPrivateChanel: any = {\n        idStudent: this.idStudent,\n        onChat: false\n      }\n      this.webSocketService.sendEventToAgent(`${this.publis_topic_endpoint_private_teacher_chanel}/${this.idTeacher}`, objetoToPrivateChanel);\n    }, 2000)\n\n    setTimeout(() => {\n      this.socketClient = this.webSocketService.socketInitialConnection();\n    }, 2000);\n\n    setTimeout(() => {\n      this.subscrieToNotificationTeacherChanel(this.idTeacher);\n    }, 3000)\n\n    setTimeout(() => {\n      this.sendInitialMessageToPrivateNotificationChannel();\n    }, 3000)\n\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    }, 1000);\n  }\n\n  getListOfRetirements() {\n    console.log(\"valor de teacher foubnd \", this.teacherFound.retirements);\n    this.dataSource = new MatTableDataSource(this.teacherFound.retirements);\n    console.log(\"Data source \", this.dataSource);\n  }\n\n  sendEventToAgent(endpoint: any, payload: any, extra?: any) {\n    if (extra) {\n      let generalObject: any = {\n        id: 0,\n        idStudent: payload.idStudent,\n        onChat: payload.onChat,\n        tipo: extra.tipo\n      };\n      this.socketClient.publish({\n        destination: endpoint,\n        body: JSON.stringify(generalObject)\n      });\n    } else {\n      this.socketClient.publish({\n        destination: endpoint,\n        body: JSON.stringify(payload)\n      });\n    }\n  }\n\n  getTicherTime() {\n    this.teacherService.getTeacherTime(this.idTeacher).subscribe((resp) => {\n      this.teacherTime = resp;\n    });\n  }\n\n  sendInitialMessageToPrivateNotificationChannel() {\n    let bodyNotification: any = {\n      mensaje: 'INITIAL_CONNECTION_NOTIFICATION_CHANEL'\n    }\n    this.sendEventToAgent(`${this.publish_socket_teacher_notification_chanel}/${this.idTeacher}`, bodyNotification)\n  }\n\n  sendPositiveAnswerToChannel() {\n    let bodyNotification: any = {\n      mensaje: 'TEACHER_ACCEPT'\n    }\n    this.sendEventToAgent(`${this.publish_socket_teacher_notification_chanel}/${this.idTeacher}`, bodyNotification)\n  }\n\n  sendNegativeAnswerToChannel() {\n    let bodyNotification: any = {\n      mensaje: 'TEACHER_DENY'\n    }\n    this.sendEventToAgent(`${this.publish_socket_teacher_notification_chanel}/${this.idTeacher}`, bodyNotification)\n  }\n\n\n  subscrieToNotificationTeacherChanel(idTeacher: any) {\n    let endpointToNotificationChanel = `${this.socket_teacher_notification_chanel}/${idTeacher}`;\n    this.socketClient.subscribe(endpointToNotificationChanel, e => {\n      let responseFromAgent: any = JSON.parse(e.body);\n      if (responseFromAgent.body == 'ANSWER_ASKING_FOR_MEETING') {\n        this.showSweetAlertForSession();\n      }\n      if (responseFromAgent.body == 'ANSWER_ESTUDENT_DENY') {\n        this.conectar();\n        Swal.close();\n        setTimeout(() => {\n          this.showAlertOfCancel();\n        }, 1000);\n      }\n      if (responseFromAgent.body.mensaje == 'ANSWER_TEACHER_ACCEPT') {\n        setTimeout(() => {\n          let idTeacher = responseFromAgent.body.idTeacher;\n          let idStudent = responseFromAgent.body.idStudent;\n          this.subscribeToTimerTeacherStudent(idTeacher, idStudent);\n        }, 5000)\n        this.globalUrlMeet = responseFromAgent.body.urlMeetOnQueue;\n      }\n    });\n  }\n\n  // cuando se ejecuta este evento crear otro socket para el tema del cronometro\n  // el profesor podra parar dicho cronometro cuando la clase finalice\n\n  showAlertOfCancel() {\n    Swal.fire('Tutoría cancelada', 'El estudiante a cancelado la solicitud de la tutoría', 'info');\n  }\n\n  showSweetAlertForSession() {\n    this.playSound();\n    this.notificationPopUp();\n    Swal.fire({\n      title: 'Tienes una solicitud para una tutoria',\n      text: '¿ Aceptar solicitud e ir a reunion ?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#17a2b8',\n      cancelButtonColor: '#4d545a',\n      confirmButtonText: 'Aceptar',\n      cancelButtonText: 'Rechazar'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.sendPositiveAnswerToChannel();\n        setTimeout(() => {\n          this.goToMeetUrl();\n        }, 10000);\n      }\n      if (result.isDismissed) {\n        this.sendNegativeAnswerToChannel();\n      }\n    })\n  }\n\n  notificationPopUp() {\n    console.log(\"pup example\");\n    webNotification.showNotification('', {\n      body: 'mittu - Nueva solicitud de tutoría',\n      icon: '../../../../assets/images/mittu.png',\n      autoClose: 15000\n    });\n  }\n\n\n\n  conectar() {\n    this.webSocketService.connectToSocket();\n    let bodyToEnableTeacherAndCourses: any = {\n      idTeacher: this.idTeacher,\n      mensaje: 'ENABLE_TEACHER'\n    }\n    setTimeout(() => {\n      this.webSocketService.sendEventToAgent(this.publis_topic_endpoint, bodyToEnableTeacherAndCourses)\n    }, 1000);\n  }\n\n  desconectar() {\n    let bodyToDisableTeacherAndCourses: any = {\n      idTeacher: this.idTeacher,\n      mensaje: 'DISABLE_TEACHER'\n    }\n    setTimeout(() => {\n      this.webSocketService.sendEventToAgent(this.publis_topic_endpoint, bodyToDisableTeacherAndCourses)\n    }, 1000);\n  }\n\n  getCourses() {\n    this.courseService.getAllCourseFromTeacher(this.idTeacher).subscribe((resp) => {\n      this.teacherCourses = resp;\n    });\n  }\n\n  getState() {\n    let bodyToverifyState: any = this.idTeacher;\n    this.webSocketService.sendEventToAgent(`${this.publis_topic_endpoint_verify_state}/${this.idTeacher}`, bodyToverifyState);\n    this.conected = this.webSocketService.getStateOfTeacher();\n  }\n\n\n  // como sacar el ID para que funcione por el momento esta quemado para desactivar el sweet Alert\n  getStateOfChat() {\n    let bodyToverifyState: any = 'state_of_chat';\n    this.webSocketService.sendEventToAgent(`${this.publis_topic_endpoint_verify_state_of_chat}/${this.idTeacher}`, bodyToverifyState);\n    this.stateOfChat = this.webSocketService.getStateOfTeacherChat();\n    this.idStudent = this.webSocketService.getIdStudent();\n    this.sweetAlertConfirmationChat();\n  }\n\n  sweetAlertConfirmationChat() {\n    if (this.stateOfChat) {\n      Sw.fire({\n        'title': `Chat pendiente`,\n        'text': `Deseas unirte al chat`,\n        'icon': `question`,\n        showCloseButton: true,\n        showCancelButton: true,\n        confirmButtonText: `Unirme`,\n        cancelButtonText: `Rechazar`,\n        confirmButtonColor: '#17a2b8',\n        cancelButtonColor: '#4d545a',\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.modalService.openModal();\n          this.informationForPrivateChat = {\n            idTeacher: this.idTeacher,\n            idStudent: '1' //HACER DINAMICO\n          }\n        }\n        if (result.isDismissed) {\n          let endpoint_topic_private_chat = `/app/teacher/state/chat/${this.idTeacher}/3`;\n          let payload: any = false;\n          this.webSocketService.sendEventToAgent(endpoint_topic_private_chat, payload);\n        }\n      });\n    }\n  }\n\n  getAllGrupalCourses() {\n    this.grupalCourseService.getAllGrupalCourses().subscribe((grupalCourses) => {\n      const filterCoursesByTeacherId = grupalCourses.filter(object => (object.idTeacher === +this.idTeacher));\n      this.grupalCourses = filterCoursesByTeacherId;\n      let cantidadDeEstudiantes = 0;\n      let cantidadDeEstuiantesTotal = 0;\n      this.grupalCourses.forEach((element) => {\n        cantidadDeEstuiantesTotal = element.studentes.length + cantidadDeEstuiantesTotal;\n      });\n      this.totalStudents = cantidadDeEstuiantesTotal;\n    });\n  }\n\n  watchStudentsMethod() {\n    this.watchStudents = true;\n  }\n\n  HiddeStudentMethod() {\n    this.watchStudents = false;\n  }\n\n  showPersonalCourses() {\n    this.onPersonalCourse = true;\n    this.onGrupalCourse = false;\n    this.onTransactions = false;\n    this.getCourses();\n  }\n\n  showGrupalCourses() {\n    this.onGrupalCourse = true;\n    this.onPersonalCourse = false;\n    this.onTransactions = false;\n    this.getAllGrupalCourses();\n  }\n\n  showTransfers() {\n    this.onTransactions = true;\n    this.onPersonalCourse = false;\n    this.onGrupalCourse = false;\n    this.teacherService.getTeachersById(this.idTeacher).subscribe((resp) => {\n      this.teacherFound = resp;\n    });\n    this.getListOfRetirements();\n  }\n\n  goToDetailGroupStudentsModal(grupalCourse: grupalCourseEntity) {\n    this.grupalCourseSelected = grupalCourse;\n    if (this.grupalCourseSelected.studentes.length <= 0) {\n      Swal.fire('Sin estudiantes', 'Este curso no cuenta algun estudiante inscrito', 'warning');\n    }\n    this.modalService.openModal();\n  }\n\n  goToEditGrupalCourse(grupalCourseToEdit: grupalCourseEntity) {\n    if (this.grupalCourseSelectedToModify === undefined) {\n      this.grupalCourseSelectedToModify = grupalCourseToEdit;\n    }\n    if (this.grupalCourseSelectedToModify !== undefined) {\n      this.grupalCourseSelectedToModify = grupalCourseToEdit;\n      this.modalService.openModal();\n    }\n  }\n\n  goToEditTutoriaCourse(tutoriaCourseToEdit: courseEntity) {\n    this.tutoriaCourseSelectedToModify = tutoriaCourseToEdit;\n    this.modalService.openModal();\n  }\n\n  goToCreateGrupalCourse() {\n    this.modalService.openModal();\n  }\n\n  goToCreateTutoriaCourse() {\n    this.modalService.openModal();\n  }\n\n  updateCourses(event: any) {\n    if (event) {\n      this.grupalCourses = [];\n      this.getAllGrupalCourses();\n      this.modalService.closeModal();\n    }\n  }\n\n  updateCoursesButton() {\n    this.grupalCourses = [];\n    this.getAllGrupalCourses();\n    Swal.fire('Exito', 'Ahora podras ver los estudiantes inscritos recientemente en sus respectivos cursos grupales', 'success');\n  }\n\n  updateTutoriaCoursesNew(event: any) {\n    if (event) {\n      this.teacherCourses = [];\n      this.getCourses();\n    }\n  }\n\n  establishIdImage(id) {\n    this.idImageToUpload = id;\n    this.modalService.openModal();\n  }\n\n  establishGruaplIdImage(id) {\n    this.idGruaplImageToUpload = id;\n    this.modalService.openModal();\n  }\n\n\n  goToMeetUrl() {\n    window.open(this.globalUrlMeet, '_blank');\n  }\n\n  getTeahcerImage() {\n    this.teacherImage = this.teacherFound.picture;\n  }\n\n  idTeacherToUploadImage() {\n    this.idTeacherImageToUpload = this.teacherFound.id;\n    this.modalService.openModal();\n  }\n\n  refreshPicture() {\n    this.teacherImage = '';\n    this.teacherService.getTeachersById(this.idTeacher).subscribe((resp) => {\n      this.teacherFound = resp;\n    });\n\n    setTimeout(() => {\n      this.teacherImage = this.teacherFound.picture;\n    }, 1000)\n  }\n\n  // TIMER SECTION\n\n\n  subscribeToTimerTeacherStudent(idTeacher: any, idStudent: any) {\n    this.globalTeacherId = idTeacher;\n    this.globalStudentId = idStudent;\n    console.log(\"ID DEL ESTUDIANTEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE \", this.globalStudentId);\n\n    let endpointToTimmerChanel = `${this.timer_channel_subscribe}/${idTeacher}/${idStudent}`;\n\n    this.socketClient.subscribe(endpointToTimmerChanel, e => {\n      let responseFromAgent = JSON.parse(e.body);\n\n      if (responseFromAgent.body.message == 'ANSWER_INITAL_TIMER_CONNECTION_TEACHER') {\n        this.openTimmerModal();\n      }\n\n      if (responseFromAgent.body.message == 'ANSWER_TIMER_START') {\n      }\n\n      if (responseFromAgent.body.message == 'ANSWER_TIMER_STOP') {\n        let teacherId = this.globalTeacherId;\n        let studenId = this.globalStudentId;\n        let timeOnClass = this.minutess;\n        this.teacherService.reduceTimeToStudentAndAddToTeacher(teacherId, studenId, timeOnClass).subscribe((resp) => {\n          this.timerResponse = resp;\n        });\n      }\n\n    });\n\n    setTimeout(() => {\n      this.initialMessageOnTimerConnection(idTeacher, idStudent);\n    }, 3000);\n  }\n\n\n  openTimmerModal() {\n    Sw.fire({\n      'title': `Tutoría pendiente`,\n      'text': `Deseas unirte a la tutoría`,\n      'icon': `success`,\n      showCloseButton: true,\n      showCancelButton: true,\n      showConfirmButton: this.showStart,\n      confirmButtonText: `Inicar cronometro`,\n      cancelButtonText: `Detener cronometro`,\n      confirmButtonColor: '#17a2b8',\n      cancelButtonColor: '#4d545a',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.showStart = false;\n        this.startTimer(this.globalTeacherId, this.globalStudentId);\n      }\n\n    });\n  }\n\n\n\n  initialMessageOnTimerConnection(idTeacher: any, idStudent: any) {\n    let body: any = {\n      message: 'INITAL_TIMER_CONNECTION_TEACHER'\n    }\n    setTimeout(() => {\n      this.webSocketService.sendEventToAgent(`${this.timer_channel_send}/${idTeacher}/${idStudent}`, body)\n    }, 2000);\n  }\n\n  startTimer(idTeacher: any, idStudent: any) {\n    this.globalIdTeacher = idTeacher;\n    this.gloablIdStudent = idStudent;\n    this.openTimerModal();\n  }\n\n  stopTimerr() {\n    this.breakLopp = false;\n    this.showPartOne = false;\n    this.showPartTwo = true;\n    this.stopTimer(this.globalTeacherId, this.globalStudentId);\n  }\n\n  startTimerr() {\n    let body: any = {\n      message: 'TIMER_START'\n    }\n    setTimeout(() => {\n      this.webSocketService.sendEventToAgent(`${this.timer_channel_send}/${this.globalIdTeacher}/${this.gloablIdStudent}`, body)\n    }, 2000);\n    this.showPartOne = true;\n    this.showStartButton = false;\n    this.startTimmer();\n    this.startTimmerSeconds();\n\n  }\n\n  stopTimer(idTeacher: any, idStudent: any) {\n    let body: any = {\n      message: 'TIMER_STOP'\n    }\n    setTimeout(() => {\n      this.webSocketService.sendEventToAgent(`${this.timer_channel_send}/${idTeacher}/${idStudent}`, body)\n    }, 2000);\n  }\n\n  openTimerModal() {\n    let ngbModalOptions: NgbModalOptions = {\n      backdrop: 'static',\n      keyboard: false\n    };\n    this.boostrapModalService.open(this.editModal, ngbModalOptions);\n  }\n\n  startTimmer() {\n    setTimeout(() => {\n      this.counter++;\n      if (this.counter < 400 && this.breakLopp) {\n        this.minutess = this.counter;\n        this.startTimmer();\n      }\n    }, 60000)\n  }\n\n  startTimmerSeconds() {\n    setTimeout(() => {\n      this.counterTwo++;\n      if (this.counterTwo <= 60 && this.breakLopp) {\n        this.secondss = this.counterTwo;\n        if (this.counterTwo == 60) {\n          this.counterTwo = 0;\n        }\n        this.startTimmerSeconds();\n      }\n    }, 1000)\n  }\n\n  backToHome() {\n    this.router.navigate(['/home-loged']);\n  }\n\n\n  closeSession() {\n    this.webSocketService.desconnectFromSocket();\n    this.authService.logout();\n  }\n\n  playSound() {\n    let sound = new Audio('../../../../assets/sound/notification.wav');\n    sound.play();\n  }\n\n}\n","<div class=\"all\">\n    <!-- <app-logged-nvbar></app-logged-nvbar> -->\n\n    <div class=\"row panel buttons-space\">\n        <div class=\"col-9\">\n            <div class=\"col-12 text-left mittu-title\" style=\"padding-left: 100px;\" (click)=\"backToHome()\">\n                mittu\n            </div>\n        </div>\n\n        <div class=\"col-3\">\n            <div class=\"row\">\n                <div class=\"col text-center\">\n                    <i class=\"fa fa-user-secret icon\" (click)=\"closeSession()\"></i>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col text-center\" style=\"padding-top: 10px; color: #17A2B8; cursor: pointer;\">\n                    <p (click)=\"closeSession()\"> Cerrar sesión</p>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-12\" style=\"padding-top: 40px;\">\n\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-4 text-center\" style=\"padding-left: 100px;\">\n            <div [ngClass]=\"{'icon-available-all-render-style': conected === false}\" class=\"card icon-available-all\">\n                <div class=\"card-body\" (click)=conectar() style=\"cursor: pointer;\">\n                    <h1>Disponible</h1>\n                    <i class=\"fa fa-check-square icon-available\"></i>\n                </div>\n                <button class=\"btn btn-success\" (click)=conectar()>Disponible</button>\n            </div>\n        </div>\n\n        <div class=\"col-4 text-center\">\n            <div [ngClass]=\"{'icon-busy-all-render-style': conected === true}\" class=\"card icon-busy-all\">\n                <div class=\"card-body\" (click)=desconectar() style=\"cursor: pointer;\">\n                    <h1>Ocupado</h1>\n                    <i class=\"fa fa-check-square icon-busy\"></i>\n                </div>\n                <button class=\"btn btn-danger\" (click)=desconectar()>Ocupado</button>\n            </div>\n        </div>\n\n        <div class=\"col-3 text-center\">\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div *ngIf=\"!conected; else elseBlock\">\n                        <div class=\"row text-center\">\n                            <div class=\"col\" style=\"padding-top: 70px; padding-bottom: 70px;\">\n                                <h2>Tu estado actual es</h2>\n                                <h1 class=\"space-over space-bottom\"><span style=\"color:green\">DISPONIBLE</span></h1>\n                                <p> Tip: Si estas <span style=\"color:green\">\" disponible \" </span> los estudiantes\n                                    podran\n                                    ver\n                                    las\n                                    tutorias\n                                    que ofreces</p>\n                            </div>\n                        </div>\n                    </div>\n                    <ng-template #elseBlock>\n                        <div class=\"row text-center\">\n                            <div class=\"col\" style=\"padding-top: 70px; padding-bottom: 70px;\">\n                                <h2>Tu estado actual es</h2>\n                                <h1 class=\"space-over space-bottom\"><span style=\"color:red\">OCUPADO</span></h1>\n                                <p> Tip: Si estas <span style=\"color:red\"> \" ocupado \" </span> los estudiantes no podran\n                                    ver\n                                    las\n                                    tutorias\n                                    que ofreces</p>\n                            </div>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-12\" style=\"padding-top: 40px;\">\n\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col-1\">\n\n        </div>\n\n        <div class=\"col-2 vertical-panel borders\">\n            <div style=\"padding-top: 20px;\"></div>\n            <div class=\"row\">\n                <div class=\"col text-center\" style=\"color: white;\">\n                    <h1> <b> <span class=\"badge badge-info\"> Mi perfil</span> </b> </h1>\n                    <img src=\"{{endpoint_teacher_image}}/{{teacherImage }}\" alt=\"\" class=\"img-thumbnail\"\n                        style=\"border-radius: 50%;\">\n                    <div style=\"padding-top: 20px;\"></div>\n                    <button class=\"btn btn-info col-6\" (click)=\"idTeacherToUploadImage()\" data-toggle=\"modal\"\n                        data-target=\"#modalImageTeacher\">Cambiar foto de perfil</button>\n                </div>\n            </div>\n\n            <div style=\"padding-top: 20px;\"></div>\n            <div class=\"row borders-sides\">\n                <div class=\"col text-center\">\n                    <h2> <b> {{teacherFound.name}} {{teacherFound.lastName}} </b> </h2>\n                    <h2> {{teacherFound.education}} </h2>\n\n                </div>\n            </div>\n\n\n            <div style=\"padding-top: 20px;\"></div>\n            <div class=\"row borders-sides\">\n                <div class=\"col text-center\">\n                    <h2> <b> Categoria </b> </h2>\n                    <h2>RESPUESTA DEL SERVICIO IMPLEMENTAR</h2>\n\n                </div>\n            </div>\n\n            <div style=\"padding-top: 20px;\"></div>\n            <div class=\"row borders-sides\">\n                <div class=\"col text-center\">\n                    <h2> <b> Costo por hora </b> </h2>\n                    <h2>{{teacherFound.hourCost | currency}} COP</h2>\n\n                </div>\n            </div>\n\n\n            <div style=\"padding-top: 20px;\"></div>\n            <div class=\"row borders-sides\">\n                <div class=\"col text-center\">\n                    <h2> <b> descripción profesional</b> </h2>\n                    <p class=\"text-justify\"> {{teacherFound.description}}</p>\n                </div>\n            </div>\n\n            <div style=\"padding-top: 30px;\"></div>\n            <div class=\"row\">\n                <div class=\"col text-center\">\n\n                </div>\n            </div>\n            <div style=\"padding-top: 15px;\"></div>\n            <div class=\"row\">\n                <div class=\"col text-center\">\n                    <button class=\"btn btn-outline-info\"> Editar información </button>\n                </div>\n            </div>\n            <div style=\"padding-bottom: 20px;\"></div>\n\n        </div>\n\n        <div class=\"col-1\">\n\n        </div>\n\n        <div class=\"col-7 horizontal-panel\">\n            <div class=\"row text-center\" style=\"padding-top: 40px;\">\n                <div class=\"col-4\">\n                    <button class=\"btn btn-info\" (click)=\"showPersonalCourses()\">Ver mis tutorias</button>\n                </div>\n                <div class=\"col-4\">\n                    <button class=\"btn btn-info\" (click)=\"showGrupalCourses()\">Ver mis cursos grupales </button>\n                </div>\n                <div class=\"col-4\">\n                    <button class=\"btn btn-info\" (click)=\"showTransfers()\">Ver mis transacciones </button>\n                </div>\n            </div>\n\n            <div style=\"padding-top: 40px;\"></div>\n\n            <div *ngIf=\"onPersonalCourse\">\n                <div class=\"card border-info\">\n                    <div class=\"row text-center\">\n                        <div class=\"col-12 space-over space-bottom\">\n                            <h2>Tutorias que actualmente ofreces</h2>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"teacherCourses.length <= 0\">\n                        <div class=\"row\">\n                            <div class=\"col-12 text-center\" style=\"color: darkturquoise;\">\n                                <h2> Actualmente no tienes creada alguna tutoría</h2>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row general-padding\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-info col-md-4 float-right\" (click)=\"goToCreateTutoriaCourse()\"\n                                data-toggle=\"modal\" data-target=\"#modalTutoriaCreateForm\">Crear tutoria</button>\n                        </div>\n                    </div>\n\n                    <div class=\"general-padding\">\n                        <div class=\"row\">\n                            <div *ngFor=\"let course of teacherCourses\" class=\"col-6 text-center\">\n                                <div class=\"card border-secondary mb-3\">\n                                    <div class=\"card-header\"><b>Nombre</b></div>\n                                    <div class=\"card-header\">{{course.name}}</div>\n                                    <div class=\"card-body text-secondary\">\n                                        <img src=\"{{endpoint_course_image}}/{{course.picture}}\" alt=\"\"\n                                            class=\"img-thumbnail rounded image-size\">\n                                        <p class=\"card-text\"><b>descripción de curso</b></p>\n                                        <p class=\"card-text\">{{course.description}} </p>\n                                        <p class=\"card-text\"><b> Url de Google meet</b> </p>\n                                        <a href=\"{{course.meetUrlCourse}}\" target=\"_blank\">{{course.meetUrlCourse}}</a>\n\n                                        <div class=\"row\">\n                                            <div class=\"col-6 text-center\" style=\"padding-top: 10px\">\n                                                <button class=\"btn btn-info\" (click)=\"goToEditTutoriaCourse(course)\"\n                                                    data-toggle=\"modal\" data-target=\"#modalTutoriaEditForm\">Editar\n                                                    información</button>\n                                            </div>\n\n                                            <div class=\"col-6 text-center\" style=\"padding-top: 10px\">\n                                                <button class=\"btn btn-outline-info\"\n                                                    (click)=\"establishIdImage(course.id)\" data-toggle=\"modal\"\n                                                    data-target=\"#modalImageCourse\">Agregar\n                                                    imagen</button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"onGrupalCourse\">\n                <div class=\"card border-info\">\n                    <div class=\"row text-center\">\n                        <div class=\"col-12 space-over space-bottom\">\n                            <h2>Cursos grupales que actualmente ofreces</h2>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-6 text-center\" style=\"padding-left: 60px;\">\n                            <div class=\"card text-white bg-info\" style=\"height: 120px;\">\n                                <div class=\"card-header text-white\"><b>Estudiantes totales inscritos</b></div>\n                                <div class=\"card-body text-white\">\n                                    <p class=\"card-text costum-size\"> {{totalStudents}}</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-12 text-center\" style=\"padding-top: 10px;\">\n                                <button class=\"btn btn-info\" (click)=\"updateCoursesButton()\">Ver\n                                    nuevos\n                                    estudiantes\n                                    inscritos</button>\n                            </div>\n                            <div class=\"col-12 text-center\">\n                                <button class=\"btn btn-outline-info\" (click)=\"goToCreateGrupalCourse()\"\n                                    data-toggle=\"modal\" data-target=\"#modalGroupCreateForm\">Crear curso grupal</button>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"grupalCourses.length <= 0\" style=\"padding-top: 70px;\">\n                        <div class=\"row\">\n                            <div class=\"col-12 text-center\" style=\"color: darkturquoise;\">\n                                <h2>Actualmente no tienes algun curso grupal creado</h2>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"general-padding\">\n                        <div class=\"row\" style=\"padding-top: 10px;\">\n                            <div *ngFor=\"let grupalCourse of grupalCourses\" class=\"col-6 text-center\">\n                                <div class=\"card border-secondary mb-3\">\n                                    <div class=\"card-header\"><b>Nombre</b></div>\n                                    <div class=\"card-header\">{{grupalCourse.name}}</div>\n                                    <div class=\"card-body text-secondary\">\n                                        <img src=\"{{endpoint_grupal_course_image}}/{{grupalCourse.picture}}\" alt=\"\"\n                                            class=\"img-thumbnail rounded image-size\">\n                                        <p class=\"card-text\"><b>descripción de curso</b></p>\n                                        <p class=\"card-text\">{{grupalCourse.description}} </p>\n                                        <p class=\"card-text\"><b> Horario</b> </p>\n                                        <p class=\"card-text\">{{grupalCourse.classTime}} </p>\n                                        <p class=\"card-text\"><b> Url de Google meet</b> </p>\n                                        <a href=\"{{grupalCourse.urlMeet}}\" target=\"_blank\">{{grupalCourse.urlMeet}}</a>\n                                        <div class=\"row\" style=\"padding-top: 20px; padding-bottom: 10px\">\n                                            <div class=\"col-6 text-center\">\n                                                <button class=\"btn btn-outline-info\"\n                                                    (click)=\"establishGruaplIdImage(grupalCourse.id)\"\n                                                    data-toggle=\"modal\" data-target=\"#modalImageGrupalCourse\">Agregar\n                                                    imagen</button>\n                                            </div>\n                                            <div class=\"col-6 text-center\">\n                                                <button class=\"btn btn-outline-info\"\n                                                    (click)=\"goToEditGrupalCourse(grupalCourse)\" data-toggle=\"modal\"\n                                                    data-target=\"#modalGroupEditForm\">Editar información </button>\n                                            </div>\n                                        </div>\n                                        <div class=\"row\">\n                                            <div class=\"col-12 text-center\" style=\"padding-top: 10px;\">\n                                                <button class=\"btn btn-info\"\n                                                    (click)=\"goToDetailGroupStudentsModal(grupalCourse)\"\n                                                    data-toggle=\"modal\" data-target=\"#modalGroupStudents\">Ver\n                                                    estudiantes </button>\n                                            </div>\n                                        </div>\n                                        <div *ngIf=\"watchStudents\">\n                                            <div *ngFor=\"let student of grupalCourse.studentes\"\n                                                class=\"col-12 text-center\" style=\"padding-bottom: 10px;\">\n                                                <div class=\"card border-secondary mb-6 text-center\">\n                                                    <div class=\"card-header\">Header</div>\n                                                    <div class=\"card-body text-secondary\">\n                                                        <h5 class=\"card-title\">Nombre: {{student.name}}\n                                                            {{student.lastName}}</h5>\n                                                        <p class=\"card-text\"> Email: {{student.email}}\n                                                        </p>\n                                                        <p class=\"card-text\"> Telefono: {{student.phone}}\n                                                        </p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"onTransactions\">\n                <div class=\"card border-info\">\n                    <div class=\"container\">\n                        <div class=\"row space-bottom space-over text-center\">\n                            <div class=\"col-12\">\n                                <h2>Panel de transacciones</h2>\n                            </div>\n                        </div>\n                        <div class=\"row space-over space-bottom\">\n                            <div class=\"col-7 text-center\" style=\"padding-left: 100px;\">\n                                <div class=\"card text-dark bg-warning\" style=\"max-width: 24rem; height: 9rem;\">\n                                    <div class=\"card-header text-center\" style=\"font-size: 20px;\">Realizar\n                                        retiro\n                                    </div>\n                                    <div class=\"text-center\">\n                                        <img src=\"../../../../assets/icons/bootstrap-icons/cash-stack.svg\" alt=\"\"\n                                            width=\"100px\" height=\"100px\" title=\"Bootstrap\">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-5 text-center\">\n                                <div class=\"card text-white bg-success text-center\"\n                                    style=\"max-width: 24rem;  height: 9rem;\">\n                                    <div class=\"card-header\" style=\"font-size: 20px;\">Saldo disponible\n                                    </div>\n                                    <div class=\"card-body\">\n                                        <p class=\"card-text costum-size\"> {{teacherFound.money | currency}} COP\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n\n                        <div class=\"row space-over-max\">\n                            <div class=\"col-12 text-center\">\n                                <h2>Historial de retiros</h2>\n                            </div>\n                        </div>\n                        <div class=\"space-bottom\">\n                            <div class=\"card border-info\">\n                                <div class=\"space-over text-center \">\n                                    <div *ngIf=\"dataSource\">\n                                        <div *ngIf=\"dataSource.data.length <= 0\" class=\"container\"\n                                            style=\"padding-top: 30px; padding-bottom: 30px;\">\n                                            <div class=\"card bg-info\">\n                                                <div class=\"row\" style=\"padding-bottom: 30px; padding-top: 30px;\">\n                                                    <div class=\"col-12 text-center text-white\">\n                                                        <h2>Aún no has realizado transacciones</h2>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div *ngIf=\"dataSource.data.length > 0\" class=\"container\"\n                                            style=\"padding-top: 30px; padding-bottom: 30px;\">\n                                            <div class=\"mat-elevation-z8\">\n                                                <table mat-table [dataSource]=\"dataSource\" matSort>\n\n                                                    <ng-container matColumnDef=\"Fecha\">\n                                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Fecha\n                                                        </th>\n                                                        <td mat-cell *matCellDef=\"let row\"> {{row.fechaDeCreacion}}\n                                                        </td>\n                                                    </ng-container>\n\n                                                    <ng-container matColumnDef=\"Estado\">\n                                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Estado\n                                                        </th>\n                                                        <td mat-cell *matCellDef=\"let row\"> {{row.state}} </td>\n                                                    </ng-container>\n\n                                                    <ng-container matColumnDef=\"Cantidad retirada\">\n                                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Cantidad\n                                                            Solicitada </th>\n                                                        <td mat-cell *matCellDef=\"let row\"> {{row.cost | currency}} COP\n                                                        </td>\n                                                    </ng-container>\n\n\n                                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                                                </table>\n\n                                                <mat-paginator [pageSizeOptions]=\"[10, 25, 100]\"></mat-paginator>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n\n    <div class=\"container space-over space-bottom\">\n    </div>\n\n    <app-grupal-course-students *ngIf=\"grupalCourseSelected\" [courseName]=\"grupalCourseSelected.name\"\n        [students]=\"grupalCourseSelected.studentes\"> </app-grupal-course-students>\n\n    <app-grupal-course-form *ngIf=\"grupalCourseSelectedToModify\" [grupalCourse]=\"grupalCourseSelectedToModify\"\n        (grupalCourseEmmiter)=\"updateCourses($event)\">\n    </app-grupal-course-form>\n\n    <app-grupal-course-form-create [idTeacherHeredado]=\"idTeacher\" (grupalCourseEmmiter)=\"updateCourses($event)\">\n    </app-grupal-course-form-create>\n\n    <app-tutoria-form-create [idTeacherHeredado]=\"idTeacher\" (tutoriaCourseEmmiter)=\"updateTutoriaCoursesNew($event)\">\n    </app-tutoria-form-create>\n\n    <app-tutoria-form *ngIf=\"tutoriaCourseSelectedToModify\" [tutoriaCourse]=\"tutoriaCourseSelectedToModify\"\n        [idTeacherHeredado]=\"idTeacher\" (tutoriaCourseEmmiter)=\"updateTutoriaCoursesNew($event)\"> </app-tutoria-form>\n\n    <app-upload-course-image *ngIf=\"idImageToUpload\" [courseId]=\"idImageToUpload\"\n        (tutoriaCourseEmmiter)=updateTutoriaCoursesNew($event)>\n    </app-upload-course-image>\n\n    <app-upload-grupal-course-image *ngIf=\"idGruaplImageToUpload\" [courseId]=\"idGruaplImageToUpload\"\n        (grupalCourseEmmiterUpload)=updateCourses($event)></app-upload-grupal-course-image>\n\n    <app-upload-teacher-image *ngIf=\"idTeacherImageToUpload\" [teacherIdToHeredate]=\"idTeacherImageToUpload\"\n        (TeacherEmmiterUpload)=\"refreshPicture()\"></app-upload-teacher-image>\n\n    <div style=\"padding-top: 140px\">\n        <!-- <app-footer></app-footer> -->\n    </div>\n\n    <app-chat *ngIf=\"algo\" [idStudent]=\"1\" [idTeacher]=\"1\" [urlMeet]=\"\" (goToMeetEventEmiter)=\"goToMeetUrl()\">\n    </app-chat>\n\n    <!-- timer modal -->\n\n    <ng-template #editModal let-modal>\n\n        <div *ngIf=\"showPartOne\">\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-12 text-center\" style=\"padding-top: 20px; padding-bottom: 5px;\">\n                        <h1>\n                            Cronometro\n                        </h1>\n                    </div>\n                </div>\n                <div class=\"round-border\">\n                    <div class=\"row\" style=\"padding-bottom: 40px; padding-top: 45px;\">\n                        <div class=\"col-5 text-center\">\n                            <div class=\"text-center\">\n                                Minutos\n                            </div>\n                        </div>\n                        <div class=\"col-1 text-center numbers\">\n                            <div class=\"text-center\">\n                            </div>\n                        </div>\n                        <div class=\"col-6 text-center\">\n                            <div class=\"text-center\">\n                                Segundos\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-5 text-center numbers\">\n                            <div class=\"text-center\">\n                                {{this.minutess}}\n                            </div>\n                        </div>\n                        <div class=\"col-1 text-center numbers\">\n                            <div class=\"text-center\">\n                                :\n                            </div>\n                        </div>\n                        <div class=\"col-6 text-center numbers\">\n                            <div class=\"text-center\">\n                                {{this.secondss}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-12 text-center\" style=\"padding-top: 20px; padding-bottom: 5px;\">\n                        <h2 style=\"color: chocolate;\">\n                            Tiempo disponible del alumno\n                        </h2>\n                    </div>\n                </div>\n                <div class=\"row\" style=\"padding-bottom: 40px;\">\n                    <div class=\"col-12 text-center\">\n                        <div class=\"text-center\">\n                            Minutos\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-12 text-center numbersTwo\">\n                        <div class=\"text-center\">\n                            {{this.studentMinutes}}\n                        </div>\n                    </div>\n                </div>\n            </div> -->\n\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-12 text-center\">\n                        <button *ngIf=\"showStartButton\" class=\"btn btn-info btn-block\" (click)=startTimerr()>\n                            Iniciar cronometro\n                        </button>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12 text-center\" style=\"padding-top: 20px;\">\n                        <button class=\"btn btn-outline-info btn-block\" (click)=stopTimerr()>\n                            Detener cronometro\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"showPartTwo\">\n            <div class=\"modal-body\">\n                <div class=\"col-12 text-center\" style=\"padding-top: 20px; padding-bottom: 5px;\">\n                    <h1>\n                        Tiempo total de la tutoría\n                    </h1>\n                </div>\n\n                <div class=\"round-border\">\n                    <div class=\"row\" style=\"padding-bottom: 40px; padding-top: 45px;\">\n                        <div class=\"col-5 text-center\">\n                            <div class=\"text-center\">\n                                Minutos\n                            </div>\n                        </div>\n                        <div class=\"col-1 text-center numbers\">\n                            <div class=\"text-center\">\n                            </div>\n                        </div>\n                        <div class=\"col-6 text-center\">\n                            <div class=\"text-center\">\n                                Segundos\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-5 text-center numbers\">\n                            <div class=\"text-center\">\n                                {{this.minutess}}\n                            </div>\n                        </div>\n                        <div class=\"col-1 text-center numbers\">\n                            <div class=\"text-center\">\n                                :\n                            </div>\n                        </div>\n                        <div class=\"col-6 text-center numbers\">\n                            <div class=\"text-center\">\n                                {{this.secondss}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-12 text-center\">\n                        <button class=\"btn btn-info btn-block\" (click)=\"modal.close()\">\n                            cerrar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </ng-template>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TransactionService } from 'src/app/services/transaction.service';\nimport { Md5 } from 'ts-md5/dist/md5';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { WebSocketService } from '../../services/web-socket.service';\nimport { Client } from '@stomp/stompjs';\nimport { TemplateRef, ViewChild } from '@angular/core';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport Sw from 'sweetalert2';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n  public opciones: any[] = [];\n  public responseFromTransfer: any;\n  private apiKey = 'U5IXKhl1VI8AAuW8N6DJARK45T';\n  private client: Client;\n  private destination_topic = '/app/teacher/socket';\n  public seconds: number;\n  public minutes: number;\n  public totalTime: any;\n  public breakLopp: boolean;\n  public counter: number;\n  public counterTwo: number;\n  public isTrue: boolean;\n  public showPartOne: boolean;\n  public showPartTwo: boolean;\n  public showStartButton: boolean;\n  public showStopButton: boolean;\n  public studentMinutes: number;\n  public responseOne: any;\n  public responseTwo: any;\n  public userEmail: any;\n  public responseOneFromAmazon: any;\n  public responseTwoFromAmazon: any;\n\n  @ViewChild('editModal') editModal: TemplateRef<any>; // Note: TemplateRef\n\n  constructor(\n    private transactionService: TransactionService,\n    private router: Router,\n    private socketService: WebSocketService,\n    private boostrapModalService: NgbModal,\n    private activatedRoute: ActivatedRoute\n  ) { }\n\n\n  ngOnInit(): void {\n    let informationFromSession: any;\n    informationFromSession = JSON.parse(sessionStorage.getItem('user'));\n    this.userEmail = informationFromSession.username;\n\n    this.transactionService.getAllPaymentsOptions().subscribe(resp => {\n       this.opciones = resp;\n      // resp.forEach(element => {\n      //   element.cost = 100;\n      //   this.opciones.push(element);\n      // });;\n    });\n\n    \n  }\n\n  md5Encrypter(paramsToEncrypt) {\n    let encriptionResult: any;\n    let keyToEncript: any;\n    keyToEncript = `${this.apiKey}~${paramsToEncrypt.merchantId}~${paramsToEncrypt.referenceCode}~${paramsToEncrypt.amount}~${paramsToEncrypt.currency}`;\n    const md5 = new Md5();\n    encriptionResult = md5.appendStr(keyToEncript).end()\n    return encriptionResult;\n  }\n\n  referenceCodeMethod() {\n    var min = 0;\n    var max = 10000000;\n    var random = Math.random() * (+max - +min) + +min;\n    return random.toFixed().toString();\n  }\n\n  pay(optionSelected: any) {\n    let signature: any;\n    let referenceCode: any;\n    referenceCode = this.referenceCodeMethod();\n    var form = document.createElement(\"form\");\n    // form.target = \"view\";\n    form.method = \"POST\";\n    form.action = \"https://checkout.payulatam.com/ppp-web-gateway-payu\";\n    var paramsToEncrypt = {\n      'merchantId': 910311,\n      'accountId': 917086,\n      'description': optionSelected.name,\n      'referenceCode': referenceCode,\n      'amount': optionSelected.cost,\n      'currency': 'COP'\n    };\n    signature = this.md5Encrypter(paramsToEncrypt);\n    var params = {\n      'ApiKey': this.apiKey,\n      'merchantId': 910311,\n      'accountId': 917086,\n      'description': optionSelected.name,\n      'referenceCode': referenceCode,\n      'amount': optionSelected.cost,\n      'tax': 0,\n      'taxReturnBase': 0,\n      'currency': 'COP',\n      'signature': signature,\n      'test': 0,\n      'buyerEmail': this.userEmail,\n      'responseUrl': 'http://localhost:4200/#/student-panel', //cuando funciona me retorna ha esta pagina y en url estan los parametros de confirmacion de la transaccion\n      'confirmationUrl': 'http://localhost:4200/#/student-panel'\n    };\n\n    for (var i in params) {\n      if (params.hasOwnProperty(i)) {\n        var input = document.createElement('input');\n        input.type = 'hidden';\n        input.name = i;\n        input.value = params[i];\n        form.appendChild(input);\n      }\n    }\n\n    document.body.appendChild(form);\n    form.submit();\n    // window.open('', 'view');\n  }\n\n  openModalTest() {\n    let ngbModalOptions: NgbModalOptions = {\n      backdrop: 'static',\n      keyboard: false\n    };\n    this.boostrapModalService.open(this.editModal, ngbModalOptions);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div *ngFor=\"let object of opciones\" class=\"col-4 text-center\" style=\"padding-bottom: 10px; padding-top: 10px;\">\n            <div class=\"card\">\n                <img class=\"card-img-top\" src=\"../../../assets/images/mittu.png\"\n                    style=\"border-radius: 50%; height: 150px; width: 150px;\">\n                <div class=\"card-body\">\n                    <p>Realizar recarga de {{object.name}}</p>\n                    <p> Costo de <u>{{object.cost | currency}}</u> COP</p>\n                    <button class=\"btn btn-info\" (click)=\"pay(object)\"> Pagar </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment.prod';\nimport { userEntity } from '../interfaces/userEntity';\nimport { stringify } from 'querystring';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  public environment = environment;\n  public endpoint_student = environment.jwt.host;\n  public appUser = environment.appCredentials.name;\n  public appPass = environment.appCredentials.pass;\n  private httpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n\n  constructor(\n    private http: HttpClient,\n    private router: Router) { }\n\n  private _user: userEntity;\n  private _token: string;\n\n  public get user(): userEntity {\n    if (this._user != null) {\n      return this._user;\n    } else if (this._user == null && sessionStorage.getItem('user') != null) {\n      this._user = JSON.parse(sessionStorage.getItem('user')) as userEntity;\n      return this._user;\n    }\n    return new userEntity();\n  }\n\n  public get token(): string {\n    if (this._token != null) {\n      return this._token;\n    } else if (this._token == null && sessionStorage.getItem('token') != null) {\n      this._token = sessionStorage.getItem('token');\n      return this.token;\n    }\n    return null;\n  }\n\n  login(data: any): Observable<any> {\n    const credentials = btoa(this.appUser + ':' + this.appPass);\n    const httpHeaders = new HttpHeaders(\n      {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' + credentials\n      });\n\n    let params = new URLSearchParams();\n    let responseLogin: any;\n    params.set('grant_type', 'password');\n    params.set('username', data.value.email);\n    params.set('password', data.value.password);\n    return this.http.post<any>(this.endpoint_student, params.toString(), { headers: httpHeaders })\n  }\n\n  saveUser(accessToken: string): void {\n    let token = this.decodeToken(accessToken);\n    let studentId: any = '';\n    let teacherId: any = '';\n    let userId: any = '';\n    let adminId: any = '';\n    this._user = new userEntity();\n    this._user.username = token.user_name;\n    this._user.roles = token.authorities;\n    studentId = token.studentId;\n    teacherId = token.teacherId;\n    userId = token.userId;\n    adminId = token.adminId;\n    sessionStorage.setItem('user', JSON.stringify(this._user));\n    sessionStorage.setItem('studentId', JSON.stringify(studentId));\n    sessionStorage.setItem('teacherId', JSON.stringify(teacherId));\n    sessionStorage.setItem('userId', JSON.stringify(userId));\n    sessionStorage.setItem('adminId', JSON.stringify(adminId));\n  }\n\n  saveToken(accessToken: string): void {\n    this._token = accessToken;\n    sessionStorage.setItem('token', accessToken);\n  }\n\n  decodeToken(accessToken: string): any {\n    if (accessToken != null) {\n      let stringAccessToken = JSON.stringify(accessToken);\n      return JSON.parse(atob(stringAccessToken.split(\".\")[1]));\n    }\n    return null;\n  }\n\n  isAuthenticated(): boolean {\n    let token = this.decodeToken(this.token);\n    if (((token != null) && (token.user_name) && (token.user_name.length > 0))) {\n      return true;\n    } else {\n      return false\n    }\n  }\n\n  hasRole(role?: string): boolean {\n    if (this.user.roles.includes(role)) {\n      return true;\n    }\n    return false;\n\n  }\n\n\n  logout(): void {\n    this._token = null;\n    this._user = null;\n    sessionStorage.clear();\n    this.router.navigate(['/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { courseEntity } from '../interfaces/coursesEntity';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n\n  public environment = environment;\n  public endpoint_course = environment.course.host;\n\n  constructor(\n    private http: HttpClient) { }\n\n    getAllCourses(): Observable<courseEntity[]>  {\n      return this.http.get<courseEntity[]>(`${environment.course.host}`);\n    }\n\n  getAllCourseFromTeacher(idTeacher: any): Observable<courseEntity[]> {\n    let internalEnpoint = `${environment.course.host}/teacher/course/${idTeacher}`;\n    return this.http.get<courseEntity[]>(internalEnpoint);\n  }\n\n  getCourseFiltredByNameAndBusy(courseName: any): Observable<courseEntity[]> {\n    let internalEnpoint = `${environment.course.host}/find/course/name/${courseName}`;\n    return this.http.get<courseEntity[]>(internalEnpoint);\n  }\n\n  createTutoriaCourse(tutoriaCourse: courseEntity): Observable<courseEntity> {\n    let internalEndpoint = `${this.endpoint_course}/creation`;\n    return this.http.post<courseEntity>(internalEndpoint, tutoriaCourse);\n  }\n\n  updateTutoriaCourse(tutoriaCourse: courseEntity, tutoriaCourseId: number) {\n    let internalEnpoint = `${environment.course.host}/${tutoriaCourseId}`;\n    return this.http.put<courseEntity[]>(internalEnpoint, tutoriaCourse);\n  }\n\n  uploadCoursePicture(picture: File, id: any): Observable<courseEntity> {\n    let formData = new FormData();\n    let internalEnpoint = `${environment.course.host}/upload/image`;\n    formData.append(\"imageCourse\", picture);\n    formData.append(\"id\", id);\n    return this.http.post<courseEntity>(internalEnpoint, formData).pipe\n      (\n        map((response: any) => response as courseEntity)\n      );\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedBackService {\n\n  public environment = environment;\n  public endpoint_feed_back = environment.feedBack.host;\n  public endpoint_teacher = environment.teacher.host;\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllFeedBacks(): Observable<any[]> {\n    return this.http.get<any[]>(this.endpoint_feed_back);\n  }\n\n  //CREAR EL ENVIO\n  createFeedBack(objectToSend): Observable<any> {\n    let objectToSendFinal: any = {\n      \"studentId\": objectToSend.studentId,\n      \"studentName\":objectToSend.studentName,\n      \"teacherId\": objectToSend.teacherId,\n      \"teacherName\": objectToSend.teacherName,\n      \"calification\": objectToSend.calification,\n      \"feedBack\": objectToSend.feedBack\n    }\n    return this.http.post<any[]>(this.endpoint_feed_back, objectToSendFinal);\n  }\n\n  getCalification(teacherId: any): Observable<any> {\n    return this.http.get(`${this.endpoint_teacher}/get/califaction/${teacherId}`);\n  }\n\n  getTeacherCalificationStudents(teacherId: any): Observable<any> {\n    return this.http.get(`${this.endpoint_teacher}/get/califaction-students/${teacherId}`);\n  }\n\n  updateTeacherCalification(object: any): Observable<any> {\n    return this.http.post(`${this.endpoint_teacher}/post/califaction`, object);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment.prod';\nimport { HttpClient } from '@angular/common/http';\nimport { grupalCourseEntity } from '../interfaces/grupalCourseEntity';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GrupalCoursesService {\n\n  public environment = environment;\n  public endpoint_grupal_course = environment.grupalCourse.host;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getAllGrupalCourses(): Observable<grupalCourseEntity[]> {\n    let internalEnpoint = this.endpoint_grupal_course;\n    return this.http.get<grupalCourseEntity[]>(internalEnpoint);\n  }\n\n  getCourseFiltredByName(courseName: any): Observable<grupalCourseEntity[]> {\n    let internalEnpoint = `${this.endpoint_grupal_course}/search/${courseName}`;\n    return this.http.get<grupalCourseEntity[]>(internalEnpoint);\n  }\n\n  makeInscriptionToGrupalCourse(data: any): Observable<any> {\n    let internalEndpoint = `${this.endpoint_grupal_course}/create/inscription`;\n    return this.http.post(internalEndpoint, data);\n  }\n\n  getAllgrupalCoursesFromStudent(studentId: any): Observable<grupalCourseEntity[]> {\n    let internalEndpoint = `${this.endpoint_grupal_course}/courses/${studentId}`;\n    return this.http.get<grupalCourseEntity[]>(internalEndpoint);\n  }\n\n  updateGrupalCourseInformation(grupalCourse: grupalCourseEntity, grupalCourseId: any): Observable<grupalCourseEntity> {\n    let internalEndpoint = `${this.endpoint_grupal_course}/${grupalCourseId}`;\n    return this.http.put<grupalCourseEntity>(internalEndpoint, grupalCourse);\n  }\n\n  createGrupalCourse(grupalCourse: grupalCourseEntity) {\n    let internalEndpoint = `${this.endpoint_grupal_course}`;\n    return this.http.post<grupalCourseEntity>(internalEndpoint, grupalCourse);\n  }\n\n  uploadGrupalCoursePicture(picture: File, id: any): Observable<grupalCourseEntity> {\n    let formData = new FormData();\n    let internalEnpoint = `${environment.grupalCourse.host}/upload/image`;\n    formData.append(\"grupalCourseImage\", picture);\n    formData.append(\"id\", id);\n    return this.http.post<grupalCourseEntity>(internalEnpoint, formData).pipe\n    (\n      map((response:any) => response as grupalCourseEntity)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  modal: boolean;\n  constructor() {\n    this.modal = false;\n   }\n\n  openModal() {\n    this.modal = true;\n   }\n\n  closeModal() { \n    this.modal = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { studentEntity } from '../interfaces/studentEntity';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  public environment = environment;\n  public endpoint_student = environment.student.host;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private router: Router) { }\n\n\n\n  registerStudent(student: studentEntity): Observable<studentEntity> {\n    return this.http.post<studentEntity>(this.endpoint_student, student);\n  }\n\n  validateStudent(username: string): Observable<any> {\n    return this.http.get<any>(`${this.endpoint_student}/verification/${username}`);\n  }\n\n  getAllStudents(): Observable<studentEntity[]> {\n    return this.http.get<studentEntity[]>(this.endpoint_student);\n  }\n\n  getStudentsById(id): Observable<studentEntity> {\n    return this.http.get<studentEntity>(`${this.endpoint_student}/${id}`);\n  }\n\n  getStudentTime(studentId: any): Observable<any> {\n    return this.http.get<any>(`${this.endpoint_student}/get/time/${studentId}`);\n  }\n\n  //POR TRABAJAR CON EL TEMA DE TRANSACCIONES\n  addStudentTime(): Observable<any> {\n    // return this.http.put<any>(`${this.endpoint_student}/set/time/${studentId}`);\n    return null;\n  }\n\n  setMoney(bodyObject: any): Observable<any> {\n    bodyObject.money;\n    bodyObject.studentId;\n    return this.http.get<any>(`${this.endpoint_student}/transfer/${bodyObject.money}/${bodyObject.studentId}`);\n  }\n\n  getStudentMoney(studentId: any): any {\n    let internalUrl = `${this.endpoint_student}/getMoney/${studentId}`;\n    return this.http.get<any>(internalUrl);\n\n  }\n\n\n\n  saveStudent() {\n\n    // if(this.isNoAutorizado(e)){\n    //   return throwError(e);\n    // }\n\n  }\n\n  makeInscriptionToGrupalCourse(idGruaplCourse: any, idStduent: any) {\n\n  }\n\n  updateStudent() {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\nimport { teacherEntity } from '../interfaces/teacherEntity';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeacherService {\n\n  public environment = environment;\n  public endpoint_teacher = environment.teacher.host;\n  public endpoint_student = environment.student.host;\n  public onChatToHeredate: any;\n\n  constructor(\n    private http: HttpClient,\n    private authService: AuthService,\n    private router: Router) { }\n\n\n\n  registerTeacher(Teacher: teacherEntity): Observable<teacherEntity> {\n    return this.http.post<teacherEntity>(this.endpoint_teacher, Teacher);\n  }\n\n  validateTeacher(username: string): Observable<any> {\n    return this.http.get<any>(`${this.endpoint_student}/verification/${username}`);\n  }\n\n  getAllTeachers(): Observable<teacherEntity[]> {\n    return this.http.get<teacherEntity[]>(this.endpoint_teacher);\n  }\n\n  getTeachersById(id: any): Observable<teacherEntity> {\n    return this.http.get<teacherEntity>(`${this.endpoint_teacher}/${id}`)\n  }\n\n  getTeacherTime(teacherId: any): Observable<any> {\n    return this.http.get<any>(`${this.endpoint_teacher}/get/time/${teacherId}`);\n  }\n\n  reduceTimeToStudentAndAddToTeacher(teacherId: any, studentId: any, timeOnClass: any): Observable<any> {\n    let body: any = {\n      'studentId': studentId,\n      'teacherId': teacherId,\n      'timeOnTransaction': timeOnClass\n    };\n    return this.http.post<any>(`${this.endpoint_student}/teacher/get/time`, body);\n  }\n\n  saveTeacher() {\n\n    // if(this.isNoAutorizado(e)){\n    //   return throwError(e);\n    // }\n\n  }\n\n  verifyOnChat(response: any) {\n    if (response) {\n      this.onChatToHeredate = true;\n    }\n  }\n\n  uploadTeacherPicture(picture: File, id: any): Observable<teacherEntity> {\n    let formData = new FormData();\n    let internalEnpoint = `${environment.teacher.host}/upload/image`;\n    formData.append(\"teacherImage\", picture);\n    formData.append(\"id\", id);\n    return this.http.post<teacherEntity>(internalEnpoint, formData).pipe\n      (\n        map((response: any) => response as teacherEntity)\n      );\n  }\n\n  enableTeacherPlatform(idTeacher: number): Observable<any> {\n    let disableUrl = `${this.endpoint_teacher}/enable/${idTeacher}`;\n    return this.http.get<any>(disableUrl);\n\n  }\n\n  disableTeacherPlatform(idTeacher: number): Observable<any> {\n    let disableUrl = `${this.endpoint_teacher}/disable/${idTeacher}`;\n    return this.http.get<any>(disableUrl);\n\n  }\n\n  updateTeacherProfile(objectToSend: any): Observable<any> {\n    let updateProfile = `${this.endpoint_teacher}/post/profile`;\n    return this.http.post<any>(updateProfile, objectToSend);\n\n  }\n\n  getTeachersDetails(): Observable<any> {\n    let teacherProfileEndpoint = `${this.endpoint_teacher}/get/information`;\n    return this.http.get<any>(teacherProfileEndpoint);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionService {\n\n  public environment = environment;\n  public endpoint_transaction = environment.transaction.host;\n  public endpoint_transaction_insert = environment.transfers.host;\n  public endpoint_transfers = environment.transfers.host;\n  public endpoint_retirements = environment.retirements.host;\n  public onChatToHeredate: any;\n  public idStudent: any;\n\n  constructor(private http: HttpClient) { }\n\n  getAllPaymentsOptions(): Observable<any[]> {\n    return this.http.get<any[]>(this.endpoint_transaction);\n  }\n\n  getAllListOfTransfers(idStudent): Observable<any[]> {\n    return this.http.get<any[]>(`${this.endpoint_transfers}/list/${idStudent}`);\n  }\n\n  makeTransaction(object: any): Observable<any> {\n    return this.http.post<any>(`${this.endpoint_transaction_insert}/create`, object);\n  }\n\n\n  getPlataformValues(): Observable<any> {\n    let internalUrl = `${this.endpoint_transfers}/admin`;\n    console.log(\"URL \" + internalUrl);\n    return this.http.get<any[]>(internalUrl);\n  }\n\n  createExcel(objectToSend: any): Observable<Blob> {\n    let internalUrl = `${this.endpoint_retirements}/excel`;\n    return this.http.post(internalUrl, objectToSend, { responseType: 'blob' });\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Client } from '@stomp/stompjs';\nimport * as SockJS from 'sockjs-client';\nimport { environment } from '../../environments/environment.prod';\nimport Sw, { SweetAlertIcon } from 'sweetalert2';\nimport { IfStmt, THIS_EXPR, ThrowStmt } from '@angular/compiler/src/output/output_ast';\nimport { Mensaje } from '../interfaces/Mensaje';\nimport { TeacherService } from './teacher.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebSocketService {\n\n  private autenticationState: boolean = false;\n  private endpoint_socket: string = environment.webSocket.host;\n  private idTeacher: any;\n  private idStudent: any;\n  private client: Client;\n  private response: any;\n  private responseTopicPrivateChat: any\n  private socket_teacher_state: any;\n  private socket_teacher: any = '/topic/teacher/socket';\n  private socket_teacher_on_chat: any = '/topic/teacher/state/chat';\n  private socket_teacher_on_chat_final: any = '/topic/private/chat/message';\n  private socket_teacher_on_chat_verification: any = '/topic/teacher/state/chat';\n  private socket_teacher_private_chat_chanel: any = '/topic/private/chanel/teacher';\n  private teacher_state: boolean;\n  private teacher_state_chat: boolean;\n  public mensaje: Mensaje = new Mensaje();\n  public mensajes: Mensaje[] = [];\n  public conectado: boolean = false;\n  public escribiendo: string = '';\n  private socket_teacher_notification_chanel: any = '/topic/notification/chanel/teacher'\n  private timer_channel_send = '/app/teacher/student/timer';\n  private timer_channel_subscribe = '/topic/teacher/student/timer';\n  public url_meeet_for_session: any = '';\n\n  constructor(\n    private teacherService: TeacherService\n  ) {\n    this.client = new Client();\n   }\n   \n  socketInitialConnection() {\n    this.idTeacher = sessionStorage.getItem('teacherId');\n    this.client.webSocketFactory = () => {\n      return new SockJS(this.endpoint_socket)\n    }\n    this.getIdTeacher(); // esto se ira\n    this.client.onConnect = (frame) => {\n\n      this.suscribeToTopicTeacherSocket();\n      this.suscribeToTopicTeacherState();\n      this.suscribeToTopicPrivateChatVerification(this.idTeacher);\n      this.suscribeToTopicPrivateChat('', '');\n      this.subcribeToTopicPrivateChatStudentTeacher('', '');\n      this.subcribeToPrivateChanelChatTeacher(this.idTeacher);\n      this.suscribeToTimerChanel('', '');\n      // this.subscrieToNotificationTeacherChanel('');\n \n    }\n\n    this.client.onDisconnect = (frame) => {\n    }\n\n    return this.client;\n  }\n\n\n  connectToSocket() {\n    this.client.activate();\n  }\n\n  desconnectFromSocket() {\n    this.client.deactivate();\n  }\n\n  sendEventToAgent(endpoint: any, payload: any, extra?: any) {\n    if (extra) {\n      let generalObject: any = {\n        id: 0,\n        idStudent: payload.idStudent,\n        onChat: payload.onChat,\n        tipo: extra.tipo\n      };\n      this.client.publish({\n        destination: endpoint,\n        body: JSON.stringify(generalObject)\n      });\n    } else {\n      this.client.publish({\n        destination: endpoint,\n        body: JSON.stringify(payload)\n      });\n    }\n  }\n\n  getResponse() {\n    return this.response;\n  }\n\n  getStateOfTeacher() {\n    return this.teacher_state;\n  }\n\n  getStateOfTeacherChat() {\n    return this.teacher_state_chat;\n  }\n\n  getResponseTopicPrivateChat() {\n    return this.responseTopicPrivateChat;\n  }\n\n\n  // TOPICOS PARA LA INSCRIPCION ENTRE EL AGENTE Y EL CLIENTE\n  suscribeToTopicTeacherSocket() {\n    this.client.subscribe(this.socket_teacher, e => {\n      this.response = JSON.parse(e.body);\n    });\n  }\n\n  suscribeToTimerChanel(idTeacher: any, idStudent: any ) {\n    let endpointForPrivateChat = `${this.timer_channel_subscribe}/${idTeacher}/${idStudent}`\n    this.client.subscribe(endpointForPrivateChat, e => {\n      this.response = JSON.parse(e.body);\n    });\n  }\n  suscribeToTopicTeacherState() {\n    this.client.subscribe(this.socket_teacher_state, e => {\n      let state_teacher = JSON.parse(e.body);\n      this.teacher_state = state_teacher;\n    });\n  }\n\n  suscribeToTopicPrivateChat(idTeacher: any, idStudent: any) {\n    let endpointForPrivateChat = `${this.socket_teacher_on_chat}/${idTeacher}/${idStudent}`\n    this.client.subscribe(endpointForPrivateChat, e => {\n      let state_on_chat = JSON.parse(e.body);\n    });\n  }\n\n\n  suscribeToTopicPrivateChatVerification(idTeacher: any) {\n    let endpointForPrivateChatVerification = `${this.socket_teacher_on_chat_verification}/${idTeacher}`\n    this.client.subscribe(endpointForPrivateChatVerification, e => {\n      let state_on_chat = JSON.parse(e.body);\n      return this.teacher_state_chat = state_on_chat;\n    });\n  }\n\n  subcribeToTopicPrivateChatStudentTeacher(idTeacher: any, idStudent: any) {\n    let endpointForPrivateChat = `${this.socket_teacher_on_chat_final}/${idTeacher}/${idStudent}`\n\n    this.client.subscribe(endpointForPrivateChat, e => {\n      let mensaje: Mensaje = JSON.parse(e.body) as Mensaje;\n      mensaje.fecha = new Date(mensaje.fecha);\n      if (!this.mensaje.color && mensaje.tipo == 'NUEVO_USUARIO' && this.mensaje.username == mensaje.username) {\n        this.mensaje.color = mensaje.color;\n      }\n      this.mensajes.push(mensaje);\n    });\n    return this.mensajes;\n  }\n\n  subcribeToPrivateChanelChatTeacher(idTeacher: any) {\n    let globalIdTeacher = 0;\n    if (idTeacher !== null || idTeacher !== 'null') {\n      globalIdTeacher = idTeacher;\n\n    } else {\n      globalIdTeacher = this.idTeacher;\n    }\n    let endpointPrivateChanelChatTeacher = `${this.socket_teacher_private_chat_chanel}/${globalIdTeacher}`;\n    this.client.subscribe(endpointPrivateChanelChatTeacher, e => {\n      let reponseFromAgent = JSON.parse(e.body);\n      let mensaje: any = reponseFromAgent.body as any;\n      mensaje.fecha = new Date(mensaje.fecha);\n      if (!this.mensaje.color && mensaje.tipo == 'NUEVO_USUARIO' && this.mensaje.username == mensaje.username) {\n        this.mensaje.color = mensaje.color;\n      }\n      this.mensajes.push(mensaje);\n    });\n    return this.mensajes;\n  }\n\n\n\n\n\n  getIdTeacher() {\n    if (this.idTeacher != 'null') {\n      this.socket_teacher_state = `/topic/teacher/state/${this.idTeacher}`;\n    }\n  }\n\n  getIdStudent(IDStudent?: any) {\n    return IDStudent;\n  }\n\n  getMessages() {\n    return this.mensajes;\n  }\n}\n","import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport function passwordValidation(): ValidatorFn {\n  return (control: AbstractControl) => {\n    const passwordValidationDirective = new PasswordDirective();\n    return passwordValidationDirective.validate(control);\n  }\n }\n\n\n@Directive({\n  selector: '[passwordValidation]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: PasswordDirective, multi: true }]\n\n})\nexport class PasswordDirective implements Validator {\n\n  knowPasswords = ['123456', 'querty', '123456789'];\n\n  validate(control: import(\"@angular/forms\").AbstractControl): import(\"@angular/forms\").ValidationErrors {\n    const password = <string>control.value;\n\n    if (!password) { return; }\n    if (password.length < 4) { return; }\n\n    if (this.knowPasswords.indexOf(password) !== -1) {\n      return { 'passwordValidation': { 'message': 'Escoge un mejor password' } }\n    }\n\n    if (password === password.toLowerCase()) {\n      return { 'passwordValidation': { 'message': 'Tu password debe de contener mayúsculas' } }\n    }\n\n    if (password === password.toUpperCase()) {\n      return { 'passwordValidation': { 'message': 'Tu password debe de contener minúsculas' } }\n    }\n\n    if (!/\\d/.test(password)) {\n      return { 'passwordValidation': { 'message': 'Tu password debe de incluir un caracter numérico' } }\n    }\n\n    return null;\n\n\n\n  }\n\n  constructor() { }\n\n}","import { Directive, Injectable } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, AsyncValidator } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport { StudentService } from '../services/student.service';\n\n@Directive({\n  selector: '[usernameUnico]',\n  providers: [{ provide: NG_ASYNC_VALIDATORS, useExisting: UsernameUniqueDirective, multi: true }]\n})\nexport class UsernameUniqueDirective implements AsyncValidator {\n\n  constructor(private studentService: StudentService) { }\n\n\n  validate(control: import(\"@angular/forms\").AbstractControl): Promise<import(\"@angular/forms\").ValidationErrors> | import(\"rxjs\").Observable<import(\"@angular/forms\").ValidationErrors> {\n    const username = control.value;\n    return this.studentService.validateStudent(username).pipe(\n      map((usernameArr) => {\n\n        if (usernameArr.username == null) {\n          return;\n        }\n        else if (usernameArr.username.indexOf(username) !== -1) {\n          return { usernameUnico: true };\n        }\n      })\n    );\n  }\n\n\n\n}\n\n@Injectable({ providedIn: 'root' })\nexport class UsernameUnicoService implements AsyncValidator {\n  constructor(private studentService: StudentService) { }\n\n  validate(control: import(\"@angular/forms\").AbstractControl): Promise<import(\"@angular/forms\").ValidationErrors> | import(\"rxjs\").Observable<import(\"@angular/forms\").ValidationErrors> {\n    const usernameUniqueDirective = new UsernameUniqueDirective(this.studentService);\n    return usernameUniqueDirective.validate(control);\n  }\n}","export const environment = {\r\n  production: false,\r\n\r\n  webSocket: {\r\n    host: 'http://3.137.213.20:8085/websocket'\r\n  },\r\n\r\n  teacher: {\r\n    host: 'http://3.137.213.20:8085/api/teacher',\r\n    host_image: 'http://3.137.213.20:8085/teacher/upload/image'\r\n  },\r\n\r\n  student: {\r\n    host: 'http://3.137.213.20:8085/api/student'\r\n  },\r\n\r\n  transaction: {\r\n    host: 'http://3.137.213.20:8085/api/payment'\r\n  },\r\n\r\n  transfers: {\r\n    host: 'http://3.137.213.20:8085/api/transfer'\r\n  },\r\n\r\n  subject: {\r\n    host: 'http://3.137.213.20:8085/api/subject'\r\n  },\r\n\r\n  course: {\r\n    host: 'http://3.137.213.20:8085/api/course',\r\n    host_image: 'http://3.137.213.20:8085/api/course/upload/image'\r\n  },\r\n\r\n  grupalCourse: {\r\n    host: 'http://3.137.213.20:8085/api/grupal/course',\r\n    host_image: 'http://3.137.213.20:8085/api/grupal/course/image'\r\n  },\r\n\r\n  feedBack: {\r\n    host: 'http://3.137.213.20:8085/api/feed-back',\r\n  },\r\n\r\n  retirements: {\r\n    host: 'http://3.137.213.20:8085/api/retirement',\r\n  },\r\n\r\n  jwt: {\r\n    host: 'http://3.137.213.20:8085/oauth/token'\r\n  },\r\n\r\n  appCredentials: {\r\n    name: 'angularapp',\r\n    pass: '12345'\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n  webSocket: {\r\n    host: 'http://3.137.213.20:8085/websocket'\r\n  },\r\n\r\n  teacher: {\r\n    host: 'http://3.137.213.20:8085/api/teacher',\r\n    host_image: 'http://3.137.213.20:8085/api/teacher/upload/image'\r\n  },\r\n\r\n  student: {\r\n    host: 'http://3.137.213.20:8085/api/student'\r\n  },\r\n\r\n  transaction: {\r\n    host: 'http://3.137.213.20:8085/api/payment'\r\n  },\r\n\r\n  transfers: {\r\n    host: 'http://3.137.213.20:8085/api/transfer'\r\n  },\r\n\r\n  subject: {\r\n    host: 'http://3.137.213.20:8085/api/subject'\r\n  },\r\n\r\n  course: {\r\n    host: 'http://3.137.213.20:8085/api/course',\r\n    host_image: 'http://3.137.213.20:8085/api/course/upload/image'\r\n  },\r\n\r\n  grupalCourse: {\r\n    host: 'http://3.137.213.20:8085/api/grupal/course',\r\n    host_image: 'http://3.137.213.20:8085/api/grupal/course/image'\r\n  },\r\n\r\n  feedBack: {\r\n    host: 'http://3.137.213.20:8085/api/feed-back',\r\n  },\r\n\r\n  retirements: {\r\n    host: 'http://3.137.213.20:8085/api/retirement',\r\n  },\r\n\r\n  jwt: {\r\n    host: 'http://3.137.213.20:8085/oauth/token'\r\n  },\r\n\r\n  appCredentials: {\r\n    name: 'angularapp' ,\r\n    pass: '12345'\r\n  }\r\n\r\n\r\n};\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}